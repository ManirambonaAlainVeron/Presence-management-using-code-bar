using iTextSharp.text.pdf;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using iTextSharp.text;
using System.IO.MemoryMappedFiles;
using MySql.Data.MySqlClient;
using System.Diagnostics.CodeAnalysis;
//using IronBarCode;
using System.Web;


namespace GestionPresence
{
    class Class_Reports
    {
        MySqlConnection conn;
        //===================FONT_DEFINING======================================//
        public static iTextSharp.text.pdf.BaseFont bfTimes = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, false);

        iTextSharp.text.Font font_bold_8_white = new iTextSharp.text.Font(bfTimes, 8, iTextSharp.text.Font.BOLD, iTextSharp.text.BaseColor.WHITE);

        iTextSharp.text.Font font_bold_8_blue = new iTextSharp.text.Font(bfTimes, 8, iTextSharp.text.Font.BOLD, iTextSharp.text.BaseColor.BLUE);
        iTextSharp.text.Font font_bold_8_black = new iTextSharp.text.Font(bfTimes, 8, iTextSharp.text.Font.BOLD, iTextSharp.text.BaseColor.BLACK);
        iTextSharp.text.Font font_normal_7_black = new iTextSharp.text.Font(bfTimes, 7, iTextSharp.text.Font.NORMAL, iTextSharp.text.BaseColor.BLACK);
        iTextSharp.text.Font font_underlined_9_bold = new iTextSharp.text.Font(bfTimes, 9, iTextSharp.text.Font.BOLD | iTextSharp.text.Font.UNDERLINE, BaseColor.BLACK);

        Font font_normal_12 = FontFactory.GetFont("Lucida Sans", 12, Font.NORMAL);
        Font font_normal_11 = FontFactory.GetFont("Lucida Sans", 11, Font.NORMAL);
        Font font_normal_10 = FontFactory.GetFont("Lucida Sans", 10, Font.NORMAL);
        Font font_normal_9 = FontFactory.GetFont("Lucida Sans", 9, Font.NORMAL);
        Font font_normal_8 = FontFactory.GetFont("Lucida Sans", 8, Font.NORMAL);
        Font font_normal_7 = FontFactory.GetFont("Lucida Sans", 7, Font.NORMAL);
        Font font_normal_6 = FontFactory.GetFont("Lucida Sans", 6, Font.NORMAL);
        Font font_normal_5 = FontFactory.GetFont("Lucida Sans", 5, Font.NORMAL);
        Font font_normal_4 = FontFactory.GetFont("Lucida Sans", 4, Font.NORMAL);


        Font font_bold_12 = FontFactory.GetFont("Lucida Sans", 12, Font.BOLD);
        Font font_bold_11 = FontFactory.GetFont("Lucida Sans", 11, Font.BOLD);
        Font font_bold_10 = FontFactory.GetFont("Lucida Sans", 10, Font.BOLD);
        Font font_bold_9 = FontFactory.GetFont("Lucida Sans", 9, Font.BOLD);
        Font font_bold_8 = FontFactory.GetFont("Lucida Sans", 8, Font.BOLD);
        Font font_bold_7 = FontFactory.GetFont("Lucida Sans", 7, Font.BOLD);
        Font font_bold_6 = FontFactory.GetFont("Lucida Sans", 6, Font.BOLD);
        Font font_bold_5 = FontFactory.GetFont("Lucida Sans", 5, Font.BOLD);
        Font font_bold_4 = FontFactory.GetFont("Lucida Sans", 4, Font.BOLD);



        Font font_normal_underlined_10 = FontFactory.GetFont("Lucida Sans", 10, Font.NORMAL | Font.UNDERLINE);
        Font font_normal_underlined_9 = FontFactory.GetFont("Lucida Sans", 9, Font.NORMAL | Font.UNDERLINE);
        Font font_normal_underlined_8 = FontFactory.GetFont("Lucida Sans", 8, Font.NORMAL | Font.UNDERLINE);

        Font font_bold_underlined_10 = FontFactory.GetFont("Lucida Sans", 10, Font.BOLD | Font.UNDERLINE);
        Font font_bold_underlined_9 = FontFactory.GetFont("Lucida Sans", 9, Font.BOLD | Font.UNDERLINE);
        Font font_bold_underlined_8 = FontFactory.GetFont("Lucida Sans", 8, Font.BOLD | Font.UNDERLINE);



        //===================PRELIMINERIES======================================//
        public class PageEventHelper : PdfPageEventHelper
        {
            PdfContentByte cb;
            PdfTemplate template;


            public override void OnOpenDocument(PdfWriter writer, Document document)
            {
                cb = writer.DirectContent;
                template = cb.CreateTemplate(50, 50);
            }

            public override void OnEndPage(PdfWriter writer, Document document)
            {
                base.OnEndPage(writer, document);

                int pageN = writer.PageNumber;
                String text = "Page " + pageN.ToString() + " of ";
                //float len = this.RunDateFont.BaseFont.GetWidthPoint(text, this.RunDateFont.Size);

                iTextSharp.text.Rectangle pageSize = document.PageSize;

                cb.SetRGBColorFill(100, 100, 100);

                cb.BeginText();
                //cb.SetFontAndSize(this.RunDateFont.BaseFont, this.RunDateFont.Size);
                cb.SetTextMatrix(document.LeftMargin, pageSize.GetBottom(document.BottomMargin));
                cb.ShowText(text);

                cb.EndText();

                cb.AddTemplate(template, document.LeftMargin, pageSize.GetBottom(document.BottomMargin));
            }

            public override void OnCloseDocument(PdfWriter writer, Document document)
            {
                base.OnCloseDocument(writer, document);

                template.BeginText();
                //template.SetFontAndSize(this.RunDateFont.BaseFont, this.RunDateFont.Size);
                template.SetTextMatrix(0, 0);
                template.ShowText("" + (writer.PageNumber - 1));
                template.EndText();
            }
        }
        public string generateID()
        {
            DateTime dt = DateTime.Now;
            int annee = dt.Year;
            int mois = dt.Month;
            int jour = dt.Day;
            int heure = dt.Hour;
            int min = dt.Minute;
            int sec = dt.Month;
            string date = jour + "-" + mois + "-" + annee + "_" + heure + "-" + min + "-" + sec;
            return date;
        }
        public partial class Foot : PdfPageEventHelper
        {

            public override void OnEndPage(PdfWriter writer, Document doc)
            {
                string coordonnee = Load_footer_details();
                Paragraph footer = new Paragraph(coordonnee, FontFactory.GetFont(FontFactory.HELVETICA, 6, iTextSharp.text.Font.NORMAL));

                footer.Alignment = Element.ALIGN_RIGHT;
                PdfPTable footerTable = new PdfPTable(1);
                footerTable.TotalWidth = doc.PageSize.Width;
                footerTable.HorizontalAlignment = Element.ALIGN_CENTER;

                PdfPCell cell = new PdfPCell(footer);
                cell.BorderWidthTop = 1;
                cell.BorderWidthRight = 0;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthBottom = 0;
                cell.HorizontalAlignment = Element.ALIGN_CENTER;

                /*cell.PaddingLeft = 10;
                cell.PaddingRight = 10;*/

                footerTable.AddCell(cell);
                footerTable.WriteSelectedRows(0, -1, 0, 20, writer.DirectContent);
            }

            private static string Load_footer_details()
            {
                string institution_sigle = "";
                try
                {
                    /*conn = new MySqlConnection(Authentification.MyString);
                    conn.Open();
                    string req = "SELECT sigle FROM institution";
                    MySqlCommand cmd = new MySqlCommand(req, conn);
                    MySqlDataReader dr = cmd.ExecuteReader();
                    while (dr.Read())
                    {
                        institution_sigle = "BMDSys\u2122 \u00A9ICT Group,  Version achetée par " + dr.GetString(0);
                    }
                    dr.Close();
                    conn.Close();*/
                }
                catch (Exception ex)
                {
                    //MessageBox.Show(ex.Message);
                }
                return institution_sigle;
            }
        }
        public static string siege = "", representant = "", site = "", telephone = "", b_postale = "";
        void AddPageNumber(string fileIn, string fileOut)
        {
            byte[] bytes = File.ReadAllBytes(fileIn);
            Font blackFont = FontFactory.GetFont("Arial", 12, Font.NORMAL, BaseColor.BLACK);
            using (MemoryStream stream = new MemoryStream())
            {
                PdfReader reader = new PdfReader(bytes);
                using (PdfStamper stamper = new PdfStamper(reader, stream))
                {
                    int pages = reader.NumberOfPages;
                    for (int i = 1; i <= pages; i++)
                    {
                        ColumnText.ShowTextAligned(stamper.GetUnderContent(i), Element.ALIGN_LEFT, new Phrase("Universite de NGOZI [www.univ-ngozi.bi, ungozi@univ-ngozi.bi, (+257) 22 30 22 29", blackFont), 15f, 568f, 0);
                        ColumnText.ShowTextAligned(stamper.GetUnderContent(i), Element.ALIGN_RIGHT, new Phrase(i.ToString(), blackFont), 568f, 15f, 0);
                    }
                }
                bytes = stream.ToArray();
            }
            File.WriteAllBytes(fileOut, bytes);
        }

        private static void Create_Folder()
        {
            string dossier = "BMDSys";
            string path = System.IO.Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.Desktop), dossier);
            if (!System.IO.Directory.Exists(path))
            {
                try
                {
                    System.IO.Directory.CreateDirectory(path);
                }
                catch (IOException ie)
                {
                    Console.WriteLine("IO Error: " + ie.Message);
                }
                catch (Exception e)
                {
                    Console.WriteLine("General Error: " + e.Message);
                }
            }
        }

        public static string Load_Adress(MySqlConnection conn)
        {
            string addresse = "";
            try
            {
                string req = "SELECT site, siege, telephone, email, representant,b_postale FROM institution";
                MySqlCommand cmd = new MySqlCommand(req, conn);
                MySqlDataReader dr = cmd.ExecuteReader();
                while (dr.Read())
                {
                    addresse = dr.GetString(0) + "-" + dr.GetString(1) + "-" + dr.GetString(2) + "-" + dr.GetString(5);
                    //site = dr.GetString(0);
                    //siege = dr.GetString(1);
                    //telephone = dr.GetString(2);
                    //representant = dr.GetString(3);
                }
                dr.Close();
            }
            catch (Exception ex)
            {
                //MessageBox.Show(ex.Message);
            }
            return addresse;
        }
        public static string Load_Institution(MySqlConnection conn)
        {
            string institution = "";
            try
            {
                string req = "SELECT nom_institution FROM institution";
                MySqlCommand cmd = new MySqlCommand(req, conn);
                MySqlDataReader dr = cmd.ExecuteReader();
                while (dr.Read())
                {
                    institution = dr.GetString(0);
                }
                dr.Close();
            }
            catch (Exception ex)
            {
                //MessageBox.Show(ex.Message);
            }
            return institution;
        }
        public static iTextSharp.text.Image Get_LogoImage(MySqlConnection conn)
        {
            System.Drawing.Image img = null;
            int bufferSize = 1000;
            try
            {
                string SQL = "Select logo from institution where id_institution=@id_institution ";
                MySqlCommand cmd = new MySqlCommand(SQL, conn);
                cmd.Parameters.AddWithValue("@id_institution", 1);
                MySqlDataReader dr = cmd.ExecuteReader();
                while (dr.Read())
                {
                    Byte[] imgg = (byte[])(dr["logo"]);
                    if (imgg == null)
                        img = null;
                    else
                    {
                        MemoryStream mstream = new MemoryStream(imgg);
                        img = System.Drawing.Image.FromStream(mstream);
                    }
                }
                dr.Close();

            }
            catch (Exception ex)
            {
                //MessageBox.Show("Connection Error!\n" + ex.Message, "Error Message", //MessageBox.uttons.OK, //MessageBox.con.Error);
            }
            iTextSharp.text.Image myImage1 = iTextSharp.text.Image.GetInstance(img, iTextSharp.text.BaseColor.BLACK);
            myImage1.ScaleAbsolute(65, 65);
            return myImage1;
        }
        private PdfPTable first_header(MySqlConnection conn, string universite, ref PdfPCell cell, string fac)
        {
            string faculte = fac;
            PdfPTable table1 = new PdfPTable(5);
            float[] colwith1 = { 10f, 9f, 10f, 10f, 10f };
            table1.SetWidths(colwith1);


            iTextSharp.text.Image myImage1 = Class_Reports.Get_LogoImage(conn);
            cell = new PdfPCell(myImage1);
            cell.HorizontalAlignment = Element.ALIGN_RIGHT;
            cell.BorderWidth = 0;
            cell.Colspan = 2;
            cell.Rowspan = 4;
            table1.AddCell(cell);

            cell = new PdfPCell(new Phrase("  ", font_bold_9));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 3;
            table1.AddCell(cell);

            cell = new PdfPCell(new Phrase(universite, font_bold_9));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 2;
            table1.AddCell(cell);

            cell = new PdfPCell(new Phrase(" ", font_bold_9));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            table1.AddCell(cell);

            cell = new PdfPCell(new Phrase(b_postale, font_bold_9));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 2;
            table1.AddCell(cell);

            cell = new PdfPCell(new Phrase(" ", font_bold_9));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            table1.AddCell(cell);

            cell = new PdfPCell(new Phrase(faculte, font_bold_9));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 2;
            table1.AddCell(cell);

            cell = new PdfPCell(new Phrase(" ", font_bold_9));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            table1.AddCell(cell);

            cell = new PdfPCell(new Phrase("--------------------------------------------------------------------------", font_bold_10));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 5;
            table1.AddCell(cell);


            return table1;
        }

        //===================PRELIMINAIRES A LA DELIBERATION======================================//
        public int Count_Redoublement(int nbre_redoublement, int id_etudiant, MySqlConnection conn)
        {
            string rae = "SELECT COUNT(*) FROM etudiant_inscription WHERE id_etudiant=@id_etudiant AND id_session=@id_session AND redoublement=@redoublement";
            MySqlCommand cman = new MySqlCommand(rae, conn);
            cman.Parameters.AddWithValue("@id_etudiant", id_etudiant);
            cman.Parameters.AddWithValue("@redoublement", "Oui");
            cman.Parameters.AddWithValue("@id_session", 1);
            nbre_redoublement = Convert.ToInt32(cman.ExecuteScalar());
            return nbre_redoublement;
        }
        public int Count_Change_filliere(int nbre_change_filiere, int id_etudiant, MySqlConnection conn)
        {
            string rae1 = "SELECT COUNT(*) FROM etudiant_inscription WHERE id_etudiant=@id_etudiant AND id_session=@id_session AND redoublement=@redoublement";
            MySqlCommand cman1 = new MySqlCommand(rae1, conn);
            cman1.Parameters.AddWithValue("@id_etudiant", id_etudiant);
            cman1.Parameters.AddWithValue("@redoublement", "Oui");
            cman1.Parameters.AddWithValue("@id_session", 1);
            nbre_change_filiere = Convert.ToInt32(cman1.ExecuteScalar());
            return nbre_change_filiere;
        }
        public int Count_ecue_nv_anterieur(int id_annee, int id_etudiant, MySqlConnection conn)
        {
            string sqx = "SELECT COUNT(*) " +
                " FROM (unite INNER JOIN cours ON unite.id_unite = cours.id_unite) INNER JOIN etudiant_note_complement ON cours.id_cours = etudiant_note_complement.id_cours" +
                " WHERE unite.id_annee<@id_annee AND etudiant_note_complement.id_etudiant=@id_etudiant AND etudiant_note_complement.etat_validation=@etat_validation";
            MySqlCommand cmx = new MySqlCommand(sqx, conn);
            cmx.Parameters.AddWithValue("@id_annee", id_annee);
            cmx.Parameters.AddWithValue("@id_etudiant", id_etudiant);
            cmx.Parameters.AddWithValue("@etat_validation", "Non");
            int ecue_nv_anterieur = Convert.ToInt32(cmx.ExecuteScalar());
            return ecue_nv_anterieur;
        }
        public string Check_Fraude(int id_annee, string fraude, int id_etudiant, MySqlConnection conn)
        {
            string sqmoo = "SELECT COUNT(*) FROM etudiant_fraude WHERE id_etudiant=@id_etudiant AND id_annee=@id_annee";
            MySqlCommand cmoo = new MySqlCommand(sqmoo, conn);
            cmoo.Parameters.AddWithValue("@id_annee", id_annee);
            cmoo.Parameters.AddWithValue("@id_etudiant", id_etudiant);
            //cmoo.Parameters.AddWithValue("@id_session", id_session);
            int exist_fraude = Convert.ToInt32(cmoo.ExecuteScalar());
            if (exist_fraude == 0)
            {
                fraude = "Non";
            }
            else
            {
                fraude = "Oui";
            }
            return fraude;
        }
        public string Check_Sanction(int id_annee, string sanction, int id_etudiant, MySqlConnection conn)
        {
            string sqmooo = "SELECT COUNT(*) FROM etudiant_sanction WHERE id_etudiant=@id_etudiant AND id_annee=@id_annee";
            MySqlCommand cmooo = new MySqlCommand(sqmooo, conn);
            cmooo.Parameters.AddWithValue("@id_annee", id_annee);
            cmooo.Parameters.AddWithValue("@id_etudiant", id_etudiant);
            //cmooo.Parameters.AddWithValue("@id_session", id_session);
            int exist_SD = Convert.ToInt32(cmooo.ExecuteScalar());
            if (exist_SD == 0)
            {
                sanction = "Non";
            }
            else
            {
                sanction = "Oui";
            }
            return sanction;
        }
        public string Load_Justificatif_Examen_Rate(int id_annee, int id_session, string justification, int id_etudiant, MySqlConnection conn)
        {
            string sqmoooo = "SELECT COUNT(*) FROM etudiant_rate_examen_justifier WHERE id_etudiant=@id_etudiant AND id_session=@id_session AND id_annee=@id_annee";
            MySqlCommand cmoooo = new MySqlCommand(sqmoooo, conn);
            cmoooo.Parameters.AddWithValue("@id_annee", id_annee);
            cmoooo.Parameters.AddWithValue("@id_etudiant", id_etudiant);
            cmoooo.Parameters.AddWithValue("@id_session", id_session);
            int exist_rate_justification = Convert.ToInt32(cmoooo.ExecuteScalar());
            if (exist_rate_justification == 0)
            {
                justification = "Non";
            }
            else
            {
                justification = "Oui";
            }
            return justification;
        }
        public void Decision_1ere_Session(int id_session, int ecue_rate, int ue_nv, int nbre_unite, int total_cours, double etu_pourcentage, string fraude, string sanction, ref string pourca, ref int id_decision, ref string decisio, ref string sigl, MySqlConnection conn)
        {
            string[] Decision_ID, Decision, sigle, pourcentage, UNV, ER, MV, NR, CF, Fraude, SD, Finalite_ID, decision;
            string sqdec = "SELECT COUNT(DISTINCT id_decision) FROM deliberation_condition WHERE id_session=@id_session";
            MySqlCommand cmdec = new MySqlCommand(sqdec, conn);
            cmdec.Parameters.AddWithValue("@id_session", id_session);
            int nbre_decision = Convert.ToInt32(cmdec.ExecuteScalar());

            Decision_ID = new string[nbre_decision];
            Decision = new string[nbre_decision];
            sigle = new string[nbre_decision];
            pourcentage = new string[nbre_decision];
            UNV = new string[nbre_decision];
            ER = new string[nbre_decision];
            MV = new string[nbre_decision];
            NR = new string[nbre_decision];
            CF = new string[nbre_decision];
            Fraude = new string[nbre_decision];
            SD = new string[nbre_decision];
            Finalite_ID = new string[nbre_decision];

            string sqdec1 = "SELECT id_decision, decision, sigle, pourcentage, n_uenv, n_rate, motif_valable, n_redoublement, n_change_filliere, fraude, sanction_disciplinaire, id_finalite" +
                " FROM deliberation_condition" +
                " WHERE id_session=@id_session";
            MySqlCommand cmdec1 = new MySqlCommand(sqdec1, conn);
            cmdec1.Parameters.AddWithValue("@id_session", id_session);
            MySqlDataReader dec = cmdec1.ExecuteReader();
            int n = 0;
            while (dec.Read() && n < nbre_decision)
            {
                Decision_ID[n] = string.Format("{0}", dec.GetInt32(0).ToString());
                Decision[n] = string.Format("{0}", dec.GetString(1));
                sigle[n] = string.Format("{0}", dec.GetString(2));
                pourcentage[n] = string.Format("{0}", dec.GetString(3));
                UNV[n] = string.Format("{0}", dec.GetString(4));
                ER[n] = string.Format("{0}", dec.GetString(5));
                MV[n] = string.Format("{0}", dec.GetString(6));
                NR[n] = string.Format("{0}", dec.GetString(7));
                CF[n] = string.Format("{0}", dec.GetString(8));
                Fraude[n] = string.Format("{0}", dec.GetString(9));
                SD[n] = string.Format("{0}", dec.GetString(10));
                Finalite_ID[n] = string.Format("{0}", dec.GetInt32(11).ToString());
                n++;
            }
            dec.Close();

            if (fraude == "Oui" || sanction == "Oui")
            {
                if (fraude == "Oui")
                {
                    for (int deci = 0; deci < nbre_decision; deci++)
                    {
                        if (Fraude[deci].Contains(fraude))
                        {
                            id_decision = Convert.ToInt32(Decision_ID[deci]);
                            decisio = Decision[deci];
                            sigl = sigle[deci];
                            break;
                        }
                    }
                }
                if (sanction == "Oui")
                {
                    for (int deci = 0; deci < nbre_decision; deci++)
                    {
                        if (SD[deci].Contains(sanction))
                        {
                            id_decision = Convert.ToInt32(Decision_ID[deci]);
                            decisio = Decision[deci];
                            sigl = sigle[deci];
                            break;
                        }
                    }
                }
            }
            else
            {
                if (ecue_rate > 0)
                {
                    if (ecue_rate == total_cours)
                    {
                        for (int deci = 0; deci < nbre_decision; deci++)
                        {
                            if (ER[deci] == "TOUS")
                            {
                                id_decision = Convert.ToInt32(Decision_ID[deci]);
                                decisio = Decision[deci];
                                sigl = sigle[deci];
                                break;
                            }
                        }
                    }
                    else
                    {
                        for (int deci = 0; deci < nbre_decision; deci++)
                        {
                            if (ER[deci] == ">=1")
                            {
                                id_decision = Convert.ToInt32(Decision_ID[deci]);
                                decisio = Decision[deci];
                                sigl = sigle[deci];
                                break;
                            }
                        }
                    }
                }
                else
                {
                    if (ue_nv > 0)
                    {
                        for (int deci = 0; deci < nbre_decision; deci++)
                        {
                            int diff = nbre_unite - ue_nv;
                            if (UNV[deci] == "TOUTES" && diff == 0)
                            {
                                id_decision = Convert.ToInt32(Decision_ID[deci]);
                                decisio = Decision[deci];
                                sigl = sigle[deci];
                                break;
                            }
                            else if (UNV[deci] == ">=1" && diff > 0)
                            {
                                id_decision = Convert.ToInt32(Decision_ID[deci]);
                                decisio = Decision[deci];
                                sigl = sigle[deci];
                                break;
                            }
                        }
                    }
                    else
                    {
                        for (int deci = 0; deci < nbre_decision; deci++)
                        {
                            pourca = pourcentage[deci];
                            string[] prc = pourca.Split('-');

                            double p1 = Convert.ToDouble(prc[0]);
                            double p2 = Convert.ToDouble(prc[1]);

                            if (etu_pourcentage >= p1 && etu_pourcentage < 100)
                            {
                                id_decision = Convert.ToInt32(Decision_ID[deci]);
                                decisio = Decision[deci];
                                sigl = sigle[deci];
                                break;
                            }
                            break;
                        }
                    }

                }
            }
        }
        public void Decision_2eme_Session(int id_session, int redoub_autorise, int change_filiere_autorise, int max_ecue_nv_par_annee, int cumul_ecue_nv, int ecue_rate, int ecue_nv, int ue_nv, double etu_pourcentage, string justification, string fraude, string sanction, int nbre_change_filiere, int nbre_redoublement, ref int id_decision, ref string decisio, ref string sigl, MySqlConnection conn, int ecue_nv_anterieur)
        {
            string[] Decision_ID, Decision, sigle, pourcentage, UNV, ER, MV, NR, CF, Fraude, SD, Finalite_ID, decision;
            string sqdec = "SELECT COUNT(DISTINCT id_decision) FROM deliberation_condition WHERE id_session=@id_session";
            MySqlCommand cmdec = new MySqlCommand(sqdec, conn);
            cmdec.Parameters.AddWithValue("@id_session", id_session);
            int nbre_decision = Convert.ToInt32(cmdec.ExecuteScalar());

            Decision_ID = new string[nbre_decision];
            Decision = new string[nbre_decision];
            sigle = new string[nbre_decision];
            pourcentage = new string[nbre_decision];
            UNV = new string[nbre_decision];
            ER = new string[nbre_decision];
            MV = new string[nbre_decision];
            NR = new string[nbre_decision];
            CF = new string[nbre_decision];
            Fraude = new string[nbre_decision];
            SD = new string[nbre_decision];
            Finalite_ID = new string[nbre_decision];

            string sqdec1 = "SELECT id_decision, decision, sigle, pourcentage, n_uenv, n_rate, motif_valable, n_redoublement, n_change_filliere, fraude, sanction_disciplinaire, id_finalite" +
                " FROM deliberation_condition" +
                " WHERE id_session=@id_session";
            MySqlCommand cmdec1 = new MySqlCommand(sqdec1, conn);
            cmdec1.Parameters.AddWithValue("@id_session", id_session);
            MySqlDataReader dec = cmdec1.ExecuteReader();
            int n = 0;
            while (dec.Read() && n < nbre_decision)
            {
                Decision_ID[n] = string.Format("{0}", dec.GetInt32(0).ToString());
                Decision[n] = string.Format("{0}", dec.GetString(1));
                sigle[n] = string.Format("{0}", dec.GetString(2));
                pourcentage[n] = string.Format("{0}", dec.GetString(3));
                UNV[n] = string.Format("{0}", dec.GetString(4));
                ER[n] = string.Format("{0}", dec.GetString(5));
                MV[n] = string.Format("{0}", dec.GetString(6));
                NR[n] = string.Format("{0}", dec.GetString(7));
                CF[n] = string.Format("{0}", dec.GetString(8));
                Fraude[n] = string.Format("{0}", dec.GetString(9));
                SD[n] = string.Format("{0}", dec.GetString(10));
                Finalite_ID[n] = string.Format("{0}", dec.GetInt32(11).ToString());
                n++;
            }
            dec.Close();

            if (fraude == "Oui" || sanction == "Oui")
            {
                if (fraude == "Oui")
                {
                    for (int deci = 0; deci < nbre_decision; deci++)
                    {
                        if (Fraude[deci] == fraude)
                        {
                            id_decision = Convert.ToInt32(Decision_ID[deci]);
                            decisio = Decision[deci];
                            sigl = sigle[deci];
                            break;
                        }
                    }
                }
                if (sanction == "Oui")
                {
                    for (int deci = 0; deci < nbre_decision; deci++)
                    {
                        if (SD[deci] == sanction)
                        {
                            id_decision = Convert.ToInt32(Decision_ID[deci]);
                            decisio = Decision[deci];
                            sigl = sigle[deci];
                            break;
                        }
                    }
                }
            }
            else
            {
                if (ecue_rate > 0)
                {
                    for (int deci = 0; deci < nbre_decision; deci++)
                    {
                        if (justification == "Oui")
                        {
                            if (ER[deci] == ">=1" && MV[deci].Contains(justification))
                            {
                                id_decision = Convert.ToInt32(Decision_ID[deci]);
                                decisio = Decision[deci];
                                sigl = sigle[deci];
                                break;
                            }
                        }
                        else if (justification == "Non")
                        {
                            if (ER[deci] == ">=1" && MV[deci].Contains(justification))
                            {
                                id_decision = Convert.ToInt32(Decision_ID[deci]);
                                decisio = Decision[deci];
                                sigl = sigle[deci];
                                break;
                            }
                        }
                    }
                }
                else
                {
                    if (etu_pourcentage < 35)
                    {
                        for (int deci = 0; deci < nbre_decision; deci++)
                        {
                            if (pourcentage[deci] == "0-35")
                            {
                                id_decision = Convert.ToInt32(Decision_ID[deci]);
                                decisio = Decision[deci];
                                sigl = sigle[deci];
                                break;
                            }
                        }
                    }
                    else if (etu_pourcentage >= 35 && etu_pourcentage < 50)
                    {
                        if (nbre_redoublement >= redoub_autorise || nbre_change_filiere >= change_filiere_autorise)
                        {
                            for (int deci = 0; deci < nbre_decision; deci++)
                            {
                                if (pourcentage[deci] == "0-35")
                                {
                                    id_decision = Convert.ToInt32(Decision_ID[deci]);
                                    decisio = Decision[deci];
                                    sigl = sigle[deci];
                                    break;
                                }
                            }
                        }
                        else
                        {
                            for (int deci = 0; deci < nbre_decision; deci++)
                            {
                                if (pourcentage[deci] == "35-50" && UNV[deci] == ">2")
                                {
                                    id_decision = Convert.ToInt32(Decision_ID[deci]);
                                    decisio = Decision[deci];
                                    sigl = sigle[deci];
                                    break;
                                }
                            }
                        }
                    }
                    else
                    {
                        if (ue_nv == 0)
                        {
                            for (int deci = 0; deci < nbre_decision; deci++)
                            {
                                if (pourcentage[deci] == "50-100" && UNV[deci] == "0")
                                {
                                    id_decision = Convert.ToInt32(Decision_ID[deci]);
                                    decisio = Decision[deci];
                                    sigl = sigle[deci];
                                    break;
                                }
                            }
                        }
                        else
                        {
                            if (ecue_nv <= max_ecue_nv_par_annee && (ecue_nv + ecue_nv_anterieur) <= cumul_ecue_nv)
                            {
                                for (int deci = 0; deci < nbre_decision; deci++)
                                {
                                    if (pourcentage[deci] == "50-100" && UNV[deci] == "<=2")
                                    {
                                        id_decision = Convert.ToInt32(Decision_ID[deci]);
                                        decisio = Decision[deci];
                                        sigl = sigle[deci];
                                        break;
                                    }
                                }
                            }
                            else
                            {
                                if (nbre_redoublement >= redoub_autorise || nbre_change_filiere >= change_filiere_autorise)
                                {
                                    for (int deci = 0; deci < nbre_decision; deci++)
                                    {
                                        if (pourcentage[deci] == "0-35")
                                        {
                                            id_decision = Convert.ToInt32(Decision_ID[deci]);
                                            decisio = Decision[deci];
                                            sigl = sigle[deci];
                                            break;
                                        }
                                    }
                                }
                                else
                                {
                                    for (int deci = 0; deci < nbre_decision; deci++)
                                    {
                                        if (pourcentage[deci] == "35-50" && UNV[deci] == ">2")
                                        {
                                            id_decision = Convert.ToInt32(Decision_ID[deci]);
                                            decisio = Decision[deci];
                                            sigl = sigle[deci];
                                            break;
                                        }
                                    }
                                }

                            }

                        }

                    }
                }
            }
        }
        public int Load_Mention(double etu_pourcentage, int id_mention, MySqlConnection conn)
        {
            string[] Mention_ID, Mention, Abbreviation, pourcentage_min, pourcentage_max;

            string sqr = "SELECT COUNT(DISTINCT id_mention) FROM mention";
            MySqlCommand cmr = new MySqlCommand(sqr, conn);
            int nbre_mention = Convert.ToInt32(cmr.ExecuteScalar());

            Mention_ID = new string[nbre_mention];
            Mention = new string[nbre_mention];
            Abbreviation = new string[nbre_mention];
            pourcentage_min = new string[nbre_mention];
            pourcentage_max = new string[nbre_mention];

            string sqp = "SELECT id_mention, mention, abbreviation, min,max FROM mention";
            MySqlCommand cmp = new MySqlCommand(sqp, conn);
            MySqlDataReader drs = cmp.ExecuteReader();
            int w = 0;
            while (drs.Read())
            {
                Mention_ID[w] = string.Format("{0}", drs.GetInt32(0).ToString());
                Mention[w] = string.Format("{0}", drs.GetString(1));
                Abbreviation[w] = string.Format("{0}", drs.GetString(2));
                pourcentage_min[w] = string.Format("{0}", drs.GetString(3));
                pourcentage_max[w] = string.Format("{0}", drs.GetString(4));
                w++;
            }
            drs.Close();

            for (int men = 0; men < nbre_mention; men++)
            {
                double p1 = Convert.ToDouble(pourcentage_min[men]);
                double p2 = Convert.ToDouble(pourcentage_max[men]);

                if (etu_pourcentage >= p1 && etu_pourcentage < p2)
                {
                    id_mention = Convert.ToInt32(Mention_ID[men]);
                    break;
                }
            }
            return id_mention;
        }


        //===================REPORTS DES DELIBERATIONS======================================//
        public void Grille_1er_Semestre(int idan, string ann, int idf, string fac, int hasdep, int iddep, string dep, int idcl, string clas)
        {
            int id_annee = idan;
            int id_faculte = idf;
            int id_departement = iddep;
            int id_classe = idcl;
            int has_depaartement = hasdep;

            string annee = ann;
            string faculte = fac;
            string departement = dep;
            string classe = clas;

            Create_Folder();

            int ecue_sous_sept_value = 0, ecue_sous_sept = 0;

            string[] UE_ID, UE_Array, UE_Code, Cours_ID, Cours_Nom, Cours_Credits, Nom_Cours, Credits_Cours;

            string[] Etudiant_ID, Etudiant_Nom, Etudiant_Prenom;
            try
            {
                DateTime dt = DateTime.Now;
                int year = dt.Year;
                int mois = dt.Month;
                int jour = dt.Day;
                int heure = dt.Hour;
                int min = dt.Minute;
                int sec = dt.Month;
                string date = jour + "-" + mois + "-" + year + "_à_" + heure + "h" + min + "min" + sec + "sec";

                iTextSharp.text.Document doc = new iTextSharp.text.Document(PageSize.A4.Rotate(), 0, 0, 5, 5);
                string docname = "Grille_Premier_Semestre_" + date + ".pdf";
                string outputFile = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.Desktop), @"BMDSys", docname);
                FileStream fs = new FileStream(outputFile, FileMode.Create, FileAccess.Write, FileShare.None);
                PdfWriter wri = PdfWriter.GetInstance(doc, fs);

                doc.Open();

                conn = new MySqlConnection(Authentification.MyString);
                conn.Open();

                string universite = Load_Institution(conn);

                string coordonee = Load_Adress(conn);
                string value = coordonee;
                string[] op = value.Split('-');
                site = op[0];
                siege = op[1];
                telephone = op[2];
                b_postale = op[3];


                PdfPCell cell = new PdfPCell(new Phrase("", font_bold_10));
                PdfPTable table1 = first_header(conn, universite, ref cell, faculte);
                doc.Add(table1);



                iTextSharp.text.Paragraph txt_t = new iTextSharp.text.Paragraph(" ", font_bold_8);
                txt_t.Alignment = Element.ALIGN_CENTER;
                txt_t.SpacingBefore = 10;
                txt_t.SpacingAfter = 10;
                doc.Add(txt_t);


                PdfPTable taba = new PdfPTable(4);
                float[] coltaba = { 10f, 12f, 6f, 15f };
                taba.SetWidths(coltaba);

                cell = new PdfPCell(new Phrase("Département", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);

                if (has_depaartement == 0 || has_depaartement == 1)
                {
                    cell = new PdfPCell(new Phrase(": ", font_bold_8));
                    cell.HorizontalAlignment = Element.ALIGN_LEFT;
                    cell.BorderWidth = 0;
                    taba.AddCell(cell);
                }
                else if (has_depaartement > 1)
                {
                    cell = new PdfPCell(new Phrase(": " + departement, font_bold_8));
                    cell.HorizontalAlignment = Element.ALIGN_LEFT;
                    cell.BorderWidth = 0;
                    taba.AddCell(cell);
                }

                cell = new PdfPCell(new Phrase(" ", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidth = 0;
                cell.Colspan = 2;
                taba.AddCell(cell);


                cell = new PdfPCell(new Phrase("Filière/Option", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);

                cell = new PdfPCell(new Phrase(": ", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);

                cell = new PdfPCell(new Phrase("Semestre", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);


                cell = new PdfPCell(new Phrase(": 1er", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);




                cell = new PdfPCell(new Phrase("Classe", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);


                cell = new PdfPCell(new Phrase(": " + classe, font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);


                cell = new PdfPCell(new Phrase(" ", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                cell.Colspan = 2;
                taba.AddCell(cell);


                cell = new PdfPCell(new Phrase("Année Academique", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);

                cell = new PdfPCell(new Phrase(": " + annee, font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);


                cell = new PdfPCell(new Phrase(" ", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                cell.Colspan = 2;
                taba.AddCell(cell);

                doc.Add(taba);


                string s7 = "SELECT valeur FROM  deliberation_parametre_generaux WHERE id_parametre=@id_parametre";
                MySqlCommand c7 = new MySqlCommand(s7, conn);
                c7.Parameters.AddWithValue("@id_parametre", 4);
                MySqlDataReader d7 = c7.ExecuteReader();
                while (d7.Read())
                {
                    ecue_sous_sept_value = d7.GetInt32(0);
                }
                d7.Close();


                Paragraph parf = new Paragraph();
                //parf.IndentationLeft = 240;
                string ta = "GRILLE DE DELIBERATION";
                parf.Add(new Phrase(ta, font_normal_underlined_9));
                parf.Alignment = Element.ALIGN_CENTER;
                parf.SpacingAfter = 10;
                parf.SpacingBefore = 10;
                doc.Add(parf);




                int nbre_colonnes = 0, credit_annuel = 0;
                string sq1 = "SELECT COUNT(DISTINCT id_unite) FROM unite WHERE id_classe=@idcl AND id_semestre=@idsem AND id_departement=@id_departement AND id_faculte=@id_faculte AND id_annee=@id_annee";
                MySqlCommand cmd1 = new MySqlCommand(sq1, conn);
                cmd1.Parameters.AddWithValue("@idcl", id_classe);
                cmd1.Parameters.AddWithValue("@id_departement", id_departement);
                cmd1.Parameters.AddWithValue("@id_faculte", id_faculte);
                cmd1.Parameters.AddWithValue("@id_annee", id_annee);
                cmd1.Parameters.AddWithValue("@idsem", 1);
                int nbre_ue = Convert.ToInt32(cmd1.ExecuteScalar());

                UE_ID = new string[nbre_ue];
                UE_Array = new string[nbre_ue];
                UE_Code = new string[nbre_ue];

                string sq2 = "SELECT DISTINCT id_unite,unite,code_unite FROM unite WHERE id_classe=@idcl AND id_semestre=@idsem AND id_departement=@id_departement AND id_faculte=@id_faculte AND id_annee=@id_annee";
                MySqlCommand cmd2 = new MySqlCommand(sq2, conn);
                cmd2.Parameters.AddWithValue("@id_faculte", id_faculte);
                cmd2.Parameters.AddWithValue("@id_annee", id_annee);
                cmd2.Parameters.AddWithValue("@id_departement", id_departement);
                cmd2.Parameters.AddWithValue("@idcl", id_classe);
                cmd2.Parameters.AddWithValue("@idsem", 1);
                MySqlDataReader dr2 = cmd2.ExecuteReader();
                int j = 0;
                while (dr2.Read())
                {
                    UE_ID[j] = string.Format("{0}", dr2.GetInt32(0).ToString());
                    UE_Array[j] = string.Format("{0}", dr2.GetString(1));
                    UE_Code[j] = string.Format("{0}", dr2.GetString(2));
                    j++;
                }
                dr2.Close();

                int nbre_cours = 0;
                for (int k = 0; k < nbre_ue; k++)
                {
                    string sq3 = "SELECT COUNT(DISTINCT id_cours) FROM cours WHERE id_unite=@idue AND id_classe=@idcl AND  id_departement=@id_departement AND id_faculte=@id_faculte AND id_annee=@id_annee";
                    MySqlCommand cm3 = new MySqlCommand(sq3, conn);
                    cm3.Parameters.AddWithValue("@idue", Convert.ToInt32(UE_ID[k]));
                    cm3.Parameters.AddWithValue("@id_faculte", id_faculte);
                    cm3.Parameters.AddWithValue("@id_annee", id_annee);
                    cm3.Parameters.AddWithValue("@id_departement", id_departement);
                    cm3.Parameters.AddWithValue("@idcl", id_classe);
                    nbre_cours = Convert.ToInt32(cm3.ExecuteScalar());


                    nbre_colonnes += (nbre_cours + 3);
                }
                nbre_colonnes += 5;


                PdfPTable tab = new PdfPTable(nbre_colonnes);

                List<float> termsList = new List<float>();
                float[] widths = new float[nbre_colonnes];

                int i = 0;
                for (i = 0; i < nbre_colonnes; i++)
                {
                    if (i == 0)
                        termsList.Add(12f);
                    else if (i == 1)
                        termsList.Add(90f);
                    else
                        termsList.Add(20f);
                }

                float[] terms = termsList.ToArray();
                tab.SetWidths(terms);




                cell = new PdfPCell(new Phrase("", font_bold_8));
                cell.Colspan = 2;
                cell.Rowspan = 2;
                cell.BorderWidth = 0;
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.VerticalAlignment = Element.ALIGN_CENTER;
                //cell.FixedHeight = 18f;
                tab.AddCell(cell);

                for (int ue = 0; ue < nbre_ue; ue++)
                {
                    string sq4 = "SELECT COUNT(DISTINCT id_cours) FROM cours WHERE id_unite=@idue AND id_classe=@idcl AND  id_departement=@id_departement AND id_faculte=@id_faculte AND id_annee=@id_annee";
                    MySqlCommand cm4 = new MySqlCommand(sq4, conn);
                    cm4.Parameters.AddWithValue("@idue", Convert.ToInt32(UE_ID[ue]));
                    cm4.Parameters.AddWithValue("@id_faculte", id_faculte);
                    cm4.Parameters.AddWithValue("@id_annee", id_annee);
                    cm4.Parameters.AddWithValue("@id_departement", id_departement);
                    cm4.Parameters.AddWithValue("@idcl", id_classe);
                    int ecue = Convert.ToInt32(cm4.ExecuteScalar());

                    cell = new PdfPCell(new Phrase(UE_Code[ue] + ":   " + UE_Array[ue], font_bold_8));
                    cell.Colspan = ecue + 3;
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    //cell.FixedHeight = 18f;
                    tab.AddCell(cell);
                }
                cell = new PdfPCell(new Phrase("Total Pondéré semestriel", font_bold_8));
                cell.Rotation = 90;
                cell.Rowspan = 2;
                cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
                tab.AddCell(cell);

                cell = new PdfPCell(new Phrase("Pourcentage ", font_bold_8));
                cell.Rotation = 90;
                cell.Rowspan = 3;
                cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
                tab.AddCell(cell);

                cell = new PdfPCell(new Phrase("Mention ", font_bold_8));
                cell.Rotation = 90;
                cell.Rowspan = 3;
                cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
                tab.AddCell(cell);

                int nbre_ecue = 0;
                for (int ue = 0; ue < nbre_ue; ue++)
                {
                    string sq4 = "SELECT COUNT(DISTINCT id_cours) FROM cours WHERE id_unite=@idue AND id_classe=@idcl AND  id_departement=@id_departement AND id_faculte=@id_faculte AND id_annee=@id_annee";
                    MySqlCommand cm4 = new MySqlCommand(sq4, conn);
                    cm4.Parameters.AddWithValue("@idue", Convert.ToInt32(UE_ID[ue]));
                    cm4.Parameters.AddWithValue("@id_faculte", id_faculte);
                    cm4.Parameters.AddWithValue("@id_annee", id_annee);
                    cm4.Parameters.AddWithValue("@id_departement", id_departement);
                    cm4.Parameters.AddWithValue("@idcl", id_classe);
                    nbre_ecue = Convert.ToInt32(cm4.ExecuteScalar());

                    Nom_Cours = new string[nbre_ecue];
                    Credits_Cours = new string[nbre_ecue];

                    string sq5 = "SELECT cours,credits FROM cours WHERE id_unite=@idue AND id_classe=@idcl AND  id_departement=@id_departement AND id_faculte=@id_faculte AND id_annee=@id_annee";
                    MySqlCommand cmd5 = new MySqlCommand(sq5, conn);
                    cmd5.Parameters.AddWithValue("@idue", Convert.ToInt32(UE_ID[ue]));
                    cmd5.Parameters.AddWithValue("@id_faculte", id_faculte);
                    cmd5.Parameters.AddWithValue("@id_annee", id_annee);
                    cmd5.Parameters.AddWithValue("@id_departement", id_departement);
                    cmd5.Parameters.AddWithValue("@idcl", id_classe);
                    MySqlDataReader dr5 = cmd5.ExecuteReader();
                    int k = 0;
                    while (dr5.Read())
                    {
                        Nom_Cours[k] = string.Format("{0}", dr5.GetString(0));
                        Credits_Cours[k] = string.Format("{0}", dr5.GetInt32(1).ToString());
                        credit_annuel += Convert.ToInt32(dr5.GetInt32(1));
                        k++;
                    }
                    dr5.Close();

                    for (int ecue = 0; ecue < nbre_ecue; ecue++)
                    {
                        cell = new PdfPCell(new Phrase(Nom_Cours[ecue], font_normal_7));
                        cell.Rotation = 90;
                        //cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
                        tab.AddCell(cell);
                    }
                    cell = new PdfPCell(new Phrase("Total Pondéré ", font_bold_8));
                    cell.Rotation = 90;
                    cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
                    tab.AddCell(cell);

                    cell = new PdfPCell(new Phrase("Pourcentage ", font_bold_8));
                    cell.Rotation = 90;
                    cell.Rowspan = 2;
                    cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    tab.AddCell(cell);

                    cell = new PdfPCell(new Phrase("Décision ", font_bold_8));
                    cell.Rotation = 90;
                    cell.Rowspan = 2;
                    cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    tab.AddCell(cell);
                }



                cell = new PdfPCell(new Phrase("", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                tab.AddCell(cell);

                cell = new PdfPCell(new Phrase("Nom et Prénom", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                tab.AddCell(cell);


                for (int ue = 0; ue < nbre_ue; ue++)
                {
                    string sq4 = "SELECT COUNT(DISTINCT id_cours) FROM cours WHERE id_unite=@idue AND id_classe=@idcl AND  id_departement=@id_departement AND id_faculte=@id_faculte AND id_annee=@id_annee";
                    MySqlCommand cm4 = new MySqlCommand(sq4, conn);
                    cm4.Parameters.AddWithValue("@idue", Convert.ToInt32(UE_ID[ue]));
                    cm4.Parameters.AddWithValue("@id_faculte", id_faculte);
                    cm4.Parameters.AddWithValue("@id_annee", id_annee);
                    cm4.Parameters.AddWithValue("@id_departement", id_departement);
                    cm4.Parameters.AddWithValue("@idcl", id_classe);
                    nbre_ecue = Convert.ToInt32(cm4.ExecuteScalar());

                    Nom_Cours = new string[nbre_ecue];
                    Credits_Cours = new string[nbre_ecue];

                    string sq5 = "SELECT cours,credits FROM cours WHERE id_unite=@idue AND id_classe=@idcl AND  id_departement=@id_departement AND id_faculte=@id_faculte AND id_annee=@id_annee";
                    MySqlCommand cmd5 = new MySqlCommand(sq5, conn);
                    cmd5.Parameters.AddWithValue("@idue", Convert.ToInt32(UE_ID[ue]));
                    cmd5.Parameters.AddWithValue("@id_faculte", id_faculte);
                    cmd5.Parameters.AddWithValue("@id_annee", id_annee);
                    cmd5.Parameters.AddWithValue("@id_departement", id_departement);
                    cmd5.Parameters.AddWithValue("@idcl", id_classe);
                    MySqlDataReader dr5 = cmd5.ExecuteReader();
                    int k = 0;
                    while (dr5.Read())
                    {
                        Nom_Cours[k] = string.Format("{0}", dr5.GetString(0));
                        Credits_Cours[k] = string.Format("{0}", dr5.GetInt32(1).ToString());
                        k++;
                    }
                    dr5.Close();
                    int ue_total_credit = 0;
                    for (int ecue = 0; ecue < nbre_ecue; ecue++)
                    {
                        ue_total_credit += Convert.ToInt32(Credits_Cours[ecue]);

                        cell = new PdfPCell(new Phrase(Credits_Cours[ecue], font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        tab.AddCell(cell);
                    }
                    cell = new PdfPCell(new Phrase((ue_total_credit * 20).ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    tab.AddCell(cell);
                }
                cell = new PdfPCell(new Phrase((credit_annuel * 20).ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                tab.AddCell(cell);

                //-------------------------------------------------------------------------ETUDIANTS--------------------------------------------

                string r = "SELECT COUNT( DISTINCT id_etudiant) FROM  etudiant_inscription WHERE id_classe=@idcl AND id_session=@id_session AND id_departement=@id_departement AND id_faculte=@id_faculte AND id_annee=@id_annee";
                MySqlCommand c = new MySqlCommand(r, conn);
                c.Parameters.AddWithValue("@idcl", id_classe);
                c.Parameters.AddWithValue("@id_faculte", id_faculte);
                c.Parameters.AddWithValue("@id_annee", id_annee);
                c.Parameters.AddWithValue("@id_session", 1);
                c.Parameters.AddWithValue("@id_departement", id_departement);
                int nbre_etudiant = Convert.ToInt32(c.ExecuteScalar());
                Etudiant_ID = new string[nbre_etudiant];
                Etudiant_Nom = new string[nbre_etudiant];
                Etudiant_Prenom = new string[nbre_etudiant];

                string ra = "SELECT DISTINCT id_etudiant FROM  etudiant_inscription WHERE id_classe=@idcl AND id_session=@id_session AND id_departement=@id_departement AND id_faculte=@id_faculte AND id_annee=@id_annee";
                MySqlCommand ca = new MySqlCommand(ra, conn);
                ca.Parameters.AddWithValue("@idcl", id_classe);
                ca.Parameters.AddWithValue("@id_faculte", id_faculte);
                ca.Parameters.AddWithValue("@id_annee", id_annee);
                ca.Parameters.AddWithValue("@id_session", 1);
                ca.Parameters.AddWithValue("@id_departement", id_departement);
                MySqlDataReader da = ca.ExecuteReader();
                int m = 0;
                while (da.Read())
                {
                    Etudiant_ID[m] = string.Format("{0}", da.GetInt32(0).ToString());
                    m++;
                }
                da.Close();
                int numero = 1;

                double etu_note_ponderee = 0, etu_pourcentage = 0;
                for (int etu = 0; etu < nbre_etudiant; etu++)
                {
                    etu_pourcentage = 0;
                    etu_note_ponderee = 0;

                    cell = new PdfPCell(new Phrase(numero.ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    tab.AddCell(cell);
                    numero++;

                    string ra1 = "SELECT nom, prenom FROM  etudiant WHERE id_etudiant=@id_etudiant";
                    MySqlCommand ca1 = new MySqlCommand(ra1, conn);
                    ca1.Parameters.AddWithValue("@id_etudiant", Convert.ToInt32(Etudiant_ID[etu]));
                    MySqlDataReader da1 = ca1.ExecuteReader();
                    while (da1.Read())
                    {
                        cell = new PdfPCell(new Phrase(da1.GetString(0) + " " + da1.GetString(1), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_LEFT;
                        tab.AddCell(cell);
                    }
                    da1.Close();

                    double ue_pondere = 0;
                    int nbre_rat = 0, tot_credit = 0;
                    for (int unite = 0; unite < nbre_ue; unite++)
                    {
                        ecue_sous_sept = 0;
                        ue_pondere = 0;
                        nbre_rat = 0;
                        tot_credit = 0;
                        string sq6 = "SELECT COUNT(DISTINCT id_cours) FROM cours WHERE id_unite=@idue";
                        MySqlCommand cm6 = new MySqlCommand(sq6, conn);
                        cm6.Parameters.AddWithValue("@idue", Convert.ToInt32(UE_ID[unite]));
                        nbre_ecue = Convert.ToInt32(cm6.ExecuteScalar());

                        Cours_ID = new string[nbre_ecue];
                        Cours_Credits = new string[nbre_ecue];

                        string sq7 = "SELECT DISTINCT id_cours,credits FROM cours WHERE id_unite=@idue";
                        MySqlCommand cmd7 = new MySqlCommand(sq7, conn);
                        cmd7.Parameters.AddWithValue("@idue", Convert.ToInt32(UE_ID[unite]));
                        MySqlDataReader dr7 = cmd7.ExecuteReader();
                        int n = 0;
                        while (dr7.Read())
                        {
                            Cours_ID[n] = string.Format("{0}", dr7.GetInt32(0).ToString());
                            Cours_Credits[n] = string.Format("{0}", dr7.GetInt32(1).ToString());
                            tot_credit += Convert.ToInt32(Cours_Credits[n]);
                            //credit_annuel += Convert.ToInt32(Cours_Credits[n]);
                            n++;

                        }
                        dr7.Close();

                        for (int cours = 0; cours < nbre_ecue; cours++)
                        {

                            string sq8 = "SELECT COUNT(*) FROM etudiant_note  WHERE id_etudiant=@id_etudiant AND id_cours=@id_cours AND id_session=@id_session";
                            MySqlCommand cmd8 = new MySqlCommand(sq8, conn);
                            cmd8.Parameters.AddWithValue("@id_session", 1);
                            cmd8.Parameters.AddWithValue("@id_cours", Convert.ToInt32(Cours_ID[cours]));
                            cmd8.Parameters.AddWithValue("@id_etudiant", Convert.ToInt32(Etudiant_ID[etu]));
                            int nbre = Convert.ToInt32(cmd8.ExecuteScalar());
                            if (nbre == 0)
                            {
                                cell = new PdfPCell(new Phrase("", font_normal_7));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                tab.AddCell(cell);
                                nbre_rat++;
                            }
                            else
                            {
                                string sq9 = "SELECT note FROM etudiant_note  WHERE id_etudiant=@id_etudiant AND id_cours=@id_cours AND id_session=@id_session";
                                MySqlCommand cmd9 = new MySqlCommand(sq9, conn);
                                cmd9.Parameters.AddWithValue("@id_session", 1);
                                cmd9.Parameters.AddWithValue("@id_cours", Convert.ToInt32(Cours_ID[cours]));
                                cmd9.Parameters.AddWithValue("@id_etudiant", Convert.ToInt32(Etudiant_ID[etu]));
                                MySqlDataReader dr9 = cmd9.ExecuteReader();

                                while (dr9.Read())
                                {
                                    cell = new PdfPCell(new Phrase(dr9.GetString(0), font_normal_7));
                                    if (Convert.ToDouble(dr9.GetString(0)) < ecue_sous_sept_value)
                                    {
                                        ecue_sous_sept++;
                                    }
                                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                    tab.AddCell(cell);
                                    //ue_pondere += Convert.ToDouble(Cours_Credits[cours]) * double.Parse(dr9.GetString(0), System.Globalization.CultureInfo.InvariantCulture);
                                    ue_pondere += Convert.ToDouble(Cours_Credits[cours]) * Convert.ToDouble(dr9.GetString(0));
                                    etu_note_ponderee += Convert.ToDouble(Cours_Credits[cours]) * Convert.ToDouble(dr9.GetString(0));
                                }
                                dr9.Close();
                            }
                        }
                        cell = new PdfPCell(new Phrase(ue_pondere.ToString("#.#"), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        tab.AddCell(cell);

                        double pourc = (ue_pondere * 100) / (tot_credit * 20);
                        cell = new PdfPCell(new Phrase(pourc.ToString("#.##"), font_normal_7));
                        cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        tab.AddCell(cell);

                        if (pourc < 50 || nbre_rat > 0 || ecue_sous_sept > 0)
                        {
                            cell = new PdfPCell(new Phrase("NV", font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            tab.AddCell(cell);
                        }
                        else
                        {
                            cell = new PdfPCell(new Phrase("V", font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            tab.AddCell(cell);
                        }
                    }

                    etu_pourcentage = etu_note_ponderee * 5 / credit_annuel;

                    string mention = "";
                    string[] Mention_ID, Mention, Abbreviation, pourcentage_min, pourcentage_max;

                    string sqr = "SELECT COUNT(DISTINCT id_mention) FROM mention";
                    MySqlCommand cmr = new MySqlCommand(sqr, conn);
                    int nbre_mention = Convert.ToInt32(cmr.ExecuteScalar());

                    Mention_ID = new string[nbre_mention];
                    Mention = new string[nbre_mention];
                    Abbreviation = new string[nbre_mention];
                    pourcentage_min = new string[nbre_mention];
                    pourcentage_max = new string[nbre_mention];

                    string sqp = "SELECT id_mention, mention, abbreviation, min,max FROM mention";
                    MySqlCommand cmp = new MySqlCommand(sqp, conn);
                    MySqlDataReader drs = cmp.ExecuteReader();
                    int w = 0;
                    while (drs.Read())
                    {
                        Mention_ID[w] = string.Format("{0}", drs.GetInt32(0).ToString());
                        Mention[w] = string.Format("{0}", drs.GetString(1));
                        Abbreviation[w] = string.Format("{0}", drs.GetString(2));
                        pourcentage_min[w] = string.Format("{0}", drs.GetString(3));
                        pourcentage_max[w] = string.Format("{0}", drs.GetString(4));
                        w++;
                    }
                    drs.Close();

                    for (int men = 0; men < nbre_mention; men++)
                    {
                        double p1 = Convert.ToDouble(pourcentage_min[men]);
                        double p2 = Convert.ToDouble(pourcentage_max[men]);

                        if (etu_pourcentage >= p1 && etu_pourcentage < p2)
                        {
                            mention = Abbreviation[men];
                            break;
                        }
                    }
                    cell = new PdfPCell(new Phrase(etu_note_ponderee.ToString("#.##"), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    tab.AddCell(cell);

                    cell = new PdfPCell(new Phrase(etu_pourcentage.ToString("#.##"), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    tab.AddCell(cell);

                    cell = new PdfPCell(new Phrase(mention, font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    tab.AddCell(cell);
                }
                doc.Add(tab);

                PdfPTable tVisa = new PdfPTable(5);//Creer une table de 5 colonnes
                float[] colwithv = { 7f, 7f, 7f, 7f, 12f };//parametrer les domensions(largeur) de chacune des collonnes
                tVisa.SetWidths(colwithv);//appliquer ces dimenstions a l atable


                cell = new PdfPCell(new Phrase("", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 5;
                tVisa.AddCell(cell);

                cell = new PdfPCell(new Phrase("", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 5;
                tVisa.AddCell(cell);

                cell = new PdfPCell(new Phrase("", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 5;
                tVisa.AddCell(cell);

                cell = new PdfPCell(new Phrase("\nVISA DU DECANAT", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 2;
                tVisa.AddCell(cell);

                cell = new PdfPCell(new Phrase("", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 2;
                tVisa.AddCell(cell);

                string dat = "Fait à " + siege + " ,le " + DateTime.Today.Date.ToShortDateString();
                string nom_rect = "Jury de délibération";

                cell = new PdfPCell(new Phrase(dat + "\n\n" + nom_rect, font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                tVisa.AddCell(cell);

                Paragraph pVisa = new Paragraph();
                //parf.IndentationLeft = 240;
                pVisa.Alignment = Element.ALIGN_CENTER;
                //pVisa.SpacingAfter = 6;
                pVisa.SpacingBefore = 8;
                pVisa.Add(tVisa);
                doc.Add(pVisa);

                wri.PageEvent = new Foot();

                doc.Close();

                System.Diagnostics.Process.Start(outputFile);
                conn.Close();
            }
            catch (Exception ex)
            {
                //MessageBox.Show(ex.Message);
            }
        }
        public void Grille_Annuelle_1ere_Semestre(int idan, string ann, int idf, string fac, int hasdep, int iddep, string dep, int idcl, string clas, int idsess, string sessio, int idsem, string semestr)
        {
            int id_annee = idan;
            int id_faculte = idf;
            int id_departement = iddep;
            int id_classe = idcl;
            int id_session = idsess;
            int id_semestre = idsem;
            int has_depaartement = hasdep;

            string annee = ann;
            string faculte = fac;
            string departement = dep;
            string classe = clas;
            string session = sessio;
            string semestre = semestr;

            Create_Folder();

            int ecue_sous_sept_value = 0, ecue_sous_sept = 0;

            string[] UE_ID, UE_Array, UE_Code, Cours_ID, Cours_Nom, Cours_Credits, Nom_Cours, Credits_Cours;
            string[] Etudiant_ID, Etudiant_Nom, Etudiant_Prenom;
            try
            {
                DateTime dt = DateTime.Now;
                int year = dt.Year;
                int mois = dt.Month;
                int jour = dt.Day;
                int heure = dt.Hour;
                int min = dt.Minute;
                int sec = dt.Month;
                string date = jour + "-" + mois + "-" + year + "_à_" + heure + "h" + min + "min" + sec + "sec";

                iTextSharp.text.Document doc = new iTextSharp.text.Document(PageSize.A4.Rotate(), 10, 10, 20, 10);
                string docname = "Grille_Deliberation_1ereS_" + date + ".pdf";
                string outputFile = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.Desktop), @"BMDSys", docname);
                FileStream fs = new FileStream(outputFile, FileMode.Create, FileAccess.Write, FileShare.None);
                PdfWriter wri = PdfWriter.GetInstance(doc, fs);
                doc.Open();




                conn = new MySqlConnection(Authentification.MyString);
                conn.Open();

                string universite = Load_Institution(conn);

                string coordonee = Load_Adress(conn);
                string value = coordonee;
                string[] op = value.Split('-');
                site = op[0];
                siege = op[1];
                telephone = op[2];
                b_postale = op[3];

                PdfPCell cell = new PdfPCell(new Phrase("", font_bold_10));
                PdfPTable table1 = first_header(conn, universite, ref cell, faculte);
                doc.Add(table1);



                iTextSharp.text.Paragraph txt_t = new iTextSharp.text.Paragraph(" ", font_bold_8_black);
                txt_t.Alignment = Element.ALIGN_CENTER;
                txt_t.SpacingBefore = 10;
                txt_t.SpacingAfter = 10;
                doc.Add(txt_t);


                PdfPTable taba = new PdfPTable(4);//Creer une table de 5 colonnes
                float[] coltaba = { 10f, 12f, 6f, 15f };//parametrer les domensions(largeur) de chacune des collonnes
                taba.SetWidths(coltaba);

                cell = new PdfPCell(new Phrase("Département", font_bold_8_black));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);

                if (has_depaartement == 0 || has_depaartement == 1)
                {
                    cell = new PdfPCell(new Phrase(": ", font_bold_8_black));
                    cell.HorizontalAlignment = Element.ALIGN_LEFT;
                    cell.BorderWidth = 0;
                    taba.AddCell(cell);
                }
                else if (has_depaartement > 1)
                {
                    cell = new PdfPCell(new Phrase(": " + departement, font_bold_8_black));
                    cell.HorizontalAlignment = Element.ALIGN_LEFT;
                    cell.BorderWidth = 0;
                    taba.AddCell(cell);
                }

                cell = new PdfPCell(new Phrase("Session", font_bold_8_black));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);

                cell = new PdfPCell(new Phrase(": " + session, font_bold_8_black));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);



                cell = new PdfPCell(new Phrase("Filière/Option", font_bold_8_black));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);

                cell = new PdfPCell(new Phrase(": ", font_bold_8_black));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);

                cell = new PdfPCell(new Phrase("Semestre", font_bold_8_black));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);


                cell = new PdfPCell(new Phrase(": " + semestre, font_bold_8_black));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);




                cell = new PdfPCell(new Phrase("Classe", font_bold_8_black));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);


                cell = new PdfPCell(new Phrase(": " + classe, font_bold_8_black));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);


                cell = new PdfPCell(new Phrase(" ", font_bold_8_black));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                cell.Colspan = 2;
                taba.AddCell(cell);


                cell = new PdfPCell(new Phrase("Année Academique", font_bold_8_black));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);

                cell = new PdfPCell(new Phrase(": " + annee, font_bold_8_black));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);


                cell = new PdfPCell(new Phrase(" ", font_bold_8_black));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                cell.Colspan = 2;
                taba.AddCell(cell);

                doc.Add(taba);


                string s7 = "SELECT valeur FROM  deliberation_parametre_generaux WHERE id_parametre=@id_parametre";
                MySqlCommand c7 = new MySqlCommand(s7, conn);
                c7.Parameters.AddWithValue("@id_parametre", 4);
                MySqlDataReader d7 = c7.ExecuteReader();
                while (d7.Read())
                {
                    ecue_sous_sept_value = d7.GetInt32(0);
                }
                d7.Close();


                Paragraph parf = new Paragraph();
                //parf.IndentationLeft = 240;
                string ta = "GRILLE DE DELIBERATION";
                parf.Add(new Phrase(ta, font_underlined_9_bold));
                parf.Alignment = Element.ALIGN_CENTER;
                parf.SpacingAfter = 10;
                parf.SpacingBefore = 10;
                doc.Add(parf);


                int nbre_colonnes = 0;
                string sq1 = "SELECT COUNT(DISTINCT id_unite) FROM unite WHERE id_classe=@idcl AND id_semestre=@idsem AND id_departement=@id_departement AND id_faculte=@id_faculte AND id_annee=@id_annee";
                MySqlCommand cmd1 = new MySqlCommand(sq1, conn);
                cmd1.Parameters.AddWithValue("@idcl", id_classe);
                cmd1.Parameters.AddWithValue("@id_departement", id_departement);
                cmd1.Parameters.AddWithValue("@id_faculte", id_faculte);
                cmd1.Parameters.AddWithValue("@id_annee", id_annee);
                cmd1.Parameters.AddWithValue("@idsem", id_semestre);
                int nbre_ue = Convert.ToInt32(cmd1.ExecuteScalar());
                UE_ID = new string[nbre_ue];
                UE_Array = new string[nbre_ue];
                UE_Code = new string[nbre_ue];

                string sq2 = "SELECT DISTINCT id_unite,unite,code_unite FROM unite WHERE id_classe=@idcl AND id_semestre=@idsem AND id_departement=@id_departement AND id_faculte=@id_faculte AND id_annee=@id_annee";
                MySqlCommand cmd2 = new MySqlCommand(sq2, conn);
                cmd2.Parameters.AddWithValue("@id_faculte", id_faculte);
                cmd2.Parameters.AddWithValue("@id_annee", id_annee);
                cmd2.Parameters.AddWithValue("@id_departement", id_departement);
                cmd2.Parameters.AddWithValue("@idcl", id_classe);
                cmd2.Parameters.AddWithValue("@idsem", id_semestre);
                MySqlDataReader dr2 = cmd2.ExecuteReader();
                int j = 0;
                while (dr2.Read())
                {
                    UE_ID[j] = string.Format("{0}", dr2.GetInt32(0).ToString());
                    UE_Array[j] = string.Format("{0}", dr2.GetString(1));
                    UE_Code[j] = string.Format("{0}", dr2.GetString(2));
                    j++;
                }
                dr2.Close();
                int nbre_cours = 0;
                for (int k = 0; k < nbre_ue; k++)
                {
                    string sq3 = "SELECT COUNT(DISTINCT id_cours) FROM cours WHERE id_unite=@idue AND id_classe=@idcl AND  id_departement=@id_departement AND id_faculte=@id_faculte AND id_annee=@id_annee";
                    MySqlCommand cm3 = new MySqlCommand(sq3, conn);
                    cm3.Parameters.AddWithValue("@idue", Convert.ToInt32(UE_ID[k]));
                    cm3.Parameters.AddWithValue("@id_faculte", id_faculte);
                    cm3.Parameters.AddWithValue("@id_annee", id_annee);
                    cm3.Parameters.AddWithValue("@id_departement", id_departement);
                    cm3.Parameters.AddWithValue("@idcl", id_classe);
                    nbre_cours = Convert.ToInt32(cm3.ExecuteScalar());
                    nbre_colonnes += (nbre_cours + 2);
                }
                nbre_colonnes += 2;


                PdfPTable tab = new PdfPTable(nbre_colonnes);
                List<float> termsList = new List<float>();
                float[] widths = new float[nbre_colonnes];
                int i = 0;
                for (i = 0; i < nbre_colonnes; i++)
                {
                    if (i == 0)
                        termsList.Add(12f);
                    else if (i == 1)
                        termsList.Add(90f);
                    else
                        termsList.Add(22f);
                }

                float[] terms = termsList.ToArray();
                tab.SetWidths(terms);

                cell = new PdfPCell(new Phrase("", font_bold_8_black));
                cell.Colspan = 2;
                cell.Rowspan = 2;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidthBottom = 0;
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.VerticalAlignment = Element.ALIGN_CENTER;
                //cell.FixedHeight = 18f;
                tab.AddCell(cell);

                for (int ue = 0; ue < nbre_ue; ue++)
                {
                    string sq4 = "SELECT COUNT(DISTINCT id_cours) FROM cours WHERE id_unite=@idue AND id_classe=@idcl AND  id_departement=@id_departement AND id_faculte=@id_faculte AND id_annee=@id_annee";
                    MySqlCommand cm4 = new MySqlCommand(sq4, conn);
                    cm4.Parameters.AddWithValue("@idue", Convert.ToInt32(UE_ID[ue]));
                    cm4.Parameters.AddWithValue("@id_faculte", id_faculte);
                    cm4.Parameters.AddWithValue("@id_annee", id_annee);
                    cm4.Parameters.AddWithValue("@id_departement", id_departement);
                    cm4.Parameters.AddWithValue("@idcl", id_classe);
                    int ecue = Convert.ToInt32(cm4.ExecuteScalar());

                    cell = new PdfPCell(new Phrase(UE_Code[ue] + ":   " + UE_Array[ue], font_bold_8_black));
                    cell.Colspan = ecue + 2;
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    //cell.FixedHeight = 18f;
                    tab.AddCell(cell);
                }

                int nbre_ecue = 0;
                for (int ue = 0; ue < nbre_ue; ue++)
                {
                    string sq4 = "SELECT COUNT(DISTINCT id_cours) FROM cours WHERE id_unite=@idue AND id_classe=@idcl AND  id_departement=@id_departement AND id_faculte=@id_faculte AND id_annee=@id_annee";
                    MySqlCommand cm4 = new MySqlCommand(sq4, conn);
                    cm4.Parameters.AddWithValue("@idue", Convert.ToInt32(UE_ID[ue]));
                    cm4.Parameters.AddWithValue("@id_faculte", id_faculte);
                    cm4.Parameters.AddWithValue("@id_annee", id_annee);
                    cm4.Parameters.AddWithValue("@id_departement", id_departement);
                    cm4.Parameters.AddWithValue("@idcl", id_classe);
                    nbre_ecue = Convert.ToInt32(cm4.ExecuteScalar());

                    Nom_Cours = new string[nbre_ecue];
                    Credits_Cours = new string[nbre_ecue];

                    string sq5 = "SELECT cours,credits FROM cours WHERE id_unite=@idue AND id_classe=@idcl AND  id_departement=@id_departement AND id_faculte=@id_faculte AND id_annee=@id_annee";
                    MySqlCommand cmd5 = new MySqlCommand(sq5, conn);
                    cmd5.Parameters.AddWithValue("@idue", Convert.ToInt32(UE_ID[ue]));
                    cmd5.Parameters.AddWithValue("@id_faculte", id_faculte);
                    cmd5.Parameters.AddWithValue("@id_annee", id_annee);
                    cmd5.Parameters.AddWithValue("@id_departement", id_departement);
                    cmd5.Parameters.AddWithValue("@idcl", id_classe);
                    MySqlDataReader dr5 = cmd5.ExecuteReader();
                    int k = 0;
                    while (dr5.Read())
                    {
                        Nom_Cours[k] = string.Format("{0}", dr5.GetString(0));
                        Credits_Cours[k] = string.Format("{0}", dr5.GetInt32(1).ToString());
                        k++;
                    }
                    dr5.Close();
                    for (int ecue = 0; ecue < nbre_ecue; ecue++)
                    {
                        cell = new PdfPCell(new Phrase(Nom_Cours[ecue], font_normal_7_black));
                        cell.Rotation = 90;
                        cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
                        tab.AddCell(cell);
                    }
                    cell = new PdfPCell(new Phrase("Total Pondéré ", font_bold_8_black));
                    cell.Rotation = 90;
                    cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
                    tab.AddCell(cell);

                    /*cell = new PdfPCell(new Phrase("Pourcentage ", entete_decision_font));
                    cell.Rotation = 90;
                    cell.Rowspan = 2;
                    cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    tab.AddCell(cell);*/

                    cell = new PdfPCell(new Phrase("Décision ", font_bold_8_black));
                    cell.Rotation = 90;
                    cell.Rowspan = 2;
                    cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    tab.AddCell(cell);
                }



                cell = new PdfPCell(new Phrase("", font_bold_8_black));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                tab.AddCell(cell);

                cell = new PdfPCell(new Phrase("Nom et Prénom", font_bold_8_black));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                tab.AddCell(cell);


                for (int ue = 0; ue < nbre_ue; ue++)
                {
                    string sq4 = "SELECT COUNT(DISTINCT id_cours) FROM cours WHERE id_unite=@idue AND id_classe=@idcl AND  id_departement=@id_departement AND id_faculte=@id_faculte AND id_annee=@id_annee";
                    MySqlCommand cm4 = new MySqlCommand(sq4, conn);
                    cm4.Parameters.AddWithValue("@idue", Convert.ToInt32(UE_ID[ue]));
                    cm4.Parameters.AddWithValue("@id_faculte", id_faculte);
                    cm4.Parameters.AddWithValue("@id_annee", id_annee);
                    cm4.Parameters.AddWithValue("@id_departement", id_departement);
                    cm4.Parameters.AddWithValue("@idcl", id_classe);
                    nbre_ecue = Convert.ToInt32(cm4.ExecuteScalar());

                    Nom_Cours = new string[nbre_ecue];
                    Credits_Cours = new string[nbre_ecue];

                    string sq5 = "SELECT cours,credits FROM cours WHERE id_unite=@idue AND id_classe=@idcl AND  id_departement=@id_departement AND id_faculte=@id_faculte AND id_annee=@id_annee";
                    MySqlCommand cmd5 = new MySqlCommand(sq5, conn);
                    cmd5.Parameters.AddWithValue("@idue", Convert.ToInt32(UE_ID[ue]));
                    cmd5.Parameters.AddWithValue("@id_faculte", id_faculte);
                    cmd5.Parameters.AddWithValue("@id_annee", id_annee);
                    cmd5.Parameters.AddWithValue("@id_departement", id_departement);
                    cmd5.Parameters.AddWithValue("@idcl", id_classe);
                    MySqlDataReader dr5 = cmd5.ExecuteReader();
                    int k = 0;
                    while (dr5.Read())
                    {
                        Nom_Cours[k] = string.Format("{0}", dr5.GetString(0));
                        Credits_Cours[k] = string.Format("{0}", dr5.GetInt32(1).ToString());
                        k++;
                    }
                    dr5.Close();
                    int ue_total_credit = 0;
                    for (int ecue = 0; ecue < nbre_ecue; ecue++)
                    {
                        ue_total_credit += Convert.ToInt32(Credits_Cours[ecue]);

                        cell = new PdfPCell(new Phrase(Credits_Cours[ecue], font_normal_7_black));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        tab.AddCell(cell);
                    }
                    cell = new PdfPCell(new Phrase("20", font_normal_7_black));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    tab.AddCell(cell);
                }
                //-------------------------------------------------------------------------ETUDIANTS--------------------------------------------

                string r = "SELECT COUNT( DISTINCT id_etudiant) FROM  etudiant_inscription WHERE id_classe=@idcl AND id_session=@id_session AND id_departement=@id_departement AND id_faculte=@id_faculte AND id_annee=@id_annee";
                MySqlCommand c = new MySqlCommand(r, conn);
                //c.Parameters.AddWithValue("@idcl", grille_generale.id_classe);
                c.Parameters.AddWithValue("@id_faculte", id_faculte);
                c.Parameters.AddWithValue("@id_annee", id_annee);
                c.Parameters.AddWithValue("@id_session", id_session);
                c.Parameters.AddWithValue("@id_departement", id_departement);
                int nbre_etudiant = Convert.ToInt32(c.ExecuteScalar());
                Etudiant_ID = new string[nbre_etudiant];
                Etudiant_Nom = new string[nbre_etudiant];
                Etudiant_Prenom = new string[nbre_etudiant];

                string ra = "SELECT DISTINCT id_etudiant FROM  etudiant_inscription WHERE id_classe=@idcl AND id_session=@id_session AND id_departement=@id_departement AND id_faculte=@id_faculte AND id_annee=@id_annee";
                MySqlCommand ca = new MySqlCommand(ra, conn);
                ca.Parameters.AddWithValue("@idcl", id_classe);
                ca.Parameters.AddWithValue("@id_faculte", id_faculte);
                ca.Parameters.AddWithValue("@id_annee", id_annee);
                ca.Parameters.AddWithValue("@id_session", id_session);
                ca.Parameters.AddWithValue("@id_departement", id_departement);
                MySqlDataReader da = ca.ExecuteReader();
                int m = 0;
                while (da.Read())
                {
                    Etudiant_ID[m] = string.Format("{0}", da.GetInt32(0).ToString());
                    m++;
                }
                da.Close();
                int numero = 1;

                for (int etu = 0; etu < nbre_etudiant; etu++)
                {
                    cell = new PdfPCell(new Phrase(numero.ToString(), font_normal_7_black));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    tab.AddCell(cell);
                    numero++;

                    string ra1 = "SELECT nom, prenom FROM  etudiant WHERE id_etudiant=@id_etudiant";
                    MySqlCommand ca1 = new MySqlCommand(ra1, conn);
                    ca1.Parameters.AddWithValue("@id_etudiant", Convert.ToInt32(Etudiant_ID[etu]));
                    MySqlDataReader da1 = ca1.ExecuteReader();
                    while (da1.Read())
                    {
                        cell = new PdfPCell(new Phrase(da1.GetString(0) + " " + da1.GetString(1), font_normal_7_black));
                        cell.HorizontalAlignment = Element.ALIGN_LEFT;
                        tab.AddCell(cell);
                    }
                    da1.Close();

                    double ue_pondere = 0, ue_total_credit = 0;
                    int nbre_rat = 0, tot_credit = 0;
                    for (int unite = 0; unite < nbre_ue; unite++)
                    {
                        ecue_sous_sept = 0;
                        ue_pondere = 0;
                        ue_total_credit = 0;
                        nbre_rat = 0;
                        tot_credit = 0;
                        string sq6 = "SELECT COUNT(DISTINCT id_cours) FROM cours WHERE id_unite=@idue";
                        MySqlCommand cm6 = new MySqlCommand(sq6, conn);
                        cm6.Parameters.AddWithValue("@idue", Convert.ToInt32(UE_ID[unite]));
                        nbre_ecue = Convert.ToInt32(cm6.ExecuteScalar());

                        Cours_ID = new string[nbre_ecue];
                        Cours_Credits = new string[nbre_ecue];

                        string sq7 = "SELECT DISTINCT id_cours,credits FROM cours WHERE id_unite=@idue";
                        MySqlCommand cmd7 = new MySqlCommand(sq7, conn);
                        cmd7.Parameters.AddWithValue("@idue", Convert.ToInt32(UE_ID[unite]));
                        MySqlDataReader dr7 = cmd7.ExecuteReader();
                        int n = 0;
                        while (dr7.Read())
                        {
                            Cours_ID[n] = string.Format("{0}", dr7.GetInt32(0).ToString());
                            Cours_Credits[n] = string.Format("{0}", dr7.GetInt32(1).ToString());
                            tot_credit += Convert.ToInt32(Cours_Credits[n]);
                            n++;
                        }
                        dr7.Close();

                        for (int cours = 0; cours < nbre_ecue; cours++)
                        {

                            string sq8 = "SELECT COUNT(*) FROM etudiant_note  WHERE id_etudiant=@id_etudiant AND id_cours=@id_cours AND id_session=@id_session";
                            MySqlCommand cmd8 = new MySqlCommand(sq8, conn);
                            cmd8.Parameters.AddWithValue("@id_session", id_session);
                            cmd8.Parameters.AddWithValue("@id_cours", Convert.ToInt32(Cours_ID[cours]));
                            cmd8.Parameters.AddWithValue("@id_etudiant", Convert.ToInt32(Etudiant_ID[etu]));
                            int nbre = Convert.ToInt32(cmd8.ExecuteScalar());
                            if (nbre == 0)
                            {
                                cell = new PdfPCell(new Phrase("", font_normal_7_black));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                tab.AddCell(cell);
                                nbre_rat++;
                            }
                            else
                            {
                                string sq9 = "SELECT note FROM etudiant_note  WHERE id_etudiant=@id_etudiant AND id_cours=@id_cours AND id_session=@id_session";
                                MySqlCommand cmd9 = new MySqlCommand(sq9, conn);
                                cmd9.Parameters.AddWithValue("@id_session", id_session);
                                cmd9.Parameters.AddWithValue("@id_cours", Convert.ToInt32(Cours_ID[cours]));
                                cmd9.Parameters.AddWithValue("@id_etudiant", Convert.ToInt32(Etudiant_ID[etu]));
                                MySqlDataReader dr9 = cmd9.ExecuteReader();

                                while (dr9.Read())
                                {
                                    cell = new PdfPCell(new Phrase(dr9.GetString(0), font_normal_7_black));
                                    if (Convert.ToDouble(dr9.GetString(0)) < ecue_sous_sept_value)
                                    {
                                        ecue_sous_sept++;
                                    }
                                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                    tab.AddCell(cell);
                                    //ue_pondere += Convert.ToDouble(Cours_Credits[cours]) * double.Parse(dr9.GetString(0), System.Globalization.CultureInfo.InvariantCulture);
                                    ue_pondere += Convert.ToDouble(Cours_Credits[cours]) * Convert.ToDouble(dr9.GetString(0));
                                    ue_total_credit += Convert.ToDouble(Cours_Credits[cours]);
                                }
                                dr9.Close();
                            }
                        }
                        cell = new PdfPCell(new Phrase((ue_pondere / ue_total_credit).ToString("#.#"), font_normal_7_black));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        tab.AddCell(cell);

                        double pourc = (ue_pondere * 100) / (tot_credit * 20);

                        /*cell = new PdfPCell(new Phrase(pourc.ToString("#.##"), note_font));
                        cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        tab.AddCell(cell);*/

                        if (pourc < 50 || nbre_rat > 0 || ecue_sous_sept > 0)
                        {
                            cell = new PdfPCell(new Phrase("NV", font_normal_7_black));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            tab.AddCell(cell);
                        }
                        else
                        {
                            cell = new PdfPCell(new Phrase("V", font_normal_7_black));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            tab.AddCell(cell);
                        }
                    }


                    int ue_nv = -1, ecue_nv = -1, id_mention = -1, id_decision = -1;
                    double prcente = 0.0;
                    string sq10 = "SELECT ue_nv, ecue_nv,id_mention,id_decision,pourcentage FROM deliberation  WHERE id_etudiant=@id_etudiant AND id_classe=@id_classe AND id_departement=@id_departement AND id_session=@id_session AND id_faculte=@id_faculte AND id_annee=@id_annee";
                    MySqlCommand cmd10 = new MySqlCommand(sq10, conn);
                    cmd10.Parameters.AddWithValue("@id_etudiant", Convert.ToInt32(Etudiant_ID[etu]));
                    cmd10.Parameters.AddWithValue("@id_classe", id_classe);
                    cmd10.Parameters.AddWithValue("@id_departement", id_departement);
                    cmd10.Parameters.AddWithValue("@id_faculte", id_faculte);
                    cmd10.Parameters.AddWithValue("@id_annee", id_annee);
                    cmd10.Parameters.AddWithValue("@id_session", id_session);
                    MySqlDataReader dr10 = cmd10.ExecuteReader();
                    while (dr10.Read())
                    {
                        ue_nv = dr10.GetInt32(0);
                        ecue_nv = dr10.GetInt32(1);
                        id_mention = dr10.GetInt32(2);
                        id_decision = dr10.GetInt32(3);
                        prcente = dr10.GetDouble(4);
                    }
                    dr10.Close();

                    string mention = "", decision = "";
                    string sq11 = "SELECT sigle FROM deliberation_condition WHERE id_decision=@id_decision AND id_session=@id_session";
                    MySqlCommand cmd11 = new MySqlCommand(sq11, conn);
                    cmd11.Parameters.AddWithValue("@id_decision", id_decision);
                    cmd11.Parameters.AddWithValue("@id_session", id_session);
                    MySqlDataReader dr11 = cmd11.ExecuteReader();
                    while (dr11.Read())
                    {
                        decision = dr11.GetString(0);
                    }
                    dr11.Close();

                    string sq12 = "SELECT abbreviation FROM mention WHERE id_mention=@id_mention";
                    MySqlCommand cmd12 = new MySqlCommand(sq12, conn);
                    cmd12.Parameters.AddWithValue("@id_mention", id_mention);
                    MySqlDataReader dr12 = cmd12.ExecuteReader();
                    while (dr12.Read())
                    {
                        mention = dr12.GetString(0);
                    }
                    dr12.Close();

                }
                doc.Add(tab);

                PdfPTable tVisa = new PdfPTable(5);//Creer une table de 5 colonnes
                float[] colwithv = { 7f, 7f, 7f, 7f, 12f };//parametrer les domensions(largeur) de chacune des collonnes
                tVisa.SetWidths(colwithv);//appliquer ces dimenstions a l atable


                cell = new PdfPCell(new Phrase("", font_bold_8_black));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 5;
                tVisa.AddCell(cell);

                cell = new PdfPCell(new Phrase("", font_bold_8_black));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 5;
                tVisa.AddCell(cell);

                cell = new PdfPCell(new Phrase("", font_bold_8_black));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 5;
                tVisa.AddCell(cell);

                cell = new PdfPCell(new Phrase("\nVISA DU DECANAT", font_bold_8_black));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 2;
                tVisa.AddCell(cell);

                cell = new PdfPCell(new Phrase("", font_bold_8_black));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 2;
                tVisa.AddCell(cell);

                string dat = "Fait à " + siege + " ,le " + DateTime.Today.Date.ToShortDateString();
                string nom_rect = "Jury de délibération";

                cell = new PdfPCell(new Phrase(dat + "\n\n" + nom_rect, font_bold_8_black));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                tVisa.AddCell(cell);

                Paragraph pVisa = new Paragraph();
                //parf.IndentationLeft = 240;
                pVisa.Alignment = Element.ALIGN_CENTER;
                //pVisa.SpacingAfter = 6;
                pVisa.SpacingBefore = 8;
                pVisa.Add(tVisa);
                doc.Add(pVisa);

                wri.PageEvent = new Foot();

                doc.Close();

                System.Diagnostics.Process.Start(outputFile);
                conn.Close();
            }
            catch (Exception ex)
            {
                //MessageBox.Show(ex.Message);
            }
        }
        public void Grille_Annuelle_2eme_Semestre(int idan, string ann, int idf, string fac, int hasdep, int iddep, string dep, int idcl, string clas, int idsess, string sessio, int idsem, string semestr)
        {
            int id_annee = idan;
            int id_faculte = idf;
            int id_departement = iddep;
            int id_classe = idcl;
            int id_session = idsess;
            int id_semestre = idsem;
            int has_depaartement = hasdep;

            string annee = ann;
            string faculte = fac;
            string departement = dep;
            string classe = clas;
            string session = sessio;
            string semestre = semestr;



            Create_Folder();
            int ecue_sous_sept_value = 0, ecue_sous_sept = 0;
            string[] UE_ID, UE_Array, UE_Code, Cours_ID, Cours_Nom, Cours_Credits, Nom_Cours, Credits_Cours;
            string[] Etudiant_ID, Etudiant_Nom, Etudiant_Prenom;
            try
            {
                DateTime dt = DateTime.Now;
                int year = dt.Year;
                int mois = dt.Month;
                int jour = dt.Day;
                int heure = dt.Hour;
                int min = dt.Minute;
                int sec = dt.Month;
                string date = jour + "-" + mois + "-" + year + "_à_" + heure + "h" + min + "min" + sec + "sec";

                iTextSharp.text.Document doc = new iTextSharp.text.Document(PageSize.A4.Rotate(), 0, 0, 20, 10);
                string docname = "GD_2S_" + date + ".pdf";
                string outputFile = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.Desktop), @"BMDSys", docname);
                FileStream fs = new FileStream(outputFile, FileMode.Create, FileAccess.Write, FileShare.None);
                PdfWriter wri = PdfWriter.GetInstance(doc, fs);
                doc.Open();


                iTextSharp.text.pdf.BaseFont bfTimes = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, false);
                iTextSharp.text.pdf.BaseFont bfTimes1 = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, false);
                iTextSharp.text.pdf.BaseFont bfTimes2 = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, false);

                iTextSharp.text.Font Semestre_font1 = new iTextSharp.text.Font(bfTimes, 8, iTextSharp.text.Font.BOLD, iTextSharp.text.BaseColor.BLUE);
                iTextSharp.text.Font Semestre_font = new iTextSharp.text.Font(bfTimes, 8, iTextSharp.text.Font.BOLD, iTextSharp.text.BaseColor.BLACK);
                iTextSharp.text.Font entete_decision_font = new iTextSharp.text.Font(bfTimes1, 8, iTextSharp.text.Font.BOLD, iTextSharp.text.BaseColor.BLACK);
                iTextSharp.text.Font note_font = new iTextSharp.text.Font(bfTimes2, 7, iTextSharp.text.Font.NORMAL, iTextSharp.text.BaseColor.BLACK);
                iTextSharp.text.Font timesunderlined = new iTextSharp.text.Font(bfTimes, 9, iTextSharp.text.Font.BOLD | iTextSharp.text.Font.UNDERLINE, BaseColor.BLACK);

                conn = new MySqlConnection(Authentification.MyString);
                conn.Open();

                string universite = Load_Institution(conn);
                string coordonee = Load_Adress(conn);
                string value = coordonee;
                string[] op = value.Split('-');
                site = op[0];
                siege = op[1];
                telephone = op[2];
                b_postale = op[3];

                PdfPCell cell = new PdfPCell(new Phrase("", font_bold_10));
                PdfPTable table1 = first_header(conn, universite, ref cell, faculte);
                doc.Add(table1);

                iTextSharp.text.Paragraph txt_t = new iTextSharp.text.Paragraph(" ", Semestre_font);
                txt_t.Alignment = Element.ALIGN_CENTER;
                txt_t.SpacingBefore = 10;
                txt_t.SpacingAfter = 10;
                doc.Add(txt_t);


                PdfPTable taba = new PdfPTable(4);//Creer une table de 5 colonnes
                float[] coltaba = { 10f, 12f, 6f, 15f };//parametrer les domensions(largeur) de chacune des collonnes
                taba.SetWidths(coltaba);

                cell = new PdfPCell(new Phrase("Département", Semestre_font));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);

                if (has_depaartement == 0 || has_depaartement == 1)
                {
                    cell = new PdfPCell(new Phrase(": ", Semestre_font));
                    cell.HorizontalAlignment = Element.ALIGN_LEFT;
                    cell.BorderWidth = 0;
                    taba.AddCell(cell);
                }
                else if (has_depaartement > 1)
                {
                    cell = new PdfPCell(new Phrase(": " + departement, Semestre_font));
                    cell.HorizontalAlignment = Element.ALIGN_LEFT;
                    cell.BorderWidth = 0;
                    taba.AddCell(cell);
                }

                cell = new PdfPCell(new Phrase("Session", Semestre_font));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);

                cell = new PdfPCell(new Phrase(": " + session, Semestre_font));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);



                cell = new PdfPCell(new Phrase("Filière/Option", Semestre_font));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);

                cell = new PdfPCell(new Phrase(": ", Semestre_font));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);

                cell = new PdfPCell(new Phrase("Semestre", Semestre_font));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);


                cell = new PdfPCell(new Phrase(": " + semestre, Semestre_font));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);




                cell = new PdfPCell(new Phrase("Classe", Semestre_font));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);


                cell = new PdfPCell(new Phrase(": " + classe, Semestre_font));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);


                cell = new PdfPCell(new Phrase(" ", Semestre_font));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                cell.Colspan = 2;
                taba.AddCell(cell);


                cell = new PdfPCell(new Phrase("Année Academique", Semestre_font));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);

                cell = new PdfPCell(new Phrase(": " + annee, Semestre_font));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);


                cell = new PdfPCell(new Phrase(" ", Semestre_font));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                cell.Colspan = 2;
                taba.AddCell(cell);

                doc.Add(taba);



                string s7 = "SELECT valeur FROM  deliberation_parametre_generaux WHERE id_parametre=@id_parametre";
                MySqlCommand c7 = new MySqlCommand(s7, conn);
                c7.Parameters.AddWithValue("@id_parametre", 4);
                MySqlDataReader d7 = c7.ExecuteReader();
                while (d7.Read())
                {
                    ecue_sous_sept_value = d7.GetInt32(0);
                }
                d7.Close();

                Paragraph parf = new Paragraph();
                //parf.IndentationLeft = 240;
                string ta = "GRILLE DE DELIBERATION";
                parf.Add(new Phrase(ta, timesunderlined));
                parf.Alignment = Element.ALIGN_CENTER;
                parf.SpacingAfter = 10;
                parf.SpacingBefore = 10;
                doc.Add(parf);


                int nbre_colonnes = 0;
                string sq1 = "SELECT COUNT(DISTINCT id_unite) FROM unite WHERE id_classe=@idcl AND id_semestre=@idsem AND id_departement=@id_departement AND id_faculte=@id_faculte AND id_annee=@id_annee";
                MySqlCommand cmd1 = new MySqlCommand(sq1, conn);
                cmd1.Parameters.AddWithValue("@idcl", id_classe);
                cmd1.Parameters.AddWithValue("@id_departement", id_departement);
                cmd1.Parameters.AddWithValue("@id_faculte", id_faculte);
                cmd1.Parameters.AddWithValue("@id_annee", id_annee);
                cmd1.Parameters.AddWithValue("@idsem", id_semestre);
                int nbre_ue = Convert.ToInt32(cmd1.ExecuteScalar());
                UE_ID = new string[nbre_ue];
                UE_Array = new string[nbre_ue];
                UE_Code = new string[nbre_ue];

                string sq2 = "SELECT DISTINCT id_unite,unite,code_unite FROM unite WHERE id_classe=@idcl AND id_semestre=@idsem AND id_departement=@id_departement AND id_faculte=@id_faculte AND id_annee=@id_annee";
                MySqlCommand cmd2 = new MySqlCommand(sq2, conn);
                cmd2.Parameters.AddWithValue("@id_faculte", id_faculte);
                cmd2.Parameters.AddWithValue("@id_annee", id_annee);
                cmd2.Parameters.AddWithValue("@id_departement", id_departement);
                cmd2.Parameters.AddWithValue("@idcl", id_classe);
                cmd2.Parameters.AddWithValue("@idsem", id_semestre);
                MySqlDataReader dr2 = cmd2.ExecuteReader();
                int j = 0;
                while (dr2.Read())
                {
                    UE_ID[j] = string.Format("{0}", dr2.GetInt32(0).ToString());
                    UE_Array[j] = string.Format("{0}", dr2.GetString(1));
                    UE_Code[j] = string.Format("{0}", dr2.GetString(2));
                    j++;
                }
                dr2.Close();
                int nbre_cours = 0;
                for (int k = 0; k < nbre_ue; k++)
                {
                    string sq3 = "SELECT COUNT( id_cours ) FROM cours WHERE id_unite=@idue";
                    MySqlCommand cm3 = new MySqlCommand(sq3, conn);
                    cm3.Parameters.AddWithValue("@idue", Convert.ToInt32(UE_ID[k]));
                    nbre_cours = Convert.ToInt32(cm3.ExecuteScalar());
                    nbre_colonnes += (nbre_cours + 3);
                }
                nbre_colonnes += 6;


                PdfPTable tab = new PdfPTable(nbre_colonnes);
                List<float> termsList = new List<float>();
                float[] widths = new float[nbre_colonnes];
                int i = 0;
                for (i = 0; i < nbre_colonnes; i++)
                {
                    if (i == 0)
                        termsList.Add(12f);
                    else if (i == 1)
                        termsList.Add(90f);
                    else if (i == nbre_colonnes - 4)
                        termsList.Add(12f);
                    else if (i == nbre_colonnes - 3)
                        termsList.Add(22f);
                    else if (i == nbre_colonnes - 2)
                        termsList.Add(15f);
                    else if (i == nbre_colonnes - 1)
                        termsList.Add(20f);
                    else
                        termsList.Add(22f);
                }

                float[] terms = termsList.ToArray();
                tab.SetWidths(terms);

                cell = new PdfPCell(new Phrase("", Semestre_font1));
                cell.Colspan = 2;
                cell.Rowspan = 2;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidthBottom = 0;
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.VerticalAlignment = Element.ALIGN_CENTER;
                //cell.FixedHeight = 32f;
                tab.AddCell(cell);

                for (int ue = 0; ue < nbre_ue; ue++)
                {
                    string sq4 = "SELECT COUNT(id_cours) FROM cours WHERE id_unite=@idue";
                    MySqlCommand cm4 = new MySqlCommand(sq4, conn);
                    cm4.Parameters.AddWithValue("@idue", Convert.ToInt32(UE_ID[ue]));
                    int ecue = Convert.ToInt32(cm4.ExecuteScalar());

                    cell = new PdfPCell(new Phrase(UE_Code[ue] + ":   " + UE_Array[ue], entete_decision_font));
                    cell.Colspan = ecue + 3;
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    //cell.FixedHeight = 32f;
                    tab.AddCell(cell);
                }
                cell = new PdfPCell(new Phrase("RESUME ANNUEL", entete_decision_font));
                cell.Colspan = 4;
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                //cell.BackgroundColor = BaseColor.GRAY;
                //cell.FixedHeight = 32f;
                tab.AddCell(cell);
                int nbre_ecue = 0;
                for (int ue = 0; ue < nbre_ue; ue++)
                {
                    string sq4 = "SELECT COUNT(id_cours) FROM cours WHERE id_unite=@idue";
                    MySqlCommand cm4 = new MySqlCommand(sq4, conn);
                    cm4.Parameters.AddWithValue("@idue", Convert.ToInt32(UE_ID[ue]));
                    nbre_ecue = Convert.ToInt32(cm4.ExecuteScalar());

                    Nom_Cours = new string[nbre_ecue];
                    Credits_Cours = new string[nbre_ecue];

                    string sq5 = "SELECT cours,credits FROM cours WHERE id_unite=@idue";
                    MySqlCommand cmd5 = new MySqlCommand(sq5, conn);
                    cmd5.Parameters.AddWithValue("@idue", Convert.ToInt32(UE_ID[ue]));
                    MySqlDataReader dr5 = cmd5.ExecuteReader();
                    int k = 0;
                    while (dr5.Read())
                    {
                        Nom_Cours[k] = string.Format("{0}", dr5.GetString(0));
                        Credits_Cours[k] = string.Format("{0}", dr5.GetInt32(1).ToString());
                        k++;
                    }
                    dr5.Close();
                    for (int ecue = 0; ecue < nbre_ecue; ecue++)
                    {
                        cell = new PdfPCell(new Phrase(Nom_Cours[ecue], note_font));
                        cell.Rotation = 90;
                        cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
                        tab.AddCell(cell);
                    }
                    cell = new PdfPCell(new Phrase("Total Pondéré ", entete_decision_font));
                    cell.Rotation = 90;
                    cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
                    tab.AddCell(cell);

                    cell = new PdfPCell(new Phrase("Pourcentage ", entete_decision_font));
                    cell.Rotation = 90;
                    cell.Rowspan = 2;
                    cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    tab.AddCell(cell);

                    cell = new PdfPCell(new Phrase("Décision ", entete_decision_font));
                    cell.Rotation = 90;
                    cell.Rowspan = 2;
                    cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    tab.AddCell(cell);
                }
                /*cell = new PdfPCell(new Phrase("ECUE non validés", entete_decision_font));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                //cell.BackgroundColor = BaseColor.GRAY;
                cell.Rowspan = 2;
                cell.Rotation = 90;
                tab.AddCell(cell);*/

                cell = new PdfPCell(new Phrase("UE non validées ", entete_decision_font));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                //cell.BackgroundColor = BaseColor.GRAY;
                cell.Rowspan = 2;
                cell.Rotation = 90;
                tab.AddCell(cell);

                cell = new PdfPCell(new Phrase("Pourcentage annuel", entete_decision_font));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                //cell.BackgroundColor = BaseColor.GRAY;
                cell.Rowspan = 2;
                cell.Rotation = 90;
                tab.AddCell(cell);

                cell = new PdfPCell(new Phrase("Mention", entete_decision_font));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                //cell.BackgroundColor = BaseColor.GRAY;
                cell.Rotation = 90;
                cell.Rowspan = 2;
                tab.AddCell(cell);

                cell = new PdfPCell(new Phrase("Decision", entete_decision_font));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                //cell.BackgroundColor = BaseColor.GRAY;
                cell.Rotation = 90;
                cell.Rowspan = 2;
                tab.AddCell(cell);


                cell = new PdfPCell(new Phrase("", entete_decision_font));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidthBottom = 0;
                tab.AddCell(cell);

                cell = new PdfPCell(new Phrase("Nom et Prénom ", entete_decision_font));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                tab.AddCell(cell);


                for (int ue = 0; ue < nbre_ue; ue++)
                {
                    string sq4 = "SELECT COUNT(id_cours) FROM cours WHERE id_unite=@idue";
                    MySqlCommand cm4 = new MySqlCommand(sq4, conn);
                    cm4.Parameters.AddWithValue("@idue", Convert.ToInt32(UE_ID[ue]));
                    nbre_ecue = Convert.ToInt32(cm4.ExecuteScalar());

                    Nom_Cours = new string[nbre_ecue];
                    Credits_Cours = new string[nbre_ecue];

                    string sq5 = "SELECT cours,credits FROM cours WHERE id_unite=@idue";
                    MySqlCommand cmd5 = new MySqlCommand(sq5, conn);
                    cmd5.Parameters.AddWithValue("@idue", Convert.ToInt32(UE_ID[ue]));
                    MySqlDataReader dr5 = cmd5.ExecuteReader();
                    int k = 0;
                    while (dr5.Read())
                    {
                        Nom_Cours[k] = string.Format("{0}", dr5.GetString(0));
                        Credits_Cours[k] = string.Format("{0}", dr5.GetInt32(1).ToString());
                        k++;
                    }
                    dr5.Close();
                    int ue_total_credit = 0;
                    for (int ecue = 0; ecue < nbre_ecue; ecue++)
                    {
                        ue_total_credit += Convert.ToInt32(Credits_Cours[ecue]);

                        cell = new PdfPCell(new Phrase(Credits_Cours[ecue], entete_decision_font));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        tab.AddCell(cell);
                    }
                    cell = new PdfPCell(new Phrase((ue_total_credit * 20).ToString(), entete_decision_font));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    tab.AddCell(cell);
                }
                //-------------------------------------------------------------------------ETUDIANTS--------------------------------------------

                string r = "SELECT COUNT( DISTINCT id_etudiant) FROM  etudiant_inscription WHERE id_classe=@idcl AND id_session=@id_session AND id_departement=@id_departement AND id_faculte=@id_faculte AND id_annee=@id_annee";
                MySqlCommand c = new MySqlCommand(r, conn);
                c.Parameters.AddWithValue("@idcl", id_classe);
                c.Parameters.AddWithValue("@id_faculte", id_faculte);
                c.Parameters.AddWithValue("@id_annee", id_annee);
                c.Parameters.AddWithValue("@id_session", id_session);
                c.Parameters.AddWithValue("@id_departement", id_departement);
                int nbre_etudiant = Convert.ToInt32(c.ExecuteScalar());
                Etudiant_ID = new string[nbre_etudiant];
                Etudiant_Nom = new string[nbre_etudiant];
                Etudiant_Prenom = new string[nbre_etudiant];

                string ra = "SELECT DISTINCT id_etudiant FROM  etudiant_inscription WHERE id_classe=@idcl AND id_session=@id_session AND id_departement=@id_departement AND id_faculte=@id_faculte AND id_annee=@id_annee";
                MySqlCommand ca = new MySqlCommand(ra, conn);
                ca.Parameters.AddWithValue("@idcl", id_classe);
                ca.Parameters.AddWithValue("@id_faculte", id_faculte);
                ca.Parameters.AddWithValue("@id_annee", id_annee);
                ca.Parameters.AddWithValue("@id_session", id_session);
                ca.Parameters.AddWithValue("@id_departement", id_departement);
                MySqlDataReader da = ca.ExecuteReader();
                int m = 0;
                while (da.Read())
                {
                    Etudiant_ID[m] = string.Format("{0}", da.GetInt32(0).ToString());
                    m++;
                }
                da.Close();
                int numero = 1;

                for (int etu = 0; etu < nbre_etudiant; etu++)
                {
                    cell = new PdfPCell(new Phrase(numero.ToString(), note_font));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    tab.AddCell(cell);
                    numero++;

                    string ra1 = "SELECT nom, prenom FROM  etudiant WHERE id_etudiant=@id_etudiant";
                    MySqlCommand ca1 = new MySqlCommand(ra1, conn);
                    ca1.Parameters.AddWithValue("@id_etudiant", Convert.ToInt32(Etudiant_ID[etu]));
                    MySqlDataReader da1 = ca1.ExecuteReader();
                    while (da1.Read())
                    {
                        cell = new PdfPCell(new Phrase(da1.GetString(0) + " " + da1.GetString(1), note_font));
                        cell.HorizontalAlignment = Element.ALIGN_LEFT;
                        tab.AddCell(cell);
                    }
                    da1.Close();

                    double ue_pondere = 0;
                    int nbre_rat = 0, tot_credit = 0;
                    for (int unite = 0; unite < nbre_ue; unite++)
                    {
                        ecue_sous_sept = 0;
                        ue_pondere = 0;
                        nbre_rat = 0;
                        tot_credit = 0;
                        string sq6 = "SELECT COUNT(id_cours) FROM cours WHERE id_unite=@idue";
                        MySqlCommand cm6 = new MySqlCommand(sq6, conn);
                        cm6.Parameters.AddWithValue("@idue", Convert.ToInt32(UE_ID[unite]));
                        nbre_ecue = Convert.ToInt32(cm6.ExecuteScalar());

                        Cours_ID = new string[nbre_ecue];
                        Cours_Credits = new string[nbre_ecue];

                        string sq7 = "SELECT id_cours,credits FROM cours WHERE id_unite=@idue";
                        MySqlCommand cmd7 = new MySqlCommand(sq7, conn);
                        cmd7.Parameters.AddWithValue("@idue", Convert.ToInt32(UE_ID[unite]));
                        MySqlDataReader dr7 = cmd7.ExecuteReader();
                        int n = 0;
                        while (dr7.Read())
                        {
                            Cours_ID[n] = string.Format("{0}", dr7.GetInt32(0).ToString());
                            Cours_Credits[n] = string.Format("{0}", dr7.GetInt32(1).ToString());
                            tot_credit += Convert.ToInt32(Cours_Credits[n]);
                            n++;
                        }
                        dr7.Close();

                        for (int cours = 0; cours < nbre_ecue; cours++)
                        {
                            string sqs2 = "SELECT COUNT(*) FROM etudiant_note WHERE id_cours=@id_cours AND id_etudiant=@id_etudiant AND id_session=@id_session";
                            MySqlCommand cqs2 = new MySqlCommand(sqs2, conn);
                            cqs2.Parameters.AddWithValue("@id_etudiant", Convert.ToInt32(Etudiant_ID[etu]));
                            cqs2.Parameters.AddWithValue("@id_session", 2);
                            cqs2.Parameters.AddWithValue("@id_cours", Convert.ToInt32(Cours_ID[cours]));
                            int exist_en_2eme_session = Convert.ToInt32(cqs2.ExecuteScalar());
                            if (exist_en_2eme_session == 0)
                            {
                                string sq8 = "SELECT COUNT(id_note) FROM etudiant_note  WHERE id_etudiant=@id_etudiant AND id_cours=@id_cours AND id_session=@id_session";
                                MySqlCommand cmd8 = new MySqlCommand(sq8, conn);
                                cmd8.Parameters.AddWithValue("@id_session", 1);
                                cmd8.Parameters.AddWithValue("@id_cours", Convert.ToInt32(Cours_ID[cours]));
                                cmd8.Parameters.AddWithValue("@id_etudiant", Convert.ToInt32(Etudiant_ID[etu]));
                                int nbre = Convert.ToInt32(cmd8.ExecuteScalar());
                                if (nbre == 0)
                                {
                                    cell = new PdfPCell(new Phrase("", entete_decision_font));
                                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                    tab.AddCell(cell);
                                    nbre_rat++;
                                }
                                else
                                {
                                    string sq9 = "SELECT note FROM etudiant_note  WHERE id_etudiant=@id_etudiant AND id_cours=@id_cours AND id_session=@id_session";
                                    MySqlCommand cmd9 = new MySqlCommand(sq9, conn);
                                    cmd9.Parameters.AddWithValue("@id_session", 1);
                                    cmd9.Parameters.AddWithValue("@id_cours", Convert.ToInt32(Cours_ID[cours]));
                                    cmd9.Parameters.AddWithValue("@id_etudiant", Convert.ToInt32(Etudiant_ID[etu]));
                                    MySqlDataReader dr9 = cmd9.ExecuteReader();
                                    while (dr9.Read())
                                    {
                                        cell = new PdfPCell(new Phrase(dr9.GetString(0), note_font));
                                        if (Convert.ToDouble(dr9.GetString(0)) < ecue_sous_sept_value)
                                        {
                                            ecue_sous_sept++;
                                        }
                                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                        tab.AddCell(cell);
                                        //ue_pondere += Convert.ToDouble(Cours_Credits[cours]) * double.Parse(dr9.GetString(0), System.Globalization.CultureInfo.InvariantCulture);
                                        ue_pondere += Convert.ToDouble(Cours_Credits[cours]) * Convert.ToDouble(dr9.GetString(0));
                                    }
                                    dr9.Close();
                                }
                            }
                            else
                            {
                                string sq8 = "SELECT COUNT(id_note) FROM etudiant_note  WHERE id_etudiant=@id_etudiant AND id_cours=@id_cours AND id_session=@id_session";
                                MySqlCommand cmd8 = new MySqlCommand(sq8, conn);
                                cmd8.Parameters.AddWithValue("@id_session", 2);
                                cmd8.Parameters.AddWithValue("@id_cours", Convert.ToInt32(Cours_ID[cours]));
                                cmd8.Parameters.AddWithValue("@id_etudiant", Convert.ToInt32(Etudiant_ID[etu]));
                                int nbre = Convert.ToInt32(cmd8.ExecuteScalar());
                                if (nbre == 0)
                                {
                                    cell = new PdfPCell(new Phrase("", entete_decision_font));
                                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                    tab.AddCell(cell);
                                    nbre_rat++;
                                }
                                else
                                {
                                    string sq9 = "SELECT note FROM etudiant_note  WHERE id_etudiant=@id_etudiant AND id_cours=@id_cours AND id_session=@id_session";
                                    MySqlCommand cmd9 = new MySqlCommand(sq9, conn);
                                    cmd9.Parameters.AddWithValue("@id_session", 2);
                                    cmd9.Parameters.AddWithValue("@id_cours", Convert.ToInt32(Cours_ID[cours]));
                                    cmd9.Parameters.AddWithValue("@id_etudiant", Convert.ToInt32(Etudiant_ID[etu]));
                                    MySqlDataReader dr9 = cmd9.ExecuteReader();
                                    while (dr9.Read())
                                    {
                                        cell = new PdfPCell(new Phrase(dr9.GetString(0), note_font));
                                        if (Convert.ToDouble(dr9.GetString(0)) < ecue_sous_sept_value)
                                        {
                                            ecue_sous_sept++;
                                        }
                                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                        tab.AddCell(cell);
                                        //ue_pondere += Convert.ToDouble(Cours_Credits[cours]) * double.Parse(dr9.GetString(0), System.Globalization.CultureInfo.InvariantCulture);
                                        ue_pondere += Convert.ToDouble(Cours_Credits[cours]) * Convert.ToDouble(dr9.GetString(0));
                                    }
                                    dr9.Close();
                                }
                            }
                        }
                        cell = new PdfPCell(new Phrase(ue_pondere.ToString("#.#"), note_font));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        tab.AddCell(cell);

                        double pourc = (ue_pondere * 100) / (tot_credit * 20);
                        cell = new PdfPCell(new Phrase(pourc.ToString("#.##"), note_font));
                        cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        tab.AddCell(cell);

                        if (pourc < 50 || nbre_rat > 0 || ecue_sous_sept > 0)
                        {
                            cell = new PdfPCell(new Phrase("NV", note_font));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            tab.AddCell(cell);
                        }
                        else
                        {
                            cell = new PdfPCell(new Phrase("V", note_font));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            tab.AddCell(cell);
                        }
                    }


                    int ue_nv = -1, ecue_nv = -1, id_mention = -1, id_decision = -1;
                    double prcente = 0.0;
                    string mention = "", decision = "";

                    string sqf = "SELECT COUNT(*) FROM deliberation WHERE id_etudiant=@id_etudiant AND id_session=@id_session AND id_classe=@id_classe AND id_departement=@id_departement AND id_faculte=@id_faculte AND id_annee=@id_annee";
                    MySqlCommand cqf = new MySqlCommand(sqf, conn);
                    cqf.Parameters.AddWithValue("@id_etudiant", Convert.ToInt32(Etudiant_ID[etu]));
                    cqf.Parameters.AddWithValue("@id_session", id_session);
                    cqf.Parameters.AddWithValue("@id_classe", id_classe);
                    cqf.Parameters.AddWithValue("@id_departement", id_departement);
                    cqf.Parameters.AddWithValue("@id_faculte", id_faculte);
                    cqf.Parameters.AddWithValue("@id_annee", id_annee);
                    int exist_en_2emeS = Convert.ToInt32(cqf.ExecuteScalar());
                    if (exist_en_2emeS == 0)
                    {
                        string sq10 = "SELECT ue_nv, ecue_nv,id_mention,id_decision,pourcentage FROM deliberation  WHERE id_etudiant=@id_etudiant AND id_classe=@id_classe AND id_departement=@id_departement AND id_session=@id_session AND id_faculte=@id_faculte AND id_annee=@id_annee";
                        MySqlCommand cmd10 = new MySqlCommand(sq10, conn);
                        cmd10.Parameters.AddWithValue("@id_etudiant", Convert.ToInt32(Etudiant_ID[etu]));
                        cmd10.Parameters.AddWithValue("@id_classe", id_classe);
                        cmd10.Parameters.AddWithValue("@id_departement", id_departement);
                        cmd10.Parameters.AddWithValue("@id_faculte", id_faculte);
                        cmd10.Parameters.AddWithValue("@id_annee", id_annee);
                        cmd10.Parameters.AddWithValue("@id_session", 1);
                        MySqlDataReader dr10 = cmd10.ExecuteReader();
                        while (dr10.Read())
                        {
                            ue_nv = dr10.GetInt32(0);
                            ecue_nv = dr10.GetInt32(1);
                            id_mention = dr10.GetInt32(2);
                            id_decision = dr10.GetInt32(3);
                            prcente = dr10.GetDouble(4);
                        }
                        dr10.Close();

                        string sq11 = "SELECT sigle FROM deliberation_condition WHERE id_decision=@id_decision AND id_session=@id_session";
                        MySqlCommand cmd11 = new MySqlCommand(sq11, conn);
                        cmd11.Parameters.AddWithValue("@id_decision", id_decision);
                        cmd11.Parameters.AddWithValue("@id_session", 1);
                        MySqlDataReader dr11 = cmd11.ExecuteReader();
                        while (dr11.Read())
                        {
                            decision = dr11.GetString(0);
                        }
                        dr11.Close();

                        string sq12 = "SELECT abbreviation FROM mention WHERE id_mention=@id_mention";
                        MySqlCommand cmd12 = new MySqlCommand(sq12, conn);
                        cmd12.Parameters.AddWithValue("@id_mention", id_mention);
                        MySqlDataReader dr12 = cmd12.ExecuteReader();
                        while (dr12.Read())
                        {
                            mention = dr12.GetString(0);
                        }
                        dr12.Close();
                    }
                    else
                    {
                        string sq10 = "SELECT ue_nv, ecue_nv,id_mention,id_decision,pourcentage FROM deliberation  WHERE id_etudiant=@id_etudiant AND id_classe=@id_classe AND id_departement=@id_departement AND id_session=@id_session AND id_faculte=@id_faculte AND id_annee=@id_annee";
                        MySqlCommand cmd10 = new MySqlCommand(sq10, conn);
                        cmd10.Parameters.AddWithValue("@id_etudiant", Convert.ToInt32(Etudiant_ID[etu]));
                        cmd10.Parameters.AddWithValue("@id_classe", id_classe);
                        cmd10.Parameters.AddWithValue("@id_departement", id_departement);
                        cmd10.Parameters.AddWithValue("@id_faculte", id_faculte);
                        cmd10.Parameters.AddWithValue("@id_annee", id_annee);
                        cmd10.Parameters.AddWithValue("@id_session", id_session);
                        MySqlDataReader dr10 = cmd10.ExecuteReader();
                        while (dr10.Read())
                        {
                            ue_nv = dr10.GetInt32(0);
                            ecue_nv = dr10.GetInt32(1);
                            id_mention = dr10.GetInt32(2);
                            id_decision = dr10.GetInt32(3);
                            prcente = dr10.GetDouble(4);
                        }
                        dr10.Close();

                        string sq11 = "SELECT sigle FROM deliberation_condition WHERE id_decision=@id_decision AND id_session=@id_session";
                        MySqlCommand cmd11 = new MySqlCommand(sq11, conn);
                        cmd11.Parameters.AddWithValue("@id_decision", id_decision);
                        cmd11.Parameters.AddWithValue("@id_session", id_session);
                        MySqlDataReader dr11 = cmd11.ExecuteReader();
                        while (dr11.Read())
                        {
                            decision = dr11.GetString(0);
                        }
                        dr11.Close();

                        string sq12 = "SELECT abbreviation FROM mention WHERE id_mention=@id_mention";
                        MySqlCommand cmd12 = new MySqlCommand(sq12, conn);
                        cmd12.Parameters.AddWithValue("@id_mention", id_mention);
                        MySqlDataReader dr12 = cmd12.ExecuteReader();
                        while (dr12.Read())
                        {
                            mention = dr12.GetString(0);
                        }
                        dr12.Close();
                    }

                    /*cell = new PdfPCell(new Phrase(ecue_nv.ToString(), note_font));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    //cell.BackgroundColor = BaseColor.GRAY;
                    tab.AddCell(cell);*/

                    cell = new PdfPCell(new Phrase(ue_nv.ToString(), note_font));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    //cell.BackgroundColor = BaseColor.GRAY;
                    tab.AddCell(cell);

                    cell = new PdfPCell(new Phrase(prcente.ToString("#.##"), note_font));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    //cell.BackgroundColor = BaseColor.GRAY;
                    tab.AddCell(cell);

                    cell = new PdfPCell(new Phrase(mention, note_font));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    //cell.BackgroundColor = BaseColor.GRAY;
                    tab.AddCell(cell);

                    cell = new PdfPCell(new Phrase(decision, note_font));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    //cell.BackgroundColor = BaseColor.GRAY;
                    tab.AddCell(cell);
                }
                doc.Add(tab);
                PdfPTable tVisa = new PdfPTable(5);//Creer une table de 5 colonnes
                float[] colwithv = { 7f, 7f, 7f, 7f, 12f };//parametrer les domensions(largeur) de chacune des collonnes
                tVisa.SetWidths(colwithv);//appliquer ces dimenstions a l atable


                cell = new PdfPCell(new Phrase("", Semestre_font));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 5;
                tVisa.AddCell(cell);

                cell = new PdfPCell(new Phrase("", Semestre_font));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 5;
                tVisa.AddCell(cell);

                cell = new PdfPCell(new Phrase("", Semestre_font));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 5;
                tVisa.AddCell(cell);

                cell = new PdfPCell(new Phrase("\nVISA DU DECANAT", Semestre_font));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 2;
                tVisa.AddCell(cell);

                cell = new PdfPCell(new Phrase("", Semestre_font));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 2;
                tVisa.AddCell(cell);

                string dat = "Fait à " + siege + " ,le " + DateTime.Today.Date.ToShortDateString();
                string nom_rect = "Jury de délibération";
                cell = new PdfPCell(new Phrase(dat + "\n\n" + nom_rect, Semestre_font));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                tVisa.AddCell(cell);

                Paragraph pVisa = new Paragraph();
                //parf.IndentationLeft = 240;
                pVisa.Alignment = Element.ALIGN_CENTER;
                //pVisa.SpacingAfter = 6;
                pVisa.SpacingBefore = 8;
                pVisa.Add(tVisa);

                doc.Add(pVisa);

                wri.PageEvent = new Foot();
                doc.Close();
                System.Diagnostics.Process.Start(outputFile);
                conn.Close();
            }
            catch (Exception ex)
            {
                //MessageBox.Show(ex.Message);
            }
        }
        public void Grille_Annuelle_full_1ere_Session(int idan, string ann, int idf, string fac, int hasdep, int iddep, string dep, int idcl, string clas, int idsess, string sessio, int idsem, string semestr)
        {
            int id_annee = idan;
            int id_faculte = idf;
            int id_departement = iddep;
            int id_classe = idcl;
            int id_session = idsess;
            int id_semestre = idsem;
            int has_depaartement = hasdep;

            string annee = ann;
            string faculte = fac;
            string departement = dep;
            string classe = clas;
            string session = sessio;
            string semestre = semestr;

            Create_Folder();
            int ecue_sous_sept_value = 0, ecue_sous_sept = 0, credits_annuel = 0;


            string[] Etudiant_ID, Etudiant_Nom, Etudiant_Prenom;
            try
            {
                DateTime dt = DateTime.Now;
                int year = dt.Year;
                int mois = dt.Month;
                int jour = dt.Day;
                int heure = dt.Hour;
                int min = dt.Minute;
                int sec = dt.Month;
                string date = jour + "-" + mois + "-" + year + "_à_" + heure + "h" + min + "min" + sec + "sec";

                iTextSharp.text.Document doc = new iTextSharp.text.Document(PageSize.A4.Rotate(), 0, 0, 20, 20);
                string docname = "GD_1S_" + date + ".pdf";
                string outputFile = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.Desktop), @"BMDSys", docname);
                FileStream fs = new FileStream(outputFile, FileMode.Create, FileAccess.Write, FileShare.None);
                PdfWriter wri = PdfWriter.GetInstance(doc, fs);
                doc.Open();

                conn = new MySqlConnection(Authentification.MyString);
                conn.Open();

                string universite = Load_Institution(conn);
                string coordonee = Load_Adress(conn);
                string value = coordonee;
                string[] op = value.Split('-');
                site = op[0];
                siege = op[1];
                telephone = op[2];
                b_postale = op[3];

                PdfPCell cell = new PdfPCell(new Phrase("", font_bold_10));
                PdfPTable table1 = first_header(conn, universite, ref cell, faculte);
                doc.Add(table1);



                iTextSharp.text.Paragraph txt_t = new iTextSharp.text.Paragraph(" ", font_bold_10);
                txt_t.Alignment = Element.ALIGN_CENTER;
                txt_t.SpacingBefore = 10;
                txt_t.SpacingAfter = 10;
                doc.Add(txt_t);


                PdfPTable taba = new PdfPTable(4);//Creer une table de 5 colonnes
                float[] coltaba = { 10f, 12f, 6f, 15f };//parametrer les domensions(largeur) de chacune des collonnes
                taba.SetWidths(coltaba);

                cell = new PdfPCell(new Phrase("Département", font_bold_10));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);

                if (has_depaartement == 0 || has_depaartement == 1)
                {
                    cell = new PdfPCell(new Phrase(": ", font_bold_5));
                    cell.HorizontalAlignment = Element.ALIGN_LEFT;
                    cell.BorderWidth = 0;
                    taba.AddCell(cell);
                }
                else if (has_depaartement > 1)
                {
                    cell = new PdfPCell(new Phrase(": " + departement, font_bold_10));
                    cell.HorizontalAlignment = Element.ALIGN_LEFT;
                    cell.BorderWidth = 0;
                    taba.AddCell(cell);
                }

                cell = new PdfPCell(new Phrase("Session", font_bold_10));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);

                cell = new PdfPCell(new Phrase(": " + session, font_bold_10));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);



                cell = new PdfPCell(new Phrase("Filière/Option", font_bold_10));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);

                cell = new PdfPCell(new Phrase(": ", font_bold_10));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);

                cell = new PdfPCell(new Phrase(" ", font_bold_10));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidth = 0;
                cell.Colspan = 2;
                taba.AddCell(cell);


                cell = new PdfPCell(new Phrase("Classe", font_bold_10));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);


                cell = new PdfPCell(new Phrase(": " + classe, font_bold_10));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);


                cell = new PdfPCell(new Phrase(" ", font_bold_10));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                cell.Colspan = 2;
                taba.AddCell(cell);


                cell = new PdfPCell(new Phrase("Année Academique", font_bold_10));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);

                cell = new PdfPCell(new Phrase(": " + annee, font_bold_10));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);


                cell = new PdfPCell(new Phrase(" ", font_bold_10));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                cell.Colspan = 2;
                taba.AddCell(cell);

                doc.Add(taba);

                string s7 = "SELECT valeur FROM  deliberation_parametre_generaux WHERE id_parametre=@id_parametre";
                MySqlCommand c7 = new MySqlCommand(s7, conn);
                c7.Parameters.AddWithValue("@id_parametre", 4);
                MySqlDataReader d7 = c7.ExecuteReader();
                while (d7.Read())
                {
                    ecue_sous_sept_value = d7.GetInt32(0);
                }
                d7.Close();


                Paragraph parf = new Paragraph();
                //parf.IndentationLeft = 240;
                string ta = "GRILLE DE DELIBERATION";
                parf.Add(new Phrase(ta, font_normal_underlined_10));
                parf.Alignment = Element.ALIGN_CENTER;
                parf.SpacingAfter = 10;
                parf.SpacingBefore = 10;
                doc.Add(parf);

                string[] UE_ID, UE_Array, UE_Code;
                int nbre_colonnes = 0;

                string sq1 = "SELECT COUNT(DISTINCT id_unite) FROM unite WHERE id_classe=@idcl AND id_departement=@id_departement AND id_faculte=@id_faculte AND id_annee=@id_annee";
                MySqlCommand cmd1 = new MySqlCommand(sq1, conn);
                cmd1.Parameters.AddWithValue("@idcl", id_classe);
                cmd1.Parameters.AddWithValue("@id_departement", id_departement);
                cmd1.Parameters.AddWithValue("@id_faculte", id_faculte);
                cmd1.Parameters.AddWithValue("@id_annee", id_annee);
                //cmd1.Parameters.AddWithValue("@idsem", etudiant_grille_deliberation.id_semestre);
                int nbre_ue = Convert.ToInt32(cmd1.ExecuteScalar());

                UE_ID = new string[nbre_ue];
                UE_Array = new string[nbre_ue];
                UE_Code = new string[nbre_ue];

                string sq2 = "SELECT DISTINCT id_unite,unite,code_unite FROM unite WHERE id_classe=@idcl AND id_departement=@id_departement AND id_faculte=@id_faculte AND id_annee=@id_annee";
                MySqlCommand cmd2 = new MySqlCommand(sq2, conn);
                cmd2.Parameters.AddWithValue("@id_faculte", id_faculte);
                cmd2.Parameters.AddWithValue("@id_annee", id_annee);
                cmd2.Parameters.AddWithValue("@id_departement", id_departement);
                cmd2.Parameters.AddWithValue("@idcl", id_classe);
                //cmd2.Parameters.AddWithValue("@idsem", etudiant_grille_deliberation.id_semestre);
                MySqlDataReader dr2 = cmd2.ExecuteReader();
                int j = 0;
                while (dr2.Read())
                {
                    UE_ID[j] = string.Format("{0}", dr2.GetInt32(0).ToString());
                    UE_Array[j] = string.Format("{0}", dr2.GetString(1));
                    UE_Code[j] = string.Format("{0}", dr2.GetString(2));
                    j++;
                }
                dr2.Close();

                int nbre_cours = 0;
                for (int k = 0; k < nbre_ue; k++)
                {
                    string sq3 = "SELECT COUNT(DISTINCT id_cours ) FROM cours WHERE id_unite=@idue";
                    MySqlCommand cm3 = new MySqlCommand(sq3, conn);
                    cm3.Parameters.AddWithValue("@idue", Convert.ToInt32(UE_ID[k]));
                    nbre_cours = Convert.ToInt32(cm3.ExecuteScalar());
                    nbre_colonnes += (nbre_cours + 2);
                }
                nbre_colonnes += 6;


                PdfPTable tab = new PdfPTable(nbre_colonnes);
                tab.TotalWidth = doc.PageSize.Width;
                List<float> termsList = new List<float>();
                float[] widths = new float[nbre_colonnes];
                int i = 0;
                for (i = 0; i < nbre_colonnes; i++)
                {
                    if (i == 0)
                        termsList.Add(12f);
                    else if (i == 1)
                        termsList.Add(90f);
                    else if (i == nbre_colonnes - 4 || i == nbre_colonnes - 3)
                        termsList.Add(19f);
                    else if (i == nbre_colonnes - 2)
                        termsList.Add(12f);
                    else
                        termsList.Add(15f);
                }

                float[] terms = termsList.ToArray();
                tab.SetWidths(terms);

                cell = new PdfPCell(new Phrase("", font_bold_5));
                cell.Colspan = 2;
                cell.Rowspan = 3;
                cell.BorderWidth = 0;
                tab.AddCell(cell);

                int nbre_ecue = 0;
                for (int ue = 0; ue < nbre_ue; ue++)
                {
                    string sq4 = "SELECT COUNT(DISTINCT id_cours) FROM cours WHERE id_unite=@idue";
                    MySqlCommand cm4 = new MySqlCommand(sq4, conn);
                    cm4.Parameters.AddWithValue("@idue", Convert.ToInt32(UE_ID[ue]));
                    nbre_ecue = Convert.ToInt32(cm4.ExecuteScalar());

                    cell = new PdfPCell(new Phrase(UE_Code[ue] + " - " + UE_Array[ue], font_bold_5));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.Colspan = nbre_ecue + 2;
                    tab.AddCell(cell);
                }
                cell = new PdfPCell(new Phrase("\nTOTAL ANNUEL ", font_bold_5));
                cell.Rotation = 90;
                cell.Rowspan = 2;
                cell.BackgroundColor = BaseColor.GRAY;
                cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
                tab.AddCell(cell);

                cell = new PdfPCell(new Phrase("\nPOURCENTAGE", font_bold_5));
                cell.Rotation = 90;
                cell.Rowspan = 3;
                cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
                tab.AddCell(cell);

                cell = new PdfPCell(new Phrase("MENTION", font_bold_5));
                cell.Rotation = 90;
                cell.Rowspan = 3;
                cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
                tab.AddCell(cell);

                cell = new PdfPCell(new Phrase("DECISION", font_bold_5));
                cell.Rotation = 90;
                cell.Rowspan = 3;
                cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
                tab.AddCell(cell);

                string[] Nom_Cours, Credits_Cours;
                int ue_total_credit = 0;

                for (int ue = 0; ue < nbre_ue; ue++)
                {
                    string sq4 = "SELECT COUNT(DISTINCT id_cours) FROM cours WHERE id_unite=@idue";
                    MySqlCommand cm4 = new MySqlCommand(sq4, conn);
                    cm4.Parameters.AddWithValue("@idue", Convert.ToInt32(UE_ID[ue]));
                    nbre_ecue = Convert.ToInt32(cm4.ExecuteScalar());

                    Nom_Cours = new string[nbre_ecue];

                    string sq5 = "SELECT cours,credits FROM cours WHERE id_unite=@idue";
                    MySqlCommand cmd5 = new MySqlCommand(sq5, conn);
                    cmd5.Parameters.AddWithValue("@idue", Convert.ToInt32(UE_ID[ue]));
                    MySqlDataReader dr5 = cmd5.ExecuteReader();
                    int k = 0;
                    while (dr5.Read())
                    {
                        Nom_Cours[k] = string.Format("{0}", dr5.GetString(0));

                        cell = new PdfPCell(new Phrase(dr5.GetString(0), font_bold_5));
                        cell.Rotation = 90;
                        cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
                        tab.AddCell(cell);
                        k++;
                    }
                    dr5.Close();
                    cell = new PdfPCell(new Phrase("NOTE OBTENUE PAR UE", font_bold_5));
                    cell.Rotation = 90;
                    //cell.Rowspan = 2;
                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
                    tab.AddCell(cell);

                    cell = new PdfPCell(new Phrase("VALIDATION", font_bold_5));
                    cell.Rotation = 90;
                    cell.Rowspan = 2;
                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
                    tab.AddCell(cell);
                }

                for (int ue = 0; ue < nbre_ue; ue++)
                {
                    string sq4 = "SELECT COUNT(DISTINCT id_cours) FROM cours WHERE id_unite=@idue";
                    MySqlCommand cm4 = new MySqlCommand(sq4, conn);
                    cm4.Parameters.AddWithValue("@idue", Convert.ToInt32(UE_ID[ue]));
                    nbre_ecue = Convert.ToInt32(cm4.ExecuteScalar());

                    Credits_Cours = new string[nbre_ecue];

                    string sq5 = "SELECT cours,credits FROM cours WHERE id_unite=@idue";
                    MySqlCommand cmd5 = new MySqlCommand(sq5, conn);
                    cmd5.Parameters.AddWithValue("@idue", Convert.ToInt32(UE_ID[ue]));
                    MySqlDataReader dr5 = cmd5.ExecuteReader();
                    int k = 0;
                    while (dr5.Read())
                    {

                        Credits_Cours[k] = string.Format("{0}", dr5.GetInt32(1).ToString());
                        cell = new PdfPCell(new Phrase(dr5.GetInt32(1).ToString(), font_bold_5));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        tab.AddCell(cell);

                        ue_total_credit += dr5.GetInt32(1);
                        credits_annuel += dr5.GetInt32(1);
                        k++;
                    }
                    dr5.Close();

                    cell = new PdfPCell(new Phrase("20", font_bold_5));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    tab.AddCell(cell);
                }

                cell = new PdfPCell(new Phrase((credits_annuel * 20).ToString(), font_bold_5));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.GRAY;
                tab.AddCell(cell);

                //-------------------------------------------------------------------------ETUDIANTS--------------------------------------------

                string r = "SELECT COUNT( DISTINCT id_etudiant) FROM  etudiant_inscription WHERE id_classe=@idcl AND id_session=@id_session AND id_departement=@id_departement AND id_faculte=@id_faculte AND id_annee=@id_annee";
                MySqlCommand c = new MySqlCommand(r, conn);
                c.Parameters.AddWithValue("@idcl", id_classe);
                c.Parameters.AddWithValue("@id_faculte", id_faculte);
                c.Parameters.AddWithValue("@id_annee", id_annee);
                c.Parameters.AddWithValue("@id_session", id_session);
                c.Parameters.AddWithValue("@id_departement", id_departement);
                int nbre_etudiant = Convert.ToInt32(c.ExecuteScalar());
                Etudiant_ID = new string[nbre_etudiant];
                Etudiant_Nom = new string[nbre_etudiant];
                Etudiant_Prenom = new string[nbre_etudiant];

                string ra = "SELECT DISTINCT id_etudiant FROM  etudiant_inscription WHERE id_classe=@idcl AND id_session=@id_session AND id_departement=@id_departement AND id_faculte=@id_faculte AND id_annee=@id_annee";
                MySqlCommand ca = new MySqlCommand(ra, conn);
                ca.Parameters.AddWithValue("@idcl", id_classe);
                ca.Parameters.AddWithValue("@id_faculte", id_faculte);
                ca.Parameters.AddWithValue("@id_annee", id_annee);
                ca.Parameters.AddWithValue("@id_session", id_session);
                ca.Parameters.AddWithValue("@id_departement", id_departement);
                MySqlDataReader da = ca.ExecuteReader();
                int m = 0;
                while (da.Read())
                {
                    Etudiant_ID[m] = string.Format("{0}", da.GetInt32(0).ToString());
                    m++;
                }
                da.Close();


                int numero = 1;
                for (int etu = 0; etu < nbre_etudiant; etu++)
                {
                    cell = new PdfPCell(new Phrase(numero.ToString(), font_bold_5));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    tab.AddCell(cell);
                    numero++;

                    string ra1 = "SELECT nom, prenom FROM  etudiant WHERE id_etudiant=@id_etudiant";
                    MySqlCommand ca1 = new MySqlCommand(ra1, conn);
                    ca1.Parameters.AddWithValue("@id_etudiant", Convert.ToInt32(Etudiant_ID[etu]));
                    MySqlDataReader da1 = ca1.ExecuteReader();
                    while (da1.Read())
                    {
                        cell = new PdfPCell(new Phrase(da1.GetString(0) + " " + da1.GetString(1), font_bold_5));
                        cell.HorizontalAlignment = Element.ALIGN_LEFT;
                        tab.AddCell(cell);
                    }
                    da1.Close();

                    string[] Cours_ID, Cours_Nom, Cours_Credits;
                    double ue_pondere = 0;
                    int nbre_rat = 0, tot_credit = 0;
                    for (int unite = 0; unite < nbre_ue; unite++)
                    {
                        ecue_sous_sept = 0;
                        ue_pondere = 0;
                        nbre_rat = 0;
                        tot_credit = 0;
                        string sq6 = "SELECT COUNT(DISTINCT id_cours) FROM cours WHERE id_unite=@idue";
                        MySqlCommand cm6 = new MySqlCommand(sq6, conn);
                        cm6.Parameters.AddWithValue("@idue", Convert.ToInt32(UE_ID[unite]));
                        nbre_ecue = Convert.ToInt32(cm6.ExecuteScalar());

                        Cours_ID = new string[nbre_ecue];
                        Cours_Credits = new string[nbre_ecue];

                        string sq7 = "SELECT DISTINCT id_cours,credits FROM cours WHERE id_unite=@idue";
                        MySqlCommand cmd7 = new MySqlCommand(sq7, conn);
                        cmd7.Parameters.AddWithValue("@idue", Convert.ToInt32(UE_ID[unite]));
                        MySqlDataReader dr7 = cmd7.ExecuteReader();
                        int n = 0;
                        while (dr7.Read())
                        {
                            Cours_ID[n] = string.Format("{0}", dr7.GetInt32(0).ToString());
                            Cours_Credits[n] = string.Format("{0}", dr7.GetInt32(1).ToString());
                            tot_credit += Convert.ToInt32(Cours_Credits[n]);
                            n++;
                        }
                        dr7.Close();

                        for (int cours = 0; cours < nbre_ecue; cours++)
                        {

                            string sq8 = "SELECT COUNT(*) FROM etudiant_note  WHERE id_etudiant=@id_etudiant AND id_cours=@id_cours AND id_session=@id_session";
                            MySqlCommand cmd8 = new MySqlCommand(sq8, conn);
                            cmd8.Parameters.AddWithValue("@id_session", id_session);
                            cmd8.Parameters.AddWithValue("@id_cours", Convert.ToInt32(Cours_ID[cours]));
                            cmd8.Parameters.AddWithValue("@id_etudiant", Convert.ToInt32(Etudiant_ID[etu]));
                            int nbre = Convert.ToInt32(cmd8.ExecuteScalar());
                            if (nbre == 0)
                            {
                                cell = new PdfPCell(new Phrase("", font_bold_5));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                tab.AddCell(cell);
                                nbre_rat++;
                            }
                            else
                            {
                                string sq9 = "SELECT note FROM etudiant_note  WHERE id_etudiant=@id_etudiant AND id_cours=@id_cours AND id_session=@id_session";
                                MySqlCommand cmd9 = new MySqlCommand(sq9, conn);
                                cmd9.Parameters.AddWithValue("@id_session", id_session);
                                cmd9.Parameters.AddWithValue("@id_cours", Convert.ToInt32(Cours_ID[cours]));
                                cmd9.Parameters.AddWithValue("@id_etudiant", Convert.ToInt32(Etudiant_ID[etu]));
                                MySqlDataReader dr9 = cmd9.ExecuteReader();

                                while (dr9.Read())
                                {
                                    cell = new PdfPCell(new Phrase(dr9.GetString(0), font_bold_5));
                                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                    tab.AddCell(cell);
                                    //ue_pondere += Convert.ToDouble(Cours_Credits[cours]) * double.Parse(dr9.GetString(0), System.Globalization.CultureInfo.InvariantCulture);
                                    if (Convert.ToDouble(dr9.GetString(0)) < ecue_sous_sept_value)
                                    {
                                        ecue_sous_sept++;
                                    }
                                    ue_pondere += Convert.ToDouble(Cours_Credits[cours]) * Convert.ToDouble(dr9.GetString(0));
                                }
                                dr9.Close();
                            }
                        }
                        cell = new PdfPCell(new Phrase((ue_pondere / tot_credit).ToString("#.#"), font_bold_5));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        tab.AddCell(cell);

                        double pourc = (ue_pondere * 100) / (tot_credit * 20);
                        /*cell = new PdfPCell(new Phrase(pourc.ToString("#.##"), note_font));
                        cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        tab.AddCell(cell);*/

                        if (pourc < 50 || nbre_rat > 0 || ecue_sous_sept > 0)
                        {
                            cell = new PdfPCell(new Phrase("NV", font_bold_5));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            tab.AddCell(cell);
                        }
                        else
                        {
                            cell = new PdfPCell(new Phrase("V", font_bold_5));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            tab.AddCell(cell);
                        }
                    }


                    int ue_nv = -1, ecue_nv = -1, id_mention = -1, id_decision = -1;
                    double prcente = 0.0;
                    string sq10 = "SELECT ue_nv, ecue_nv,id_mention,id_decision,pourcentage FROM deliberation  WHERE id_etudiant=@id_etudiant AND id_classe=@id_classe AND id_departement=@id_departement AND id_session=@id_session AND id_faculte=@id_faculte AND id_annee=@id_annee";
                    MySqlCommand cmd10 = new MySqlCommand(sq10, conn);
                    cmd10.Parameters.AddWithValue("@id_etudiant", Convert.ToInt32(Etudiant_ID[etu]));
                    cmd10.Parameters.AddWithValue("@id_classe", id_classe);
                    cmd10.Parameters.AddWithValue("@id_departement", id_departement);
                    cmd10.Parameters.AddWithValue("@id_faculte", id_faculte);
                    cmd10.Parameters.AddWithValue("@id_annee", id_annee);
                    cmd10.Parameters.AddWithValue("@id_session", id_session);
                    MySqlDataReader dr10 = cmd10.ExecuteReader();
                    while (dr10.Read())
                    {
                        ue_nv = dr10.GetInt32(0);
                        ecue_nv = dr10.GetInt32(1);
                        id_mention = dr10.GetInt32(2);
                        id_decision = dr10.GetInt32(3);
                        prcente = dr10.GetDouble(4);
                    }
                    dr10.Close();

                    string mention = "", decision = "";
                    string sq11 = "SELECT sigle FROM deliberation_condition WHERE id_decision=@id_decision AND id_session=@id_session";
                    MySqlCommand cmd11 = new MySqlCommand(sq11, conn);
                    cmd11.Parameters.AddWithValue("@id_decision", id_decision);
                    cmd11.Parameters.AddWithValue("@id_session", id_session);
                    MySqlDataReader dr11 = cmd11.ExecuteReader();
                    while (dr11.Read())
                    {
                        decision = dr11.GetString(0);
                    }
                    dr11.Close();

                    string sq12 = "SELECT abbreviation FROM mention WHERE id_mention=@id_mention";
                    MySqlCommand cmd12 = new MySqlCommand(sq12, conn);
                    cmd12.Parameters.AddWithValue("@id_mention", id_mention);
                    MySqlDataReader dr12 = cmd12.ExecuteReader();
                    while (dr12.Read())
                    {
                        mention = dr12.GetString(0);
                    }
                    dr12.Close();


                    cell = new PdfPCell(new Phrase(((credits_annuel * 20 * prcente) / 100).ToString("#.##"), font_bold_5));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.GRAY;
                    tab.AddCell(cell);

                    cell = new PdfPCell(new Phrase(prcente.ToString("#.##"), font_bold_5));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.GRAY;
                    tab.AddCell(cell);

                    cell = new PdfPCell(new Phrase(mention, font_bold_5));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.GRAY;
                    tab.AddCell(cell);

                    cell = new PdfPCell(new Phrase(decision, font_bold_5));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.GRAY;
                    tab.AddCell(cell);
                }
                doc.Add(tab);

                PdfPTable tVisa = new PdfPTable(5);//Creer une table de 5 colonnes
                float[] colwithv = { 7f, 7f, 7f, 7f, 12f };//parametrer les domensions(largeur) de chacune des collonnes
                tVisa.SetWidths(colwithv);//appliquer ces dimenstions a l atable


                cell = new PdfPCell(new Phrase("", font_bold_10));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidth = 0;
                cell.Colspan = 5;
                tVisa.AddCell(cell);

                cell = new PdfPCell(new Phrase("", font_bold_10));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidth = 0;
                cell.Colspan = 5;
                tVisa.AddCell(cell);

                cell = new PdfPCell(new Phrase("", font_bold_10));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidth = 0;
                cell.Colspan = 5;
                tVisa.AddCell(cell);

                cell = new PdfPCell(new Phrase("\nSECRETAIRE DU JURY", font_bold_10));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidth = 0;
                cell.Colspan = 2;
                tVisa.AddCell(cell);

                cell = new PdfPCell(new Phrase("", font_bold_10));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 2;
                tVisa.AddCell(cell);

                string dat = "Fait à " + siege + " ,le " + DateTime.Today.Date.ToShortDateString();
                string nom_rect = "PRESIDENT DU JURY";

                cell = new PdfPCell(new Phrase(dat + "\n\n" + nom_rect, font_bold_10));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                tVisa.AddCell(cell);

                Paragraph pVisa = new Paragraph();
                //parf.IndentationLeft = 240;
                pVisa.Alignment = Element.ALIGN_CENTER;
                //pVisa.SpacingAfter = 6;
                pVisa.SpacingBefore = 8;
                pVisa.Add(tVisa);

                doc.Add(pVisa);

                wri.PageEvent = new Foot();

                doc.Close();
                System.Diagnostics.Process.Start(outputFile);
                conn.Close();
            }
            catch (Exception ex)
            {
                //MessageBox.Show(ex.Message);
            }
        }
        public void Grille_Annuelle_full_2eme_Session(int idan, string ann, int idf, string fac, int hasdep, int iddep, string dep, int idcl, string clas, int idsess, string sessio, int idsem, string semestr)
        {
            int id_annee = idan;
            int id_faculte = idf;
            int id_departement = iddep;
            int id_classe = idcl;
            int id_session = idsess;
            int id_semestre = idsem;
            int has_depaartement = hasdep;

            string annee = ann;
            string faculte = fac;
            string departement = dep;
            string classe = clas;
            string session = sessio;
            string semestre = semestr;

            Create_Folder();
            int ecue_sous_sept_value = 0, ecue_sous_sept = 0, credits_annuel = 0;
            //string[] UE_ID, UE_Array, UE_Code, Cours_ID, Cours_Nom, Cours_Credits, Nom_Cours, Credits_Cours;
            string[] Etudiant_ID, Etudiant_Nom, Etudiant_Prenom;
            try
            {
                DateTime dt = DateTime.Now;
                int year = dt.Year;
                int mois = dt.Month;
                int jour = dt.Day;
                int heure = dt.Hour;
                int min = dt.Minute;
                int sec = dt.Month;
                string date = jour + "-" + mois + "-" + year + "_à_" + heure + "h" + min + "min" + sec + "sec";

                iTextSharp.text.Document doc = new iTextSharp.text.Document(PageSize.A4.Rotate(), 0, 0, 20, 10);
                string docname = "GD_2S_" + date + ".pdf";
                string outputFile = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.Desktop), @"BMDSys", docname);
                FileStream fs = new FileStream(outputFile, FileMode.Create, FileAccess.Write, FileShare.None);
                PdfWriter wri = PdfWriter.GetInstance(doc, fs);
                doc.Open();


                conn = new MySqlConnection(Authentification.MyString);
                conn.Open();

                string universite = Load_Institution(conn);
                string coordonee = Load_Adress(conn);
                string value = coordonee;
                string[] op = value.Split('-');
                site = op[0];
                siege = op[1];
                telephone = op[2];
                b_postale = op[3];

                PdfPCell cell = new PdfPCell(new Phrase("", font_bold_10));
                PdfPTable table1 = first_header(conn, universite, ref cell, faculte);
                doc.Add(table1);



                iTextSharp.text.Paragraph txt_t = new iTextSharp.text.Paragraph(" ", font_bold_10);
                txt_t.Alignment = Element.ALIGN_CENTER;
                txt_t.SpacingBefore = 10;
                txt_t.SpacingAfter = 10;
                doc.Add(txt_t);


                PdfPTable taba = new PdfPTable(4);//Creer une table de 5 colonnes
                float[] coltaba = { 10f, 12f, 6f, 15f };//parametrer les domensions(largeur) de chacune des collonnes
                taba.SetWidths(coltaba);

                cell = new PdfPCell(new Phrase("Département", font_bold_10));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);

                if (has_depaartement == 0 || has_depaartement == 1)
                {
                    cell = new PdfPCell(new Phrase(": ", font_bold_4));
                    cell.HorizontalAlignment = Element.ALIGN_LEFT;
                    cell.BorderWidth = 0;
                    taba.AddCell(cell);
                }
                else if (has_depaartement > 1)
                {
                    cell = new PdfPCell(new Phrase(": " + departement, font_bold_10));
                    cell.HorizontalAlignment = Element.ALIGN_LEFT;
                    cell.BorderWidth = 0;
                    taba.AddCell(cell);
                }

                cell = new PdfPCell(new Phrase("Session", font_bold_10));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);

                cell = new PdfPCell(new Phrase(": " + session, font_bold_10));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);



                cell = new PdfPCell(new Phrase("Filière/Option", font_bold_10));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);

                cell = new PdfPCell(new Phrase(": ", font_bold_10));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);

                cell = new PdfPCell(new Phrase(" ", font_bold_10));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidth = 0;
                cell.Colspan = 2;
                taba.AddCell(cell);


                cell = new PdfPCell(new Phrase("Classe", font_bold_10));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);


                cell = new PdfPCell(new Phrase(": " + classe, font_bold_10));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);


                cell = new PdfPCell(new Phrase(" ", font_bold_10));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                cell.Colspan = 2;
                taba.AddCell(cell);


                cell = new PdfPCell(new Phrase("Année Academique", font_bold_10));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);

                cell = new PdfPCell(new Phrase(": " + annee, font_bold_10));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);


                cell = new PdfPCell(new Phrase(" ", font_bold_10));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                cell.Colspan = 2;
                taba.AddCell(cell);

                doc.Add(taba);


                string s7 = "SELECT valeur FROM  deliberation_parametre_generaux WHERE id_parametre=@id_parametre";
                MySqlCommand c7 = new MySqlCommand(s7, conn);
                c7.Parameters.AddWithValue("@id_parametre", 4);
                MySqlDataReader d7 = c7.ExecuteReader();
                while (d7.Read())
                {
                    ecue_sous_sept_value = d7.GetInt32(0);
                }
                d7.Close();

                Paragraph parf = new Paragraph();
                //parf.IndentationLeft = 240;
                string ta = "GRILLE DE DELIBERATION";
                parf.Add(new Phrase(ta, font_normal_underlined_10));
                parf.Alignment = Element.ALIGN_CENTER;
                parf.SpacingAfter = 10;
                parf.SpacingBefore = 10;
                doc.Add(parf);


                int nbre_colonnes = 0;
                string sq1 = "SELECT COUNT(DISTINCT id_unite) FROM unite WHERE id_classe=@idcl AND id_departement=@id_departement AND id_faculte=@id_faculte AND id_annee=@id_annee";
                MySqlCommand cmd1 = new MySqlCommand(sq1, conn);
                cmd1.Parameters.AddWithValue("@idcl", id_classe);
                cmd1.Parameters.AddWithValue("@id_departement", id_departement);
                cmd1.Parameters.AddWithValue("@id_faculte", id_faculte);
                cmd1.Parameters.AddWithValue("@id_annee", id_annee);
                //cmd1.Parameters.AddWithValue("@idsem", etudiant_grille_deliberation.id_semestre);
                int nbre_ue = Convert.ToInt32(cmd1.ExecuteScalar());


                string[] UE_ID, UE_Array, UE_Code;

                UE_ID = new string[nbre_ue];
                UE_Array = new string[nbre_ue];
                UE_Code = new string[nbre_ue];

                string sq2 = "SELECT DISTINCT id_unite,unite,code_unite FROM unite WHERE id_classe=@idcl AND id_departement=@id_departement AND id_faculte=@id_faculte AND id_annee=@id_annee";
                MySqlCommand cmd2 = new MySqlCommand(sq2, conn);
                cmd2.Parameters.AddWithValue("@id_faculte", id_faculte);
                cmd2.Parameters.AddWithValue("@id_annee", id_annee);
                cmd2.Parameters.AddWithValue("@id_departement", id_departement);
                cmd2.Parameters.AddWithValue("@idcl", id_classe);
                //cmd2.Parameters.AddWithValue("@idsem", etudiant_grille_deliberation.id_semestre);
                MySqlDataReader dr2 = cmd2.ExecuteReader();
                int j = 0;
                while (dr2.Read())
                {
                    UE_ID[j] = string.Format("{0}", dr2.GetInt32(0).ToString());
                    UE_Array[j] = string.Format("{0}", dr2.GetString(1));
                    UE_Code[j] = string.Format("{0}", dr2.GetString(2));
                    j++;
                }
                dr2.Close();

                int nbre_cours = 0;
                for (int k = 0; k < nbre_ue; k++)
                {
                    string sq3 = "SELECT COUNT(DISTINCT id_cours ) FROM cours WHERE id_unite=@idue";
                    MySqlCommand cm3 = new MySqlCommand(sq3, conn);
                    cm3.Parameters.AddWithValue("@idue", Convert.ToInt32(UE_ID[k]));
                    nbre_cours = Convert.ToInt32(cm3.ExecuteScalar());
                    nbre_colonnes += (nbre_cours + 2);
                }
                nbre_colonnes += 6;


                PdfPTable tab = new PdfPTable(nbre_colonnes);
                tab.TotalWidth = doc.PageSize.Width;
                List<float> termsList = new List<float>();
                float[] widths = new float[nbre_colonnes];
                int i = 0;
                for (i = 0; i < nbre_colonnes; i++)
                {
                    if (i == 0)
                        termsList.Add(12f);
                    else if (i == 1)
                        termsList.Add(90f);
                    else if (i == nbre_colonnes - 4 || i == nbre_colonnes - 3)
                        termsList.Add(19f);
                    else if (i == nbre_colonnes - 2)
                        termsList.Add(12f);
                    else
                        termsList.Add(15f);
                }

                float[] terms = termsList.ToArray();
                tab.SetWidths(terms);

                cell = new PdfPCell(new Phrase("", font_bold_4));
                cell.Colspan = 2;
                cell.Rowspan = 3;
                cell.BorderWidth = 0;
                tab.AddCell(cell);

                int nbre_ecue = 0;
                for (int ue = 0; ue < nbre_ue; ue++)
                {
                    string sq4 = "SELECT COUNT(DISTINCT id_cours) FROM cours WHERE id_unite=@idue";
                    MySqlCommand cm4 = new MySqlCommand(sq4, conn);
                    cm4.Parameters.AddWithValue("@idue", Convert.ToInt32(UE_ID[ue]));
                    nbre_ecue = Convert.ToInt32(cm4.ExecuteScalar());

                    cell = new PdfPCell(new Phrase(UE_Code[ue] + " - " + UE_Array[ue], font_bold_4));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.Colspan = nbre_ecue + 2;
                    tab.AddCell(cell);
                }
                cell = new PdfPCell(new Phrase("\nTOTAL ANNUEL ", font_bold_4));
                cell.Rotation = 90;
                cell.Rowspan = 2;
                cell.BackgroundColor = BaseColor.GRAY;
                cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
                tab.AddCell(cell);

                cell = new PdfPCell(new Phrase("\nPOURCENTAGE", font_bold_4));
                cell.Rotation = 90;
                cell.Rowspan = 3;
                cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
                tab.AddCell(cell);

                cell = new PdfPCell(new Phrase("MENTION", font_bold_4));
                cell.Rotation = 90;
                cell.Rowspan = 3;
                cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
                tab.AddCell(cell);

                cell = new PdfPCell(new Phrase("DECISION", font_bold_4));
                cell.Rotation = 90;
                cell.Rowspan = 3;
                cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
                tab.AddCell(cell);

                string[] Nom_Cours, Credits_Cours = new string[10];
                int ue_total_credit = 0;

                for (int ue = 0; ue < nbre_ue; ue++)
                {
                    string sq4 = "SELECT COUNT(DISTINCT id_cours) FROM cours WHERE id_unite=@idue";
                    MySqlCommand cm4 = new MySqlCommand(sq4, conn);
                    cm4.Parameters.AddWithValue("@idue", Convert.ToInt32(UE_ID[ue]));
                    nbre_ecue = Convert.ToInt32(cm4.ExecuteScalar());

                    Nom_Cours = new string[nbre_ecue];

                    string sq5 = "SELECT cours,credits FROM cours WHERE id_unite=@idue";
                    MySqlCommand cmd5 = new MySqlCommand(sq5, conn);
                    cmd5.Parameters.AddWithValue("@idue", Convert.ToInt32(UE_ID[ue]));
                    MySqlDataReader dr5 = cmd5.ExecuteReader();
                    int k = 0;
                    while (dr5.Read())
                    {
                        Nom_Cours[k] = string.Format("{0}", dr5.GetString(0));

                        cell = new PdfPCell(new Phrase(dr5.GetString(0), font_normal_4));
                        cell.Rotation = 90;
                        cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
                        tab.AddCell(cell);
                        k++;
                    }
                    dr5.Close();
                    cell = new PdfPCell(new Phrase("NOTE OBTENUE PAR UE", font_bold_4));
                    cell.Rotation = 90;
                    //cell.Rowspan = 2;
                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
                    tab.AddCell(cell);

                    cell = new PdfPCell(new Phrase("VALIDATION", font_bold_4));
                    cell.Rotation = 90;
                    cell.Rowspan = 2;
                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
                    tab.AddCell(cell);
                }

                for (int ue = 0; ue < nbre_ue; ue++)
                {
                    string sq4 = "SELECT COUNT(DISTINCT id_cours) FROM cours WHERE id_unite=@idue";
                    MySqlCommand cm4 = new MySqlCommand(sq4, conn);
                    cm4.Parameters.AddWithValue("@idue", Convert.ToInt32(UE_ID[ue]));
                    nbre_ecue = Convert.ToInt32(cm4.ExecuteScalar());

                    Credits_Cours = new string[nbre_ecue];

                    string sq5 = "SELECT cours,credits FROM cours WHERE id_unite=@idue";
                    MySqlCommand cmd5 = new MySqlCommand(sq5, conn);
                    cmd5.Parameters.AddWithValue("@idue", Convert.ToInt32(UE_ID[ue]));
                    MySqlDataReader dr5 = cmd5.ExecuteReader();
                    int k = 0;
                    while (dr5.Read())
                    {

                        Credits_Cours[k] = string.Format("{0}", dr5.GetInt32(1).ToString());
                        cell = new PdfPCell(new Phrase(dr5.GetInt32(1).ToString(), font_normal_4));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        tab.AddCell(cell);

                        ue_total_credit += dr5.GetInt32(1);
                        credits_annuel += dr5.GetInt32(1);
                        k++;
                    }
                    dr5.Close();

                    cell = new PdfPCell(new Phrase("20", font_normal_4));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    tab.AddCell(cell);
                }

                cell = new PdfPCell(new Phrase((credits_annuel * 20).ToString(), font_normal_4));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.GRAY;
                tab.AddCell(cell);

                //-------------------------------------------------------------------------ETUDIANTS--------------------------------------------

                string r = "SELECT COUNT( DISTINCT id_etudiant) FROM  etudiant_inscription WHERE id_classe=@idcl AND id_session=@id_session AND id_departement=@id_departement AND id_faculte=@id_faculte AND id_annee=@id_annee";
                MySqlCommand c = new MySqlCommand(r, conn);
                c.Parameters.AddWithValue("@idcl", id_classe);
                c.Parameters.AddWithValue("@id_faculte", id_faculte);
                c.Parameters.AddWithValue("@id_annee", id_annee);
                c.Parameters.AddWithValue("@id_session", id_session);
                c.Parameters.AddWithValue("@id_departement", id_departement);
                int nbre_etudiant = Convert.ToInt32(c.ExecuteScalar());
                Etudiant_ID = new string[nbre_etudiant];
                Etudiant_Nom = new string[nbre_etudiant];
                Etudiant_Prenom = new string[nbre_etudiant];

                string ra = "SELECT DISTINCT id_etudiant FROM  etudiant_inscription WHERE id_classe=@idcl AND id_session=@id_session AND id_departement=@id_departement AND id_faculte=@id_faculte AND id_annee=@id_annee";
                MySqlCommand ca = new MySqlCommand(ra, conn);
                ca.Parameters.AddWithValue("@idcl", id_classe);
                ca.Parameters.AddWithValue("@id_faculte", id_faculte);
                ca.Parameters.AddWithValue("@id_annee", id_annee);
                ca.Parameters.AddWithValue("@id_session", id_session);
                ca.Parameters.AddWithValue("@id_departement", id_departement);
                MySqlDataReader da = ca.ExecuteReader();
                int m = 0;
                while (da.Read())
                {
                    Etudiant_ID[m] = string.Format("{0}", da.GetInt32(0).ToString());
                    m++;
                }
                da.Close();


                int numero = 1;
                for (int etu = 0; etu < nbre_etudiant; etu++)
                {
                    cell = new PdfPCell(new Phrase(numero.ToString(), font_normal_4));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    tab.AddCell(cell);
                    numero++;

                    string ra1 = "SELECT nom, prenom FROM  etudiant WHERE id_etudiant=@id_etudiant";
                    MySqlCommand ca1 = new MySqlCommand(ra1, conn);
                    ca1.Parameters.AddWithValue("@id_etudiant", Convert.ToInt32(Etudiant_ID[etu]));
                    MySqlDataReader da1 = ca1.ExecuteReader();
                    while (da1.Read())
                    {
                        cell = new PdfPCell(new Phrase(da1.GetString(0) + " " + da1.GetString(1), font_normal_4));
                        cell.HorizontalAlignment = Element.ALIGN_LEFT;
                        tab.AddCell(cell);
                    }
                    da1.Close();

                    string[] Cours_ID, Cours_Nom, Cours_Credits;
                    double ue_pondere = 0;
                    int nbre_rat = 0, tot_credit = 0;
                    for (int unite = 0; unite < nbre_ue; unite++)
                    {
                        ecue_sous_sept = 0;
                        ue_pondere = 0;
                        nbre_rat = 0;
                        tot_credit = 0;
                        string sq6 = "SELECT COUNT(id_cours) FROM cours WHERE id_unite=@idue";
                        MySqlCommand cm6 = new MySqlCommand(sq6, conn);
                        cm6.Parameters.AddWithValue("@idue", Convert.ToInt32(UE_ID[unite]));
                        nbre_ecue = Convert.ToInt32(cm6.ExecuteScalar());

                        Cours_ID = new string[nbre_ecue];
                        Cours_Credits = new string[nbre_ecue];

                        string sq7 = "SELECT id_cours,credits FROM cours WHERE id_unite=@idue";
                        MySqlCommand cmd7 = new MySqlCommand(sq7, conn);
                        cmd7.Parameters.AddWithValue("@idue", Convert.ToInt32(UE_ID[unite]));
                        MySqlDataReader dr7 = cmd7.ExecuteReader();
                        int n = 0;
                        while (dr7.Read())
                        {
                            Cours_ID[n] = string.Format("{0}", dr7.GetInt32(0).ToString());
                            Cours_Credits[n] = string.Format("{0}", dr7.GetInt32(1).ToString());
                            tot_credit += Convert.ToInt32(Cours_Credits[n]);
                            n++;
                        }
                        dr7.Close();

                        for (int cours = 0; cours < nbre_ecue; cours++)
                        {
                            string sqs2 = "SELECT COUNT(*) FROM etudiant_note WHERE id_cours=@id_cours AND id_etudiant=@id_etudiant AND id_session=@id_session";
                            MySqlCommand cqs2 = new MySqlCommand(sqs2, conn);
                            cqs2.Parameters.AddWithValue("@id_etudiant", Convert.ToInt32(Etudiant_ID[etu]));
                            cqs2.Parameters.AddWithValue("@id_session", 2);
                            cqs2.Parameters.AddWithValue("@id_cours", Convert.ToInt32(Cours_ID[cours]));
                            int exist_en_2eme_session = Convert.ToInt32(cqs2.ExecuteScalar());
                            if (exist_en_2eme_session == 0)
                            {
                                string sq8 = "SELECT COUNT(id_note) FROM etudiant_note  WHERE id_etudiant=@id_etudiant AND id_cours=@id_cours AND id_session=@id_session";
                                MySqlCommand cmd8 = new MySqlCommand(sq8, conn);
                                cmd8.Parameters.AddWithValue("@id_session", 1);
                                cmd8.Parameters.AddWithValue("@id_cours", Convert.ToInt32(Cours_ID[cours]));
                                cmd8.Parameters.AddWithValue("@id_etudiant", Convert.ToInt32(Etudiant_ID[etu]));
                                int nbre = Convert.ToInt32(cmd8.ExecuteScalar());
                                if (nbre == 0)
                                {
                                    cell = new PdfPCell(new Phrase("", font_bold_4));
                                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                    tab.AddCell(cell);
                                    nbre_rat++;
                                }
                                else
                                {
                                    string sq9 = "SELECT note FROM etudiant_note  WHERE id_etudiant=@id_etudiant AND id_cours=@id_cours AND id_session=@id_session";
                                    MySqlCommand cmd9 = new MySqlCommand(sq9, conn);
                                    cmd9.Parameters.AddWithValue("@id_session", 1);
                                    cmd9.Parameters.AddWithValue("@id_cours", Convert.ToInt32(Cours_ID[cours]));
                                    cmd9.Parameters.AddWithValue("@id_etudiant", Convert.ToInt32(Etudiant_ID[etu]));
                                    MySqlDataReader dr9 = cmd9.ExecuteReader();
                                    while (dr9.Read())
                                    {
                                        cell = new PdfPCell(new Phrase(dr9.GetString(0), font_normal_4));
                                        if (Convert.ToDouble(dr9.GetString(0)) < ecue_sous_sept_value)
                                        {
                                            ecue_sous_sept++;
                                        }
                                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                        tab.AddCell(cell);
                                        //ue_pondere += Convert.ToDouble(Cours_Credits[cours]) * double.Parse(dr9.GetString(0), System.Globalization.CultureInfo.InvariantCulture);
                                        ue_pondere += Convert.ToDouble(Cours_Credits[cours]) * Convert.ToDouble(dr9.GetString(0));
                                    }
                                    dr9.Close();
                                }
                            }
                            else
                            {
                                string sq8 = "SELECT COUNT(id_note) FROM etudiant_note  WHERE id_etudiant=@id_etudiant AND id_cours=@id_cours AND id_session=@id_session";
                                MySqlCommand cmd8 = new MySqlCommand(sq8, conn);
                                cmd8.Parameters.AddWithValue("@id_session", 2);
                                cmd8.Parameters.AddWithValue("@id_cours", Convert.ToInt32(Cours_ID[cours]));
                                cmd8.Parameters.AddWithValue("@id_etudiant", Convert.ToInt32(Etudiant_ID[etu]));
                                int nbre = Convert.ToInt32(cmd8.ExecuteScalar());
                                if (nbre == 0)
                                {
                                    cell = new PdfPCell(new Phrase("", font_bold_4));
                                    cell.HorizontalAlignment = Element.ALIGN_CENTER;

                                    tab.AddCell(cell);
                                    nbre_rat++;
                                }
                                else
                                {
                                    string sq9 = "SELECT note FROM etudiant_note  WHERE id_etudiant=@id_etudiant AND id_cours=@id_cours AND id_session=@id_session";
                                    MySqlCommand cmd9 = new MySqlCommand(sq9, conn);
                                    cmd9.Parameters.AddWithValue("@id_session", 2);
                                    cmd9.Parameters.AddWithValue("@id_cours", Convert.ToInt32(Cours_ID[cours]));
                                    cmd9.Parameters.AddWithValue("@id_etudiant", Convert.ToInt32(Etudiant_ID[etu]));
                                    MySqlDataReader dr9 = cmd9.ExecuteReader();
                                    while (dr9.Read())
                                    {
                                        cell = new PdfPCell(new Phrase(dr9.GetString(0), font_normal_4));
                                        if (Convert.ToDouble(dr9.GetString(0)) < ecue_sous_sept_value)
                                        {
                                            ecue_sous_sept++;
                                        }
                                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                        tab.AddCell(cell);
                                        //ue_pondere += Convert.ToDouble(Cours_Credits[cours]) * double.Parse(dr9.GetString(0), System.Globalization.CultureInfo.InvariantCulture);
                                        ue_pondere += Convert.ToDouble(Cours_Credits[cours]) * Convert.ToDouble(dr9.GetString(0));
                                    }
                                    dr9.Close();
                                }
                            }
                        }

                        cell = new PdfPCell(new Phrase((ue_pondere / tot_credit).ToString("#.#"), font_normal_4));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        tab.AddCell(cell);

                        double pourc = (ue_pondere * 100) / (tot_credit * 20);


                        if (pourc < 50 || nbre_rat > 0 || ecue_sous_sept > 0)
                        {
                            cell = new PdfPCell(new Phrase("NV", font_normal_4));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            tab.AddCell(cell);
                        }
                        else
                        {
                            cell = new PdfPCell(new Phrase("V", font_normal_4));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            tab.AddCell(cell);
                        }
                    }


                    int ue_nv = -1, ecue_nv = -1, id_mention = -1, id_decision = -1;
                    double prcente = 0.0;
                    string mention = "", decision = "";

                    string sqf = "SELECT COUNT(*) FROM deliberation WHERE id_etudiant=@id_etudiant AND id_session=@id_session AND id_classe=@id_classe AND id_departement=@id_departement AND id_faculte=@id_faculte AND id_annee=@id_annee";
                    MySqlCommand cqf = new MySqlCommand(sqf, conn);
                    cqf.Parameters.AddWithValue("@id_etudiant", Convert.ToInt32(Etudiant_ID[etu]));
                    cqf.Parameters.AddWithValue("@id_session", id_session);
                    cqf.Parameters.AddWithValue("@id_classe", id_classe);
                    cqf.Parameters.AddWithValue("@id_departement", id_departement);
                    cqf.Parameters.AddWithValue("@id_faculte", id_faculte);
                    cqf.Parameters.AddWithValue("@id_annee", id_annee);
                    int exist_en_2emeS = Convert.ToInt32(cqf.ExecuteScalar());
                    if (exist_en_2emeS == 0)
                    {
                        string sq10 = "SELECT ue_nv, ecue_nv,id_mention,id_decision,pourcentage FROM deliberation  WHERE id_etudiant=@id_etudiant AND id_classe=@id_classe AND id_departement=@id_departement AND id_session=@id_session AND id_faculte=@id_faculte AND id_annee=@id_annee";
                        MySqlCommand cmd10 = new MySqlCommand(sq10, conn);
                        cmd10.Parameters.AddWithValue("@id_etudiant", Convert.ToInt32(Etudiant_ID[etu]));
                        cmd10.Parameters.AddWithValue("@id_classe", id_classe);
                        cmd10.Parameters.AddWithValue("@id_departement", id_departement);
                        cmd10.Parameters.AddWithValue("@id_faculte", id_faculte);
                        cmd10.Parameters.AddWithValue("@id_annee", id_annee);
                        cmd10.Parameters.AddWithValue("@id_session", 1);
                        MySqlDataReader dr10 = cmd10.ExecuteReader();
                        while (dr10.Read())
                        {
                            ue_nv = dr10.GetInt32(0);
                            ecue_nv = dr10.GetInt32(1);
                            id_mention = dr10.GetInt32(2);
                            id_decision = dr10.GetInt32(3);
                            prcente = dr10.GetDouble(4);
                        }
                        dr10.Close();

                        string sq11 = "SELECT sigle FROM deliberation_condition WHERE id_decision=@id_decision AND id_session=@id_session";
                        MySqlCommand cmd11 = new MySqlCommand(sq11, conn);
                        cmd11.Parameters.AddWithValue("@id_decision", id_decision);
                        cmd11.Parameters.AddWithValue("@id_session", 1);
                        MySqlDataReader dr11 = cmd11.ExecuteReader();
                        while (dr11.Read())
                        {
                            decision = dr11.GetString(0);
                        }
                        dr11.Close();

                        string sq12 = "SELECT abbreviation FROM mention WHERE id_mention=@id_mention";
                        MySqlCommand cmd12 = new MySqlCommand(sq12, conn);
                        cmd12.Parameters.AddWithValue("@id_mention", id_mention);
                        MySqlDataReader dr12 = cmd12.ExecuteReader();
                        while (dr12.Read())
                        {
                            mention = dr12.GetString(0);
                        }
                        dr12.Close();
                    }
                    else
                    {
                        string sq10 = "SELECT ue_nv, ecue_nv,id_mention,id_decision,pourcentage FROM deliberation  WHERE id_etudiant=@id_etudiant AND id_classe=@id_classe AND id_departement=@id_departement AND id_session=@id_session AND id_faculte=@id_faculte AND id_annee=@id_annee";
                        MySqlCommand cmd10 = new MySqlCommand(sq10, conn);
                        cmd10.Parameters.AddWithValue("@id_etudiant", Convert.ToInt32(Etudiant_ID[etu]));
                        cmd10.Parameters.AddWithValue("@id_classe", id_classe);
                        cmd10.Parameters.AddWithValue("@id_departement", id_departement);
                        cmd10.Parameters.AddWithValue("@id_faculte", id_faculte);
                        cmd10.Parameters.AddWithValue("@id_annee", id_annee);
                        cmd10.Parameters.AddWithValue("@id_session", id_session);
                        MySqlDataReader dr10 = cmd10.ExecuteReader();
                        while (dr10.Read())
                        {
                            ue_nv = dr10.GetInt32(0);
                            ecue_nv = dr10.GetInt32(1);
                            id_mention = dr10.GetInt32(2);
                            id_decision = dr10.GetInt32(3);
                            prcente = dr10.GetDouble(4);
                        }
                        dr10.Close();

                        string sq11 = "SELECT sigle FROM deliberation_condition WHERE id_decision=@id_decision AND id_session=@id_session";
                        MySqlCommand cmd11 = new MySqlCommand(sq11, conn);
                        cmd11.Parameters.AddWithValue("@id_decision", id_decision);
                        cmd11.Parameters.AddWithValue("@id_session", id_session);
                        MySqlDataReader dr11 = cmd11.ExecuteReader();
                        while (dr11.Read())
                        {
                            decision = dr11.GetString(0);
                        }
                        dr11.Close();

                        string sq12 = "SELECT abbreviation FROM mention WHERE id_mention=@id_mention";
                        MySqlCommand cmd12 = new MySqlCommand(sq12, conn);
                        cmd12.Parameters.AddWithValue("@id_mention", id_mention);
                        MySqlDataReader dr12 = cmd12.ExecuteReader();
                        while (dr12.Read())
                        {
                            mention = dr12.GetString(0);
                        }
                        dr12.Close();
                    }


                    cell = new PdfPCell(new Phrase(((credits_annuel * 20 * prcente) / 100).ToString("#.##"), font_normal_4));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.GRAY;
                    tab.AddCell(cell);

                    cell = new PdfPCell(new Phrase(prcente.ToString("#.##"), font_normal_4));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.GRAY;
                    tab.AddCell(cell);

                    cell = new PdfPCell(new Phrase(mention, font_normal_4));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.GRAY;
                    tab.AddCell(cell);

                    cell = new PdfPCell(new Phrase(decision, font_normal_4));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.GRAY;
                    tab.AddCell(cell);
                }
                doc.Add(tab);
                PdfPTable tVisa = new PdfPTable(5);//Creer une table de 5 colonnes
                float[] colwithv = { 7f, 7f, 7f, 7f, 12f };//parametrer les domensions(largeur) de chacune des collonnes
                tVisa.SetWidths(colwithv);//appliquer ces dimenstions a l atable


                cell = new PdfPCell(new Phrase("", font_bold_10));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 5;
                tVisa.AddCell(cell);

                cell = new PdfPCell(new Phrase("", font_bold_10));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 5;
                tVisa.AddCell(cell);

                cell = new PdfPCell(new Phrase("", font_bold_10));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 5;
                tVisa.AddCell(cell);

                cell = new PdfPCell(new Phrase("\nVISA DU DECANAT", font_bold_10));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 2;
                tVisa.AddCell(cell);

                cell = new PdfPCell(new Phrase("", font_bold_4));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 2;
                tVisa.AddCell(cell);

                string dat = "Fait à " + siege + " ,le " + DateTime.Today.Date.ToShortDateString();
                string nom_rect = "Jury de délibération";
                cell = new PdfPCell(new Phrase(dat + "\n\n" + nom_rect, font_bold_10));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                tVisa.AddCell(cell);

                Paragraph pVisa = new Paragraph();
                //parf.IndentationLeft = 240;
                pVisa.Alignment = Element.ALIGN_CENTER;
                //pVisa.SpacingAfter = 6;
                pVisa.SpacingBefore = 8;
                pVisa.Add(tVisa);

                doc.Add(pVisa);

                wri.PageEvent = new Foot();
                doc.Close();
                System.Diagnostics.Process.Start(outputFile);
                conn.Close();
            }
            catch (Exception ex)
            {
                //MessageBox.Show(ex.Message);
            }
        }

        public void Rapport_Deliberation(int id_an, string ann, int id_fac, string fac, int nbre_dpt, int id_dep, string dptmnt, int id_cla, string cla, int id_ses, string sess)
        {
            int id_annee = id_an, id_faculte = id_fac, has_departement = nbre_dpt, id_departement = id_dep, id_classe = id_cla, id_session = id_ses;
            string annee = ann, faculte = fac, departement = dptmnt, classe = cla, session = sess;
            Create_Folder();


            string[] Etudiant_ID, Etudiant_Nom, Etudiant_Prenom;
            try
            {
                DateTime dt = DateTime.Now;
                int year = dt.Year;
                int mois = dt.Month;
                int jour = dt.Day;
                int heure = dt.Hour;
                int min = dt.Minute;
                int sec = dt.Month;
                string date = jour + "-" + mois + "-" + year + "_à_" + heure + "h" + min + "min" + sec + "sec";

                iTextSharp.text.Document doc = new iTextSharp.text.Document(PageSize.A4, 0, 0, 20, 10);
                string docname = "LES_" + date + ".pdf";
                string outputFile = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.Desktop), @"BMDSys", docname);
                FileStream fs = new FileStream(outputFile, FileMode.Create, FileAccess.Write, FileShare.None);
                PdfWriter wri = PdfWriter.GetInstance(doc, fs);
                doc.Open();



                conn = new MySqlConnection(Authentification.MyString);
                conn.Open();

                string universite = Load_Institution(conn);
                string coordonee = Load_Adress(conn);
                string value = coordonee;
                string[] op = value.Split('-');
                site = op[0];
                siege = op[1];
                telephone = op[2];
                b_postale = op[3];

                PdfPCell cell = new PdfPCell(new Phrase("", font_bold_10));
                PdfPTable table1 = first_header(conn, universite, ref cell, faculte);
                doc.Add(table1);

                iTextSharp.text.Paragraph txt_t = new iTextSharp.text.Paragraph(" ", font_bold_8);
                txt_t.Alignment = Element.ALIGN_CENTER;
                txt_t.SpacingBefore = 10;
                txt_t.SpacingAfter = 10;
                doc.Add(txt_t);


                PdfPTable taba = new PdfPTable(4);//Creer une table de 5 colonnes
                float[] coltaba = { 10f, 12f, 6f, 15f };//parametrer les domensions(largeur) de chacune des collonnes
                taba.SetWidths(coltaba);

                cell = new PdfPCell(new Phrase("Département", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);

                if (has_departement == 0 || has_departement == 1)
                {
                    cell = new PdfPCell(new Phrase(": ", font_bold_8));
                    cell.HorizontalAlignment = Element.ALIGN_LEFT;
                    cell.BorderWidth = 0;
                    taba.AddCell(cell);
                }
                else if (has_departement > 1)
                {
                    cell = new PdfPCell(new Phrase(": " + departement, font_bold_8));
                    cell.HorizontalAlignment = Element.ALIGN_LEFT;
                    cell.BorderWidth = 0;
                    taba.AddCell(cell);
                }

                cell = new PdfPCell(new Phrase("Session", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);

                cell = new PdfPCell(new Phrase(": " + session, font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);



                cell = new PdfPCell(new Phrase("Filière/Option", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);

                cell = new PdfPCell(new Phrase(": ", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);

                cell = new PdfPCell(new Phrase(" ", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidth = 0;
                cell.Colspan = 2;
                taba.AddCell(cell);


                cell = new PdfPCell(new Phrase("Classe", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);


                cell = new PdfPCell(new Phrase(": " + classe, font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);


                cell = new PdfPCell(new Phrase(" ", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                cell.Colspan = 2;
                taba.AddCell(cell);


                cell = new PdfPCell(new Phrase("Année Academique", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);

                cell = new PdfPCell(new Phrase(": " + annee, font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);


                cell = new PdfPCell(new Phrase(" ", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                cell.Colspan = 2;
                taba.AddCell(cell);

                doc.Add(taba);



                Paragraph parf = new Paragraph();
                parf.Add(new Phrase("VUE D'ENSEMBLE SUR LES RESULTATS DE LA DELIBERATION", font_normal_underlined_9));
                parf.Alignment = Element.ALIGN_CENTER;
                parf.SpacingAfter = 10;
                parf.SpacingBefore = 10;
                doc.Add(parf);

                PdfPTable tab = new PdfPTable(7);
                float[] colwith_tab = { 2f, 15f, 4f, 4f, 4f, 4f, 4f };
                tab.SetWidths(colwith_tab);

                cell = new PdfPCell(new Phrase("Nom et Prénom", font_bold_8));
                cell.Colspan = 2;
                cell.Rowspan = 2;
                cell.BorderWidth = 0;
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.VerticalAlignment = Element.ALIGN_BOTTOM;
                tab.AddCell(cell);


                cell = new PdfPCell(new Phrase("RESULTATS DE LA DELIBERATION", font_bold_8));
                cell.Colspan = 5;
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                tab.AddCell(cell);


                /*cell = new PdfPCell(new Phrase("\n\nCUMUL \nECUE A VALIDER", entete_decision_font));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.Rowspan = 3;
                cell.Rotation = 90;
                tab.AddCell(cell);*/


                cell = new PdfPCell(new Phrase("\n\nECUE \nnon validés", font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                //cell.Rowspan = 2;
                cell.Rotation = 90;
                tab.AddCell(cell);

                cell = new PdfPCell(new Phrase("\n\nUE \nnon validées ", font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                //cell.Rowspan = 2;
                cell.Rotation = 90;
                tab.AddCell(cell);

                cell = new PdfPCell(new Phrase("\n\nPourcentage \nAnnuel", font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                //cell.Rowspan = 2;
                cell.Rotation = 90;
                tab.AddCell(cell);

                cell = new PdfPCell(new Phrase("\n\nMention", font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.Rotation = 90;
                //cell.Rowspan = 2;
                tab.AddCell(cell);

                cell = new PdfPCell(new Phrase("\n\nDécision", font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.Rotation = 90;
                //cell.Rowspan = 2;
                tab.AddCell(cell);


                /*cell = new PdfPCell(new Phrase("", entete_decision_font));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                tab.AddCell(cell);

                cell = new PdfPCell(new Phrase("\n\n\n\nNom et Prénom ", entete_decision_font));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                tab.AddCell(cell);*/
                //-------------------------------------------------------------------------ETUDIANTS--------------------------------------------

                string r = "SELECT COUNT( DISTINCT id_etudiant) FROM  etudiant_inscription WHERE id_classe=@idcl AND id_session=@id_session AND id_departement=@id_departement AND id_faculte=@id_faculte AND id_annee=@id_annee";
                MySqlCommand c = new MySqlCommand(r, conn);
                c.Parameters.AddWithValue("@idcl", id_classe);
                c.Parameters.AddWithValue("@id_faculte", id_faculte);
                c.Parameters.AddWithValue("@id_annee", id_annee);
                c.Parameters.AddWithValue("@id_session", id_session);
                c.Parameters.AddWithValue("@id_departement", id_departement);
                int nbre_etudiant = Convert.ToInt32(c.ExecuteScalar());
                Etudiant_ID = new string[nbre_etudiant];
                Etudiant_Nom = new string[nbre_etudiant];
                Etudiant_Prenom = new string[nbre_etudiant];

                string ra = "SELECT DISTINCT id_etudiant FROM  etudiant_inscription WHERE id_classe=@idcl AND id_session=@id_session AND id_departement=@id_departement AND id_faculte=@id_faculte AND id_annee=@id_annee";
                MySqlCommand ca = new MySqlCommand(ra, conn);
                ca.Parameters.AddWithValue("@idcl", id_classe);
                ca.Parameters.AddWithValue("@id_faculte", id_faculte);
                ca.Parameters.AddWithValue("@id_annee", id_annee);
                ca.Parameters.AddWithValue("@id_session", id_session);
                ca.Parameters.AddWithValue("@id_departement", id_departement);
                MySqlDataReader da = ca.ExecuteReader();
                int m = 0;
                while (da.Read())
                {
                    Etudiant_ID[m] = string.Format("{0}", da.GetInt32(0).ToString());
                    m++;
                }
                da.Close();
                int numero = 1;

                for (int etu = 0; etu < nbre_etudiant; etu++)
                {
                    cell = new PdfPCell(new Phrase(numero.ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    tab.AddCell(cell);
                    numero++;

                    string ra1 = "SELECT nom, prenom FROM  etudiant WHERE id_etudiant=@id_etudiant";
                    MySqlCommand ca1 = new MySqlCommand(ra1, conn);
                    ca1.Parameters.AddWithValue("@id_etudiant", Convert.ToInt32(Etudiant_ID[etu]));
                    MySqlDataReader da1 = ca1.ExecuteReader();
                    while (da1.Read())
                    {
                        cell = new PdfPCell(new Phrase(da1.GetString(0) + " " + da1.GetString(1), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_LEFT;
                        tab.AddCell(cell);
                    }
                    da1.Close();



                    int ue_nv = -1, ecue_nv = -1, id_mention = -1, id_decision = -1;
                    double prcente = 0.0;
                    string sq10 = "SELECT ue_nv, ecue_nv,id_mention,id_decision,pourcentage FROM deliberation  WHERE id_etudiant=@id_etudiant AND id_classe=@id_classe AND id_departement=@id_departement AND id_session=@id_session AND id_faculte=@id_faculte AND id_annee=@id_annee";
                    MySqlCommand cmd10 = new MySqlCommand(sq10, conn);
                    cmd10.Parameters.AddWithValue("@id_etudiant", Convert.ToInt32(Etudiant_ID[etu]));
                    cmd10.Parameters.AddWithValue("@id_classe", id_classe);
                    cmd10.Parameters.AddWithValue("@id_departement", id_departement);
                    cmd10.Parameters.AddWithValue("@id_faculte", id_faculte);
                    cmd10.Parameters.AddWithValue("@id_annee", id_annee);
                    cmd10.Parameters.AddWithValue("@id_session", id_session);
                    MySqlDataReader dr10 = cmd10.ExecuteReader();
                    while (dr10.Read())
                    {
                        ue_nv = dr10.GetInt32(0);
                        ecue_nv = dr10.GetInt32(1);
                        id_mention = dr10.GetInt32(2);
                        id_decision = dr10.GetInt32(3);
                        prcente = dr10.GetDouble(4);
                    }
                    dr10.Close();

                    string mention = "", decision = "";
                    string sq11 = "SELECT sigle FROM deliberation_condition WHERE id_decision=@id_decision AND id_session=@id_session";
                    MySqlCommand cmd11 = new MySqlCommand(sq11, conn);
                    cmd11.Parameters.AddWithValue("@id_decision", id_decision);
                    cmd11.Parameters.AddWithValue("@id_session", id_session);
                    MySqlDataReader dr11 = cmd11.ExecuteReader();
                    while (dr11.Read())
                    {
                        decision = dr11.GetString(0);
                    }
                    dr11.Close();

                    string sq12 = "SELECT abbreviation FROM mention WHERE id_mention=@id_mention";
                    MySqlCommand cmd12 = new MySqlCommand(sq12, conn);
                    cmd12.Parameters.AddWithValue("@id_mention", id_mention);
                    MySqlDataReader dr12 = cmd12.ExecuteReader();
                    while (dr12.Read())
                    {
                        mention = dr12.GetString(0);
                    }
                    dr12.Close();

                    cell = new PdfPCell(new Phrase(ecue_nv.ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    tab.AddCell(cell);
                    cell = new PdfPCell(new Phrase(ue_nv.ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    tab.AddCell(cell);

                    cell = new PdfPCell(new Phrase(prcente.ToString("#.##"), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    tab.AddCell(cell);

                    cell = new PdfPCell(new Phrase(mention, font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    tab.AddCell(cell);

                    cell = new PdfPCell(new Phrase(decision, font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    tab.AddCell(cell);

                    int ecue_a_valider = 0;

                    string sqma = "SELECT COUNT(DISTINCT etudiant_note_complement.id_cours)" +
                            " FROM (unite INNER JOIN cours ON unite.id_unite = cours.id_unite) INNER JOIN etudiant_note_complement ON cours.id_cours = etudiant_note_complement.id_cours" +
                            " WHERE etudiant_note_complement.id_etudiant=@id_etudiant AND etudiant_note_complement.etat_validation=@etat_validation AND unite.id_annee<=@id_annee";
                    MySqlCommand cmma = new MySqlCommand(sqma, conn);
                    cmma.Parameters.AddWithValue("@id_annee", id_annee);
                    cmma.Parameters.AddWithValue("@id_etudiant", Convert.ToInt32(Etudiant_ID[etu]));
                    cmma.Parameters.AddWithValue("@etat_validation", "Non");
                    ecue_a_valider = Convert.ToInt32(cmma.ExecuteScalar());


                    /*cell = new PdfPCell(new Phrase(ecue_a_valider.ToString(), note_font));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    //cell.Colspan = 4;
                    tab.AddCell(cell);*/
                }
                doc.Add(tab);

                PdfPTable tVisa = new PdfPTable(5);
                float[] colwithv = { 7f, 7f, 7f, 7f, 12f };
                tVisa.SetWidths(colwithv);


                cell = new PdfPCell(new Phrase("", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 5;
                tVisa.AddCell(cell);

                cell = new PdfPCell(new Phrase("", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 5;
                tVisa.AddCell(cell);

                cell = new PdfPCell(new Phrase("", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 5;
                tVisa.AddCell(cell);

                cell = new PdfPCell(new Phrase("\nVISA DU DECANAT", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 2;
                tVisa.AddCell(cell);

                cell = new PdfPCell(new Phrase("", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 2;
                tVisa.AddCell(cell);

                string dat = "Fait à " + siege + " ,le " + DateTime.Today.Date.ToShortDateString();
                string nom_rect = "Jury de délibération";

                cell = new PdfPCell(new Phrase(dat + "\n\n" + nom_rect, font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                tVisa.AddCell(cell);

                Paragraph pVisa = new Paragraph();
                //parf.IndentationLeft = 240;
                pVisa.Alignment = Element.ALIGN_CENTER;
                //pVisa.SpacingAfter = 6;
                pVisa.SpacingBefore = 8;
                pVisa.Add(tVisa);

                doc.Add(pVisa);

                wri.PageEvent = new Foot();

                doc.Close();
                System.Diagnostics.Process.Start(outputFile);
                conn.Close();
            }
            catch (Exception ex)
            {
                //MessageBox.Show(ex.Message);
            }
        }
        public void Complements_par_Classe(int id_an, string ann, int id_fac, string fac, int nbre_dpt, int id_dep, string dptmnt, int id_cla, string cla)
        {
            int id_annee = id_an, id_faculte = id_fac, has_depaartement = nbre_dpt, id_departement = id_dep, id_classe = id_cla;
            string annee = ann, faculte = fac, departement = dptmnt, classe = cla;
            Create_Folder();


            string[] Etudiant_ID, Etudiant_Nom, Etudiant_Prenom;
            string[] Classe_ID, Classe_Nom;
            string[] Annee_ID, Annee_Nom;
            string[] Cours_ID, Cours_Nom;
            string[] Cours_NV_ID, Cours_NV_Nom;
            try
            {
                DateTime dt = DateTime.Now;
                int year = dt.Year;
                int mois = dt.Month;
                int jour = dt.Day;
                int heure = dt.Hour;
                int min = dt.Minute;
                int sec = dt.Month;
                string date = jour + "-" + mois + "-" + year + "_à_" + heure + "h" + min + "min" + sec + "sec";

                iTextSharp.text.Document doc = new iTextSharp.text.Document(PageSize.A4, 0, 0, 20, 10);
                string docname = "LES_" + date + ".pdf";
                string outputFile = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.Desktop), @"BMDSys", docname);
                FileStream fs = new FileStream(outputFile, FileMode.Create, FileAccess.Write, FileShare.None);
                PdfWriter wri = PdfWriter.GetInstance(doc, fs);
                doc.Open();

                conn = new MySqlConnection(Authentification.MyString);
                conn.Open();

                string universite = Load_Institution(conn);
                string coordonee = Load_Adress(conn);
                string value = coordonee;
                string[] op = value.Split('-');
                site = op[0];
                siege = op[1];
                telephone = op[2];
                b_postale = op[3];

                PdfPCell cell = new PdfPCell(new Phrase("", font_bold_10));
                PdfPTable table1 = first_header(conn, universite, ref cell, faculte);
                doc.Add(table1);

                iTextSharp.text.Paragraph txt_t = new iTextSharp.text.Paragraph(" ", font_bold_8);
                txt_t.Alignment = Element.ALIGN_CENTER;
                txt_t.SpacingBefore = 10;
                txt_t.SpacingAfter = 10;
                doc.Add(txt_t);


                PdfPTable taba = new PdfPTable(4);//Creer une table de 5 colonnes
                float[] coltaba = { 10f, 12f, 10f, 10f };//parametrer les domensions(largeur) de chacune des collonnes
                taba.SetWidths(coltaba);

                cell = new PdfPCell(new Phrase("Département", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);

                if (has_depaartement == 0 || has_depaartement == 1)
                {
                    cell = new PdfPCell(new Phrase(": ", font_bold_8));
                    cell.HorizontalAlignment = Element.ALIGN_LEFT;
                    cell.BorderWidth = 0;
                    taba.AddCell(cell);
                }
                else if (has_depaartement > 1)
                {
                    cell = new PdfPCell(new Phrase(": " + departement, font_bold_8));
                    cell.HorizontalAlignment = Element.ALIGN_LEFT;
                    cell.BorderWidth = 0;
                    taba.AddCell(cell);
                }

                cell = new PdfPCell(new Phrase("Classe", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);


                cell = new PdfPCell(new Phrase(": " + classe, font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);


                cell = new PdfPCell(new Phrase("Filière/Option", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);

                cell = new PdfPCell(new Phrase(": ", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);

                cell = new PdfPCell(new Phrase("Année Academique", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);

                cell = new PdfPCell(new Phrase(": " + annee, font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);

                doc.Add(taba);


                Paragraph parf = new Paragraph();
                parf.Add(new Phrase("VUE D'ENSEMBLE SUR LES COMPLEMENTS PAR CLASSE", font_normal_underlined_9));
                parf.Alignment = Element.ALIGN_CENTER;
                parf.SpacingAfter = 10;
                parf.SpacingBefore = 10;
                doc.Add(parf);

                PdfPTable tab = new PdfPTable(6);
                float[] colwith_tab = { 3f, 20f, 4f, 25f, 5f, 6f };
                tab.SetWidths(colwith_tab);

                cell = new PdfPCell(new Phrase("", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                tab.AddCell(cell);

                cell = new PdfPCell(new Phrase("Nom et Prénom ", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                tab.AddCell(cell);


                cell = new PdfPCell(new Phrase("Nbre", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                tab.AddCell(cell);

                cell = new PdfPCell(new Phrase("Nom du cours", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                tab.AddCell(cell);

                cell = new PdfPCell(new Phrase("Classe", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                tab.AddCell(cell);


                cell = new PdfPCell(new Phrase("A-A", font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                tab.AddCell(cell);



                //-------------------------------------------------------------------------ETUDIANTS--------------------------------------------

                string r = "SELECT COUNT( DISTINCT id_etudiant) FROM  etudiant_inscription WHERE id_classe=@idcl AND id_departement=@id_departement AND id_faculte=@id_faculte AND id_annee=@id_annee";
                MySqlCommand c = new MySqlCommand(r, conn);
                c.Parameters.AddWithValue("@idcl", id_classe);
                c.Parameters.AddWithValue("@id_faculte", id_faculte);
                c.Parameters.AddWithValue("@id_annee", id_annee);
                c.Parameters.AddWithValue("@id_departement", id_departement);
                int nbre_etudiant = Convert.ToInt32(c.ExecuteScalar());
                Etudiant_ID = new string[nbre_etudiant];
                Etudiant_Nom = new string[nbre_etudiant];
                Etudiant_Prenom = new string[nbre_etudiant];

                string ra = "SELECT DISTINCT etudiant_inscription.id_etudiant, etudiant.nom, etudiant.prenom" +
                    " FROM etudiant INNER JOIN etudiant_inscription ON etudiant.id_etudiant = etudiant_inscription.id_etudiant" +
                    " WHERE etudiant_inscription.id_classe=@idcl AND etudiant_inscription.id_departement=@id_departement AND etudiant_inscription.id_faculte=@id_faculte AND etudiant_inscription.id_annee=@id_annee";
                MySqlCommand ca = new MySqlCommand(ra, conn);
                ca.Parameters.AddWithValue("@idcl", id_classe);
                ca.Parameters.AddWithValue("@id_faculte", id_faculte);
                ca.Parameters.AddWithValue("@id_annee", id_annee);
                ca.Parameters.AddWithValue("@id_departement", id_departement);
                MySqlDataReader da = ca.ExecuteReader();
                int m = 0;
                while (da.Read())
                {
                    Etudiant_ID[m] = string.Format("{0}", da.GetInt32(0).ToString());
                    Etudiant_Nom[m] = string.Format("{0}", da.GetString(1) + " " + da.GetString(2));
                    m++;
                }
                da.Close();

                int numero = 1;
                for (int etu = 0; etu < nbre_etudiant; etu++)
                {
                    string ra2 = "SELECT COUNT(*) FROM  etudiant_note_complement WHERE id_etudiant=@id_etudiant";
                    MySqlCommand ca2 = new MySqlCommand(ra2, conn);
                    ca2.Parameters.AddWithValue("@id_etudiant", Convert.ToInt32(Etudiant_ID[etu]));
                    int exist_complement = Convert.ToInt32(ca2.ExecuteScalar());
                    if (exist_complement == 0)
                    {
                        cell = new PdfPCell(new Phrase(numero.ToString(), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        tab.AddCell(cell);
                        numero++;

                        cell = new PdfPCell(new Phrase(Etudiant_Nom[etu], font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_LEFT;
                        tab.AddCell(cell);

                        cell = new PdfPCell(new Phrase("0", font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        tab.AddCell(cell);

                        cell = new PdfPCell(new Phrase(" ", font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        tab.AddCell(cell);

                        cell = new PdfPCell(new Phrase(" ", font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        tab.AddCell(cell);

                        cell = new PdfPCell(new Phrase(" ", font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        tab.AddCell(cell);
                    }
                    else
                    {
                        string ra3 = "SELECT COUNT(DISTINCT etudiant_note_complement.id_cours)" +
                            " FROM (unite INNER JOIN cours ON unite.id_unite = cours.id_unite) INNER JOIN etudiant_note_complement ON cours.id_cours = etudiant_note_complement.id_cours" +
                            " WHERE etudiant_note_complement.id_etudiant=@id_etudiant AND unite.id_classe <@id_classe";
                        MySqlCommand ca3 = new MySqlCommand(ra3, conn);
                        ca3.Parameters.AddWithValue("@id_etudiant", Convert.ToInt32(Etudiant_ID[etu]));
                        ca3.Parameters.AddWithValue("@id_classe", id_classe);
                        int exist_cnv = Convert.ToInt32(ca3.ExecuteScalar());
                        if (exist_cnv == 0)
                        {
                            cell = new PdfPCell(new Phrase(numero.ToString(), font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            tab.AddCell(cell);
                            numero++;

                            cell = new PdfPCell(new Phrase(Etudiant_Nom[etu], font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_LEFT;
                            tab.AddCell(cell);

                            cell = new PdfPCell(new Phrase("0", font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            tab.AddCell(cell);

                            cell = new PdfPCell(new Phrase(" ", font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            tab.AddCell(cell);

                            cell = new PdfPCell(new Phrase(" ", font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            tab.AddCell(cell);

                            cell = new PdfPCell(new Phrase(" ", font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            tab.AddCell(cell);
                        }
                        else
                        {
                            Cours_ID = new string[exist_cnv];
                            Cours_Nom = new string[exist_cnv];

                            Cours_NV_ID = new string[exist_cnv];
                            Cours_NV_Nom = new string[exist_cnv];


                            string ra4 = "SELECT DISTINCT etudiant_note_complement.id_cours,cours.cours" +
                            " FROM (unite INNER JOIN cours ON unite.id_unite = cours.id_unite) INNER JOIN etudiant_note_complement ON cours.id_cours = etudiant_note_complement.id_cours" +
                            " WHERE etudiant_note_complement.id_etudiant=@id_etudiant AND unite.id_classe <@id_classe";
                            MySqlCommand ca4 = new MySqlCommand(ra4, conn);
                            ca4.Parameters.AddWithValue("@id_etudiant", Convert.ToInt32(Etudiant_ID[etu]));
                            ca4.Parameters.AddWithValue("@id_classe", id_classe);
                            MySqlDataReader da4 = ca4.ExecuteReader();
                            m = 0;
                            while (da4.Read())
                            {
                                Cours_ID[m] = string.Format("{0}", da4.GetInt32(0).ToString());
                                Cours_Nom[m] = string.Format("{0}", da4.GetString(1));
                                m++;
                            }
                            da4.Close();

                            int cmplmnt_nv = 0;
                            int cv = 0;
                            for (int cours = 0; cours < exist_cnv; cours++)
                            {
                                string sq2 = "SELECT COUNT(*) FROM etudiant_note_complement  WHERE id_etudiant=@id_etudiant AND id_cours=@id_cours AND etat_validation=@etat_validation";
                                MySqlCommand cmq2 = new MySqlCommand(sq2, conn);
                                cmq2.Parameters.AddWithValue("@id_etudiant", Convert.ToInt32(Etudiant_ID[etu]));
                                cmq2.Parameters.AddWithValue("@id_cours", Convert.ToInt32(Cours_ID[cours]));
                                cmq2.Parameters.AddWithValue("@etat_validation", "Oui");
                                cv = Convert.ToInt32(cmq2.ExecuteScalar());
                                if (cv == 0)
                                {
                                    string idcours = Cours_ID[cours];
                                    string nomcours = Cours_Nom[cours];

                                    Cours_NV_ID[cmplmnt_nv] = string.Format("{0}", idcours);
                                    Cours_NV_Nom[cmplmnt_nv] = string.Format("{0}", nomcours);
                                    ////MessageBox.Show(Cours_NV_ID[cmplmnt_nv] + "-" + Cours_NV_Nom[cmplmnt_nv]);
                                    cmplmnt_nv++;
                                }
                            }

                            if (cmplmnt_nv == 0)
                            {
                                cell = new PdfPCell(new Phrase(numero.ToString(), font_normal_7));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                tab.AddCell(cell);
                                numero++;

                                cell = new PdfPCell(new Phrase(Etudiant_Nom[etu], font_normal_7));
                                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                                tab.AddCell(cell);

                                cell = new PdfPCell(new Phrase("0", font_normal_7));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                tab.AddCell(cell);

                                cell = new PdfPCell(new Phrase(" ", font_normal_7));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                tab.AddCell(cell);

                                cell = new PdfPCell(new Phrase(" ", font_normal_7));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                tab.AddCell(cell);

                                cell = new PdfPCell(new Phrase(" ", font_normal_7));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                tab.AddCell(cell);
                            }
                            else
                            {

                                cell = new PdfPCell(new Phrase(numero.ToString(), font_normal_7));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                cell.Rowspan = cmplmnt_nv;
                                tab.AddCell(cell);
                                numero++;

                                cell = new PdfPCell(new Phrase(Etudiant_Nom[etu], font_normal_7));
                                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                                cell.Rowspan = cmplmnt_nv;
                                tab.AddCell(cell);

                                cell = new PdfPCell(new Phrase(cmplmnt_nv.ToString(), font_normal_7));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                cell.Rowspan = cmplmnt_nv;
                                tab.AddCell(cell);

                                for (int cnv = 0; cnv < cmplmnt_nv; cnv++)
                                {
                                    cell = new PdfPCell(new Phrase(Cours_NV_Nom[cnv], font_normal_7));
                                    cell.HorizontalAlignment = Element.ALIGN_LEFT;
                                    tab.AddCell(cell);

                                    string ra5 = "SELECT classe.classe, annee.annee" +
                                        " FROM ((unite INNER JOIN cours ON unite.id_unite = cours.id_unite) INNER JOIN classe ON unite.id_classe = classe.id_classe) INNER JOIN annee ON unite.id_annee = annee.id_annee" +
                                        " WHERE cours.id_cours=@id_cours";
                                    MySqlCommand ca5 = new MySqlCommand(ra5, conn);
                                    ca5.Parameters.AddWithValue("@id_cours", Convert.ToInt32(Cours_NV_ID[cnv]));
                                    MySqlDataReader da5 = ca5.ExecuteReader();
                                    while (da5.Read())
                                    {
                                        cell = new PdfPCell(new Phrase(da5.GetString(0), font_normal_7));
                                        cell.HorizontalAlignment = Element.ALIGN_LEFT;
                                        tab.AddCell(cell);

                                        cell = new PdfPCell(new Phrase(da5.GetString(1), font_normal_7));
                                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                        tab.AddCell(cell);
                                    }
                                    da5.Close();
                                }
                            }
                        }
                    }
                }
                doc.Add(tab);

                PdfPTable tVisa = new PdfPTable(5);
                float[] colwithv = { 7f, 7f, 7f, 7f, 12f };
                tVisa.SetWidths(colwithv);


                cell = new PdfPCell(new Phrase("", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidth = 0;
                cell.Colspan = 5;
                tVisa.AddCell(cell);

                cell = new PdfPCell(new Phrase("", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidth = 0;
                cell.Colspan = 5;
                tVisa.AddCell(cell);

                cell = new PdfPCell(new Phrase("", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidth = 0;
                cell.Colspan = 5;
                tVisa.AddCell(cell);

                cell = new PdfPCell(new Phrase("\nVISA DU DECANAT", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidth = 0;
                cell.Colspan = 2;
                tVisa.AddCell(cell);

                cell = new PdfPCell(new Phrase("", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidth = 0;
                cell.Colspan = 2;
                tVisa.AddCell(cell);

                string dat = "Fait à " + siege + " ,le " + DateTime.Today.Date.ToShortDateString();
                string nom_rect = "Jury de délibération";

                cell = new PdfPCell(new Phrase(dat + "\n\n" + nom_rect, font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidth = 0;
                tVisa.AddCell(cell);

                Paragraph pVisa = new Paragraph();
                //parf.IndentationLeft = 240;
                pVisa.Alignment = Element.ALIGN_CENTER;
                pVisa.SpacingAfter = 10;
                pVisa.SpacingBefore = 10;
                pVisa.Add(tVisa);

                doc.Add(pVisa);

                wri.PageEvent = new Foot();

                doc.Close();
                System.Diagnostics.Process.Start(outputFile);
                conn.Close();
            }
            catch (Exception ex)
            {
                //MessageBox.Show(ex.Message);
            }
        }
        /*public void note_cm_td_tp(int id_an, string ann, int id_fac, string fac, int nbre_dpt, int id_dep, string dptmnt, int id_cla, string cla, int id_cour, string cour)
        {
            int id_annee = id_an, id_faculte = id_fac, has_depaartement = nbre_dpt, id_departement = id_dep, id_classe = id_cla, id_cours = id_cour;
            string annee = ann, faculte = fac, departement = dptmnt, classe = cla, cours = cour;
            Create_Folder();


            string[] Etudiant_ID, Etudiant_Nom, Etudiant_Prenom;
            string[] Classe_ID, Classe_Nom;
            string[] Annee_ID, Annee_Nom;
            string[] Cours_ID, Cours_Nom;
            string[] Cours_NV_ID, Cours_NV_Nom;
            try
            {
                DateTime dt = DateTime.Now;
                int year = dt.Year;
                int mois = dt.Month;
                int jour = dt.Day;
                int heure = dt.Hour;
                int min = dt.Minute;
                int sec = dt.Month;
                string date = jour + "-" + mois + "-" + year + "_à_" + heure + "h" + min + "min" + sec + "sec";

                iTextSharp.text.Document doc = new iTextSharp.text.Document(PageSize.A4, 0, 0, 20, 10);
                string docname = "LES_" + date + ".pdf";
                string outputFile = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.Desktop), @"BMDSys", docname);
                FileStream fs = new FileStream(outputFile, FileMode.Create, FileAccess.Write, FileShare.None);
                PdfWriter wri = PdfWriter.GetInstance(doc, fs);
                doc.Open();

                conn = new MySqlConnection(Authentification.MyString);
                conn.Open();

                string universite = Load_Institution(conn);
                string coordonee = Load_Adress(conn);
                string value = coordonee;
                string[] op = value.Split('-');
                site = op[0];
                siege = op[1];
                telephone = op[2];
                b_postale = op[3];

                PdfPCell cell = new PdfPCell(new Phrase("", font_bold_8));
                PdfPTable table = new PdfPTable(5);
                float[] colwith1 = { 7f, 7f, 9f, 5f, 12f };
                table.SetWidths(colwith1);



                cell = new PdfPCell(new Phrase(universite, font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 2;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(" ", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("A.A: ", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(annee, font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                table.AddCell(cell);


                iTextSharp.text.Image myImage1 = Class_Reports.Get_LogoImage(conn);
                cell = new PdfPCell(myImage1);
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 2;
                cell.Rowspan = 4;
                table.AddCell(cell);


                cell = new PdfPCell(new Phrase("", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                table.AddCell(cell);


                cell = new PdfPCell(new Phrase(faculte, font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.Colspan = 2;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                table.AddCell(cell);


                if (has_depaartement == 0 || has_depaartement == 1)
                {
                    cell = new PdfPCell(new Phrase(" ", font_bold_8));
                    cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                    cell.BorderWidthLeft = 0;
                    cell.BorderWidthRight = 0;
                    cell.BorderWidthTop = 0;
                    cell.BorderWidth = 0;
                    cell.Colspan = 3;
                    table.AddCell(cell);

                }
                else if (has_depaartement > 1)
                {
                    cell = new PdfPCell(new Phrase(" ", font_bold_8));
                    cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                    cell.BorderWidthLeft = 0;
                    cell.BorderWidthRight = 0;
                    cell.BorderWidthTop = 0;
                    cell.BorderWidth = 0;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase("Departement: ", font_bold_8));
                    cell.HorizontalAlignment = Element.ALIGN_LEFT;
                    cell.BorderWidthLeft = 0;
                    cell.BorderWidthRight = 0;
                    cell.BorderWidthTop = 0;
                    cell.BorderWidth = 0;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(departement, font_bold_8));
                    cell.HorizontalAlignment = Element.ALIGN_LEFT;
                    cell.BorderWidthLeft = 0;
                    cell.BorderWidthRight = 0;
                    cell.BorderWidthTop = 0;
                    cell.BorderWidth = 0;
                    table.AddCell(cell);
                }

                cell = new PdfPCell(new Phrase(" ", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("Classe: ", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(classe, font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(" ", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("Cours: ", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(e_note_repartition_rapport.cours, font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                table.AddCell(cell);

                string adress = Load_Adress(conn);
                cell = new PdfPCell(new Phrase(adress, font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 2;
                table.AddCell(cell);




                cell = new PdfPCell(new Phrase("", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 3;
                table.AddCell(cell);


                doc.Add(table);


                Paragraph parf = new Paragraph();
                parf.Add(new Phrase("GRILLE DE REPARTITION DES NOTES", font_normal_underlined_9));
                parf.Alignment = Element.ALIGN_CENTER;
                parf.SpacingAfter = 12;
                parf.SpacingBefore = 12;
                doc.Add(parf);

                PdfPTable tab = new PdfPTable(6);
                float[] colwith_tab = { 3f, 45f, 4f, 4f, 4f, 10f };
                tab.SetWidths(colwith_tab);

                cell = new PdfPCell(new Phrase("", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidthBottom = 0;
                tab.AddCell(cell);

                cell = new PdfPCell(new Phrase(" ", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidthBottom = 0;
                tab.AddCell(cell);


                cell = new PdfPCell(new Phrase("TD", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                tab.AddCell(cell);

                cell = new PdfPCell(new Phrase("TP", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                tab.AddCell(cell);

                cell = new PdfPCell(new Phrase("EX", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                tab.AddCell(cell);


                cell = new PdfPCell(new Phrase("NOTE FINALE", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                tab.AddCell(cell);



                //-------------------------------------------------------------------------ETUDIANTS--------------------------------------------
                string r = "SELECT COUNT( DISTINCT id_etudiant) FROM  etudiant_inscription WHERE id_classe=@idcl AND id_departement=@id_departement AND id_faculte=@id_faculte AND id_annee=@id_annee";
                MySqlCommand c = new MySqlCommand(r, conn);
                c.Parameters.AddWithValue("@idcl", id_classe);
                c.Parameters.AddWithValue("@id_faculte", id_faculte);
                c.Parameters.AddWithValue("@id_annee", id_annee);
                c.Parameters.AddWithValue("@id_departement", id_departement);
                int nbre_etudiant = Convert.ToInt32(c.ExecuteScalar());
                Etudiant_ID = new string[nbre_etudiant];
                Etudiant_Nom = new string[nbre_etudiant];
                Etudiant_Prenom = new string[nbre_etudiant];

                string ra = "SELECT DISTINCT etudiant_inscription.id_etudiant, etudiant.nom, etudiant.prenom" +
                    " FROM etudiant INNER JOIN etudiant_inscription ON etudiant.id_etudiant = etudiant_inscription.id_etudiant" +
                    " WHERE etudiant_inscription.id_classe=@idcl AND etudiant_inscription.id_departement=@id_departement AND etudiant_inscription.id_faculte=@id_faculte AND etudiant_inscription.id_annee=@id_annee";
                MySqlCommand ca = new MySqlCommand(ra, conn);
                ca.Parameters.AddWithValue("@idcl", id_classe);
                ca.Parameters.AddWithValue("@id_faculte", id_faculte);
                ca.Parameters.AddWithValue("@id_annee", id_annee);
                ca.Parameters.AddWithValue("@id_departement", id_departement);
                MySqlDataReader da = ca.ExecuteReader();
                int m = 0;
                while (da.Read())
                {
                    Etudiant_ID[m] = string.Format("{0}", da.GetInt32(0).ToString());
                    Etudiant_Nom[m] = string.Format("{0}", da.GetString(1) + " " + da.GetString(2));
                    m++;
                }
                da.Close();

                int numero = 1;
                for (int etu = 0; etu < nbre_etudiant; etu++)
                {
                    string ra2 = "SELECT COUNT(*) FROM  etudiant_note_repartition WHERE id_etudiant=@id_etudiant AND id_cours=@id_cours";
                    MySqlCommand ca2 = new MySqlCommand(ra2, conn);
                    ca2.Parameters.AddWithValue("@id_etudiant", Convert.ToInt32(Etudiant_ID[etu]));
                    ca2.Parameters.AddWithValue("@id_cours", id_cours);
                    int exist = Convert.ToInt32(ca2.ExecuteScalar());
                    if (exist == 0)
                    {
                        cell = new PdfPCell(new Phrase(numero.ToString(), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        tab.AddCell(cell);
                        numero++;

                        cell = new PdfPCell(new Phrase(Etudiant_Nom[etu], font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_LEFT;
                        tab.AddCell(cell);

                        cell = new PdfPCell(new Phrase(" ", font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        tab.AddCell(cell);

                        cell = new PdfPCell(new Phrase(" ", font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        tab.AddCell(cell);

                        cell = new PdfPCell(new Phrase(" ", font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        tab.AddCell(cell);

                        cell = new PdfPCell(new Phrase(" ", font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        tab.AddCell(cell);
                    }
                    else
                    {
                        string note_tp = " ", note_td = " ", note_ex = " ", note_finale = " ";

                        string ra3 = "SELECT note_tp,note_td,note_ex  FROM  etudiant_note_repartition WHERE id_etudiant=@id_etudiant AND id_cours=@id_cours";
                        MySqlCommand ca3 = new MySqlCommand(ra3, conn);
                        ca3.Parameters.AddWithValue("@id_etudiant", Convert.ToInt32(Etudiant_ID[etu]));
                        ca3.Parameters.AddWithValue("@id_cours", id_cours);
                        MySqlDataReader da3 = ca3.ExecuteReader();
                        while (da3.Read())
                        {
                            note_td = da3.GetString(0);
                            note_tp = da3.GetString(1);
                            note_ex = da3.GetString(2);
                        }
                        da3.Close();

                        string ra4 = "SELECT note FROM  etudiant_note WHERE id_etudiant=@id_etudiant AND id_cours=@id_cours AND id_session=@id_session";
                        MySqlCommand ca4 = new MySqlCommand(ra4, conn);
                        ca4.Parameters.AddWithValue("@id_etudiant", Convert.ToInt32(Etudiant_ID[etu]));
                        ca4.Parameters.AddWithValue("@id_cours", id_cours);
                        ca4.Parameters.AddWithValue("@id_session", 1);
                        MySqlDataReader da4 = ca4.ExecuteReader();
                        while (da4.Read())
                        {
                            note_finale = da4.GetString(0);
                        }
                        da4.Close();

                        cell = new PdfPCell(new Phrase(numero.ToString(), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        tab.AddCell(cell);
                        numero++;

                        cell = new PdfPCell(new Phrase(Etudiant_Nom[etu], font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_LEFT;
                        tab.AddCell(cell);

                        cell = new PdfPCell(new Phrase(note_td, font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        tab.AddCell(cell);

                        cell = new PdfPCell(new Phrase(note_tp, font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        tab.AddCell(cell);

                        cell = new PdfPCell(new Phrase(note_ex, font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        tab.AddCell(cell);

                        cell = new PdfPCell(new Phrase(note_finale, font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        tab.AddCell(cell);
                    }
                }
                doc.Add(tab);

                PdfPTable tVisa = new PdfPTable(5);
                float[] colwithv = { 7f, 7f, 7f, 7f, 12f };
                tVisa.SetWidths(colwithv);


                cell = new PdfPCell(new Phrase("", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 5;
                tVisa.AddCell(cell);

                cell = new PdfPCell(new Phrase("", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 5;
                tVisa.AddCell(cell);

                cell = new PdfPCell(new Phrase("", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 5;
                tVisa.AddCell(cell);

                cell = new PdfPCell(new Phrase(" ", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 2;
                tVisa.AddCell(cell);

                cell = new PdfPCell(new Phrase("", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 2;
                tVisa.AddCell(cell);

                string dat = "Fait à " + siege + " ,le " + DateTime.Today.Date.ToShortDateString();
                string nom_rect = "VISA DU DECANAT";

                cell = new PdfPCell(new Phrase(dat + "\n\n" + nom_rect, font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                tVisa.AddCell(cell);

                Paragraph pVisa = new Paragraph();
                //parf.IndentationLeft = 240;
                pVisa.Alignment = Element.ALIGN_CENTER;
                //pVisa.SpacingAfter = 6;
                pVisa.SpacingBefore = 8;
                pVisa.Add(tVisa);

                doc.Add(pVisa);

                wri.PageEvent = new Foot();

                doc.Close();
                System.Diagnostics.Process.Start(outputFile);
                conn.Close();
            }
            catch (Exception ex)
            {
                //MessageBox.Show(ex.Message);
            }
        }*/

        public void Taux_Reussite_par_Classe(int id_an, string an, int idf, string fac, int hasdep, int iddep, string dep, int idcl, string clas)
        {

            int id_annee = id_an;
            string annee = an;
            int id_faculte = idf;
            string faculte = fac;
            int has_departement = hasdep;
            int id_departement = iddep;
            string departement = dep;
            int id_classe = idcl;
            string classe = clas;

            Create_Folder();


            DateTime dt = DateTime.Now;
            int ans = dt.Year;
            int mois = dt.Month;
            int jour = dt.Day;
            int heure = dt.Hour;
            int min = dt.Minute;
            int sec = dt.Month;
            string date = jour + "-" + mois + "-" + ans + "_à_" + heure + "h" + min + "min" + sec + "sec";

            iTextSharp.text.Document doc = new iTextSharp.text.Document(iTextSharp.text.PageSize.A4, 0, 0, 50, 50);
            string docname = "Stat_type_1_ " + date + ".pdf";
            string outputFile = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.Desktop), @"BMDSys", docname);
            FileStream fs = new FileStream(outputFile, FileMode.Create, FileAccess.Write, FileShare.None);
            PdfWriter wri = PdfWriter.GetInstance(doc, fs);
            doc.Open();

            conn = new MySqlConnection(Authentification.MyString);
            conn.Open();

            string universite = Load_Institution(conn);
            string coordonee = Load_Adress(conn);
            string value = coordonee;
            string[] op = value.Split('-');
            site = op[0];
            siege = op[1];
            telephone = op[2];
            b_postale = op[3];


            PdfPCell cell = new PdfPCell(new Phrase("", font_bold_10));
            PdfPTable table1 = first_header(conn, universite, ref cell, faculte);
            doc.Add(table1);


            Paragraph parf = new Paragraph();
            string ta = "STATISTIQUE DES REUSSITES\n A-A : " + annee + "\n" + faculte + "\n" + departement + "\n" + classe;
            parf.Add(new Phrase(ta, font_normal_underlined_8));
            parf.Alignment = Element.ALIGN_CENTER;
            parf.SpacingAfter = 15;
            parf.SpacingBefore = 15;
            doc.Add(parf);



            //CORPS DU RAPPORT 
            PdfPTable table = new PdfPTable(14);//creer une table dont les lignes auront chacune 14 cellules
            table.HorizontalAlignment = Element.ALIGN_CENTER;
            float[] colwiths = { 23f, 23f, 23f, 23f, 23f, 23f, 23f, 23f, 23f, 23f, 23f, 23f, 23f, 23f };//crreer les dimensions
            table.SetWidths(colwiths);//appliquer ces dimenstions a la table


            cell = new PdfPCell(new Phrase("Sessions", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.Colspan = 8;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Effectif des crédits", font_bold_7));
            cell.Colspan = 2;
            cell.Rowspan = 2;
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Ajournement et assimilés", font_bold_7));
            cell.Colspan = 2;
            cell.Rowspan = 2;
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Exclusion", font_bold_7));
            cell.Colspan = 2;
            cell.Rowspan = 2;
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("1ère Session", font_bold_7));
            cell.Colspan = 3;
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("2ème Session", font_bold_7));
            cell.Colspan = 3;
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Total réussite", font_bold_7));
            cell.Rotation = 90;
            cell.Rowspan = 2;
            cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("% réussite", font_bold_7));
            cell.Rotation = 90;
            cell.Rowspan = 2;
            cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            table.AddCell(cell);


            cell = new PdfPCell(new Phrase("Candidats", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            cell.Rotation = 90;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Réussite", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            cell.Rotation = 90;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Taux", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            cell.Rotation = 90;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Candidats", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            cell.Rotation = 90;
            table.AddCell(cell);


            cell = new PdfPCell(new Phrase("Réussite", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            cell.Rotation = 90;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Taux", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            cell.Rotation = 90;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Validés", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            cell.Rotation = 90;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Non validés", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            cell.Rotation = 90;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Effectif", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            cell.Rotation = 90;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Taux", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            cell.Rotation = 90;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Effectif", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            cell.Rotation = 90;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Taux", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            cell.Rotation = 90;
            table.AddCell(cell);



            ///-----------------------------FIN ENTETE------------------------------------------------------------//


            string[] Etudiant_ID;

            int Classe_candidats_1ereSession = 0;
            int Classe_reussites_1ereSession = 0;

            int Classe_candidats_2eme_Session = 0;
            int Classe_reussites_2eme_Session = 0;

            int Classe_reussite = 0;

            int Classe_ajournes = 0;
            int Classe_eclusion = 0;

            try
            {

                Classe_ajournes = 0;
                Classe_eclusion = 0;
                Classe_candidats_1ereSession = 0;
                Classe_candidats_2eme_Session = 0;
                Classe_reussites_1ereSession = 0;
                Classe_reussites_2eme_Session = 0;
                Classe_reussite = 0;

                string sq6 = "SELECT COUNT(DISTINCT id_etudiant) FROM deliberation WHERE id_departement=@id_departement AND id_classe=@id_classe AND id_session=@id_session AND id_annee=@id_annee AND id_faculte=@id_faculte";
                MySqlCommand cmd6 = new MySqlCommand(sq6, conn);
                cmd6.Parameters.AddWithValue("@id_annee", id_annee);
                cmd6.Parameters.AddWithValue("@id_faculte", id_faculte);
                cmd6.Parameters.AddWithValue("@id_departement", id_departement);
                cmd6.Parameters.AddWithValue("@id_classe", id_classe);
                cmd6.Parameters.AddWithValue("@id_session", 1);

                Classe_candidats_1ereSession += Convert.ToInt32(cmd6.ExecuteScalar());

                string sq8 = "SELECT COUNT(DISTINCT deliberation.id_etudiant)" +
                        " FROM (deliberation INNER JOIN deliberation_condition ON deliberation.id_decision = deliberation_condition.id_decision) INNER JOIN deliberation_finalite ON deliberation_condition.id_finalite = deliberation_finalite.id_finalite" +
                        " WHERE deliberation.id_annee=@id_annee AND deliberation.id_faculte=@id_faculte AND deliberation.id_departement=@id_departement AND deliberation.id_classe=@id_classe AND deliberation.id_session=@id_session AND deliberation_finalite.droit_avancement=@droit_avancement";
                MySqlCommand cmd8 = new MySqlCommand(sq8, conn);
                cmd8.Parameters.AddWithValue("@id_departement", id_departement);
                cmd8.Parameters.AddWithValue("@id_classe", id_classe);
                cmd8.Parameters.AddWithValue("@id_annee", id_annee);
                cmd8.Parameters.AddWithValue("@id_faculte", id_faculte);
                cmd8.Parameters.AddWithValue("@id_session", 1);
                cmd8.Parameters.AddWithValue("@droit_avancement", "Oui");

                Classe_reussites_1ereSession = Convert.ToInt32(cmd8.ExecuteScalar());

                Classe_reussite += Classe_reussites_1ereSession;

                string sq9 = "SELECT COUNT(DISTINCT id_etudiant) FROM deliberation WHERE id_departement=@id_departement AND id_classe=@id_classe AND id_session=@id_session AND id_annee=@id_annee AND id_faculte=@id_faculte";
                MySqlCommand cmd9 = new MySqlCommand(sq9, conn);
                cmd9.Parameters.AddWithValue("@id_departement", id_departement);
                cmd9.Parameters.AddWithValue("@id_classe", id_classe);
                cmd9.Parameters.AddWithValue("@id_annee", id_annee);
                cmd9.Parameters.AddWithValue("@id_faculte", id_faculte);
                cmd9.Parameters.AddWithValue("@id_session", 2);

                Classe_candidats_2eme_Session = Convert.ToInt32(cmd9.ExecuteScalar());



                string sq10 = "SELECT COUNT(DISTINCT deliberation.id_etudiant)" +
                    " FROM (deliberation INNER JOIN deliberation_condition ON deliberation.id_decision = deliberation_condition.id_decision) INNER JOIN deliberation_finalite ON deliberation_condition.id_finalite = deliberation_finalite.id_finalite" +
                    " WHERE deliberation.id_annee=@id_annee AND deliberation.id_faculte=@id_faculte AND deliberation.id_departement=@id_departement AND deliberation.id_classe=@id_classe AND deliberation.id_session=@id_session AND deliberation_finalite.droit_avancement=@droit_avancement";
                MySqlCommand cmd10 = new MySqlCommand(sq10, conn);
                cmd10.Parameters.AddWithValue("@id_departement", id_departement);
                cmd10.Parameters.AddWithValue("@id_classe", id_classe);
                cmd10.Parameters.AddWithValue("@id_annee", id_annee);
                cmd10.Parameters.AddWithValue("@id_faculte", id_faculte);
                cmd10.Parameters.AddWithValue("@id_session", 2);
                cmd10.Parameters.AddWithValue("@droit_avancement", "Oui");

                Classe_reussites_2eme_Session = Convert.ToInt32(cmd10.ExecuteScalar());


                Classe_reussite += Classe_reussites_2eme_Session;



                string sq11 = "SELECT COUNT(DISTINCT deliberation.id_etudiant)" +
                    " FROM (deliberation INNER JOIN deliberation_condition ON deliberation.id_decision = deliberation_condition.id_decision) INNER JOIN deliberation_finalite ON deliberation_condition.id_finalite = deliberation_finalite.id_finalite" +
                    " WHERE deliberation.id_annee=@id_annee AND deliberation.id_faculte=@id_faculte AND deliberation.id_departement=@id_departement AND deliberation.id_classe=@id_classe AND deliberation_finalite.id_finalite=@id_finalite";
                MySqlCommand cmd11 = new MySqlCommand(sq11, conn);
                cmd11.Parameters.AddWithValue("@id_departement", id_departement);
                cmd11.Parameters.AddWithValue("@id_classe", id_classe);
                cmd11.Parameters.AddWithValue("@id_annee", id_annee);
                cmd11.Parameters.AddWithValue("@id_faculte", id_faculte);
                cmd11.Parameters.AddWithValue("@id_finalite", 3);
                Classe_ajournes = Convert.ToInt32(cmd11.ExecuteScalar());




                string sq12 = "SELECT COUNT(DISTINCT deliberation.id_etudiant)" +
                    " FROM (deliberation INNER JOIN deliberation_condition ON deliberation.id_decision = deliberation_condition.id_decision) INNER JOIN deliberation_finalite ON deliberation_condition.id_finalite = deliberation_finalite.id_finalite" +
                    " WHERE deliberation.id_annee=@id_annee AND deliberation.id_faculte=@id_faculte AND deliberation.id_departement=@id_departement AND deliberation.id_classe=@id_classe AND deliberation_finalite.id_finalite>@id_finalite";
                MySqlCommand cmd12 = new MySqlCommand(sq12, conn);
                cmd12.Parameters.AddWithValue("@id_departement", id_departement);
                cmd12.Parameters.AddWithValue("@id_classe", id_classe);
                cmd12.Parameters.AddWithValue("@id_annee", id_annee);
                cmd12.Parameters.AddWithValue("@id_faculte", id_faculte);
                cmd12.Parameters.AddWithValue("@id_finalite", 3);
                Classe_eclusion = Convert.ToInt32(cmd12.ExecuteScalar());



                cell = new PdfPCell(new Phrase(Classe_candidats_1ereSession.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(Classe_reussites_1ereSession.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                if (Classe_candidats_1ereSession == 0)
                {
                    cell = new PdfPCell(new Phrase("0", font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    table.AddCell(cell);
                }
                else
                {
                    if (Classe_reussites_1ereSession == 0)
                    {
                        cell = new PdfPCell(new Phrase("0", font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        table.AddCell(cell);
                    }
                    else
                    {
                        cell = new PdfPCell(new Phrase((Classe_reussites_1ereSession * 1000 * 0.1 / Classe_candidats_1ereSession).ToString("#.##"), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        table.AddCell(cell);
                    }
                }

                cell = new PdfPCell(new Phrase(Classe_candidats_2eme_Session.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(Classe_reussites_2eme_Session.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                if (Classe_candidats_2eme_Session == 0)
                {
                    cell = new PdfPCell(new Phrase("0", font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    table.AddCell(cell);
                }
                else
                {
                    if (Classe_reussites_2eme_Session == 0)
                    {
                        cell = new PdfPCell(new Phrase("0", font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        table.AddCell(cell);
                    }
                    else
                    {
                        cell = new PdfPCell(new Phrase((Classe_reussites_2eme_Session * 1000 * 0.1 / Classe_candidats_2eme_Session).ToString("#.##"), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        table.AddCell(cell);
                    }

                }

                cell = new PdfPCell(new Phrase(Classe_reussite.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                if (Classe_candidats_1ereSession == 0)
                {
                    cell = new PdfPCell(new Phrase("0", font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    table.AddCell(cell);
                }
                else
                {
                    if (Classe_reussite == 0)
                    {
                        cell = new PdfPCell(new Phrase("0", font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        table.AddCell(cell);
                    }
                    else
                    {
                        cell = new PdfPCell(new Phrase((Classe_reussite * 1000 * 0.1 / Classe_candidats_1ereSession).ToString("#.##"), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        table.AddCell(cell);
                    }
                }

                cell = new PdfPCell(new Phrase("-", font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("-", font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                table.AddCell(cell);


                cell = new PdfPCell(new Phrase(Classe_ajournes.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                if (Classe_ajournes == 0)
                {
                    cell = new PdfPCell(new Phrase("0", font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    table.AddCell(cell);
                }
                else
                {
                    cell = new PdfPCell(new Phrase((Classe_ajournes * 1000 * 0.1 / Classe_candidats_1ereSession).ToString("#.##"), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    table.AddCell(cell);
                }

                cell = new PdfPCell(new Phrase(Classe_eclusion.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                if (Classe_eclusion == 0)
                {
                    cell = new PdfPCell(new Phrase("0", font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    table.AddCell(cell);
                }
                else
                {
                    cell = new PdfPCell(new Phrase((Classe_eclusion * 1000 * 0.1 / Classe_candidats_1ereSession).ToString("#.##"), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    table.AddCell(cell);
                }

            }
            catch (Exception ex)
            {

            }
            conn.Close();
            doc.Add(table);

            PdfPTable tVisa = new PdfPTable(5);
            float[] colwithv = { 7f, 7f, 7f, 7f, 12f };
            tVisa.SetWidths(colwithv);


            cell = new PdfPCell(new Phrase("", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 5;
            tVisa.AddCell(cell);

            cell = new PdfPCell(new Phrase("", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 5;
            tVisa.AddCell(cell);

            cell = new PdfPCell(new Phrase("", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 5;
            tVisa.AddCell(cell);

            cell = new PdfPCell(new Phrase(" ", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 4;
            tVisa.AddCell(cell);

            string dat = "Fait à " + siege + " ,le " + DateTime.Today.Date.ToShortDateString();
            string nom_rect = "La Direction";

            //cell = new PdfPCell(new Phrase(dat + "\n\n" + nom_rect, font_bold_8));
            cell = new PdfPCell(new Phrase(dat + " ", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            tVisa.AddCell(cell);

            Paragraph pVisa = new Paragraph();
            //parf.IndentationLeft = 240;
            pVisa.Alignment = Element.ALIGN_CENTER;
            pVisa.SpacingAfter = 10;
            pVisa.SpacingBefore = 10;
            pVisa.Add(tVisa);

            doc.Add(pVisa);

            wri.PageEvent = new Foot();
            doc.Close();
            System.Diagnostics.Process.Start(outputFile);
        }
        public void Taux_Reussite_par_Departement(int id_an, string an, int idf, string fac, int hasdep, int iddep, string dep)
        {

            int id_annee = id_an;
            string annee = an;
            int id_faculte = idf;
            string faculte = fac;
            int has_departement = hasdep;
            int id_departement = iddep;
            string departement = dep;

            Create_Folder();


            DateTime dt = DateTime.Now;
            int ans = dt.Year;
            int mois = dt.Month;
            int jour = dt.Day;
            int heure = dt.Hour;
            int min = dt.Minute;
            int sec = dt.Month;
            string date = jour + "-" + mois + "-" + ans + "_à_" + heure + "h" + min + "min" + sec + "sec";

            iTextSharp.text.Document doc = new iTextSharp.text.Document(iTextSharp.text.PageSize.A4, 0, 0, 50, 10);
            string docname = "Stat_type_1_ " + date + ".pdf";
            string outputFile = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.Desktop), @"BMDSys", docname);
            FileStream fs = new FileStream(outputFile, FileMode.Create, FileAccess.Write, FileShare.None);
            PdfWriter wri = PdfWriter.GetInstance(doc, fs);
            doc.Open();

            conn = new MySqlConnection(Authentification.MyString);
            conn.Open();

            string universite = Load_Institution(conn);
            string coordonee = Load_Adress(conn);
            string value = coordonee;
            string[] op = value.Split('-');
            site = op[0];
            siege = op[1];
            telephone = op[2];
            b_postale = op[3];


            PdfPCell cell = new PdfPCell(new Phrase("", font_bold_10));
            PdfPTable table1 = first_header(conn, universite, ref cell, faculte);
            doc.Add(table1);


            Paragraph parf = new Paragraph();
            string ta = "STATISTIQUE DES REUSSITES\n A-A : " + annee + "\n" + faculte + "\n" + departement;
            parf.Add(new Phrase(ta, font_normal_underlined_8));
            parf.Alignment = Element.ALIGN_CENTER;
            parf.SpacingAfter = 15;
            parf.SpacingBefore = 15;
            doc.Add(parf);



            //CORPS DU RAPPORT 
            PdfPTable table = new PdfPTable(15);
            table.HorizontalAlignment = Element.ALIGN_CENTER;
            float[] colwiths = { 30f, 23f, 23f, 23f, 23f, 23f, 23f, 23f, 23f, 23f, 23f, 23f, 23f, 23f, 23f };
            table.SetWidths(colwiths);//appliquer ces dimenstions a l atable


            cell = new PdfPCell(new Phrase(" ", font_normal_7));
            cell.Rowspan = 2;
            cell.BorderWidth = 0;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Sessions", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.Colspan = 8;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Effectif des crédits", font_bold_7));
            cell.Colspan = 2;
            cell.Rowspan = 2;
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Ajournement et assimilés", font_bold_7));
            cell.Colspan = 2;
            cell.Rowspan = 2;
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Exclusion", font_bold_7));
            cell.Colspan = 2;
            cell.Rowspan = 2;
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("1ère Session", font_bold_7));
            cell.Colspan = 3;
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("2ème Session", font_bold_7));
            cell.Colspan = 3;
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Total réussite", font_bold_7));
            cell.Rotation = 90;
            cell.Rowspan = 2;
            cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("% réussite", font_bold_7));
            cell.Rotation = 90;
            cell.Rowspan = 2;
            cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            table.AddCell(cell);



            cell = new PdfPCell(new Phrase("Classe", font_normal_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Candidats", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            cell.Rotation = 90;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Réussite", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            cell.Rotation = 90;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Taux", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            cell.Rotation = 90;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Candidats", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            cell.Rotation = 90;
            table.AddCell(cell);


            cell = new PdfPCell(new Phrase("Réussite", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            cell.Rotation = 90;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Taux", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            cell.Rotation = 90;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Validés", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            cell.Rotation = 90;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Non validés", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            cell.Rotation = 90;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Effectif", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            cell.Rotation = 90;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Taux", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            cell.Rotation = 90;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Effectif", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            cell.Rotation = 90;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Taux", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            cell.Rotation = 90;
            table.AddCell(cell);



            ///-----------------------------FIN ENTETE------------------------------------------------------------//


            string[] Classe_ID, Classe_Nom, Etudiant_ID;
            int nbre_classe = 0;

            int Departement_candidats_1ereSession = 0, Classe_candidats_1ereSession = 0;
            int Departement_reussites_1ereSession = 0, Classe_reussites_1ereSession = 0;

            int Departement_candidats_2eme_Session = 0, Classe_candidats_2eme_Session = 0;
            int Departement_reussites_2eme_Session = 0, Classe_reussites_2eme_Session = 0;

            int Departement_reussite = 0, Classe_reussite = 0;

            int Departement_ajournes = 0, Classe_ajournes = 0;
            int Departement_eclusion = 0, Classe_eclusion = 0;

            try
            {

                Departement_ajournes = 0;
                Departement_eclusion = 0;
                Departement_candidats_1ereSession = 0;
                Departement_candidats_2eme_Session = 0;
                Departement_reussites_1ereSession = 0;
                Departement_reussites_2eme_Session = 0;
                Departement_reussite = 0;

                string sql0 = "SELECT COUNT(DISTINCT id_classe) FROM classe_par_departement WHERE id_departement=@id_departement AND id_annee=@id_annee AND id_faculte=@id_faculte";
                MySqlCommand cmd0 = new MySqlCommand(sql0, conn);
                cmd0.Parameters.AddWithValue("@id_departement", id_departement);
                cmd0.Parameters.AddWithValue("@id_annee", id_annee);
                cmd0.Parameters.AddWithValue("@id_faculte", id_faculte);
                nbre_classe = Convert.ToInt32(cmd0.ExecuteScalar());
                Classe_ID = new string[nbre_classe];
                Classe_Nom = new string[nbre_classe];

                if (nbre_classe == 0)
                {
                    for (int i = 0; i < 14; i++)
                    {
                        cell = new PdfPCell(new Phrase("-", font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        table.AddCell(cell);
                    }

                    cell = new PdfPCell(new Phrase("-", font_normal_7));
                    cell.BorderWidth = 0;
                    cell.BorderWidthRight = 1;
                    table.AddCell(cell);

                    for (int i = 0; i < 13; i++)
                    {
                        cell = new PdfPCell(new Phrase("0", font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        table.AddCell(cell);
                    }
                }
                else
                {
                    string sql1 = "SELECT DISTINCT classe_par_departement.id_classe, classe.classe" +
                        " FROM classe_par_departement INNER JOIN classe ON classe_par_departement.id_classe = classe.id_classe" +
                        " WHERE classe_par_departement.id_departement=@id_departement AND id_annee=@id_annee AND id_faculte=@id_faculte";
                    MySqlCommand cmd1 = new MySqlCommand(sql1, conn);
                    cmd1.Parameters.AddWithValue("@id_departement", id_departement);
                    cmd1.Parameters.AddWithValue("@id_annee", id_annee);
                    cmd1.Parameters.AddWithValue("@id_faculte", id_faculte);
                    MySqlDataReader dr1 = cmd1.ExecuteReader();
                    int j = 0;
                    while (dr1.Read())
                    {
                        Classe_ID[j] = string.Format("{0}", dr1.GetInt32(0).ToString());
                        Classe_Nom[j] = string.Format("{0}", dr1.GetString(1));
                        j++;
                    }
                    dr1.Close();
                    for (int classe = 0; classe < nbre_classe; classe++)
                    {
                        Classe_ajournes = 0;
                        Classe_eclusion = 0;
                        Classe_candidats_1ereSession = 0;
                        Classe_candidats_2eme_Session = 0;
                        Classe_reussites_1ereSession = 0;
                        Classe_reussites_2eme_Session = 0;
                        Classe_reussite = 0;

                        cell = new PdfPCell(new Phrase(Classe_Nom[classe], font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_LEFT;
                        table.AddCell(cell);

                        string sq6 = "SELECT COUNT(DISTINCT id_etudiant) FROM deliberation WHERE id_departement=@id_departement AND id_classe=@id_classe AND id_session=@id_session AND id_annee=@id_annee AND id_faculte=@id_faculte";
                        MySqlCommand cmd6 = new MySqlCommand(sq6, conn);
                        cmd6.Parameters.AddWithValue("@id_annee", id_annee);
                        cmd6.Parameters.AddWithValue("@id_faculte", id_faculte);
                        cmd6.Parameters.AddWithValue("@id_departement", id_departement);
                        cmd6.Parameters.AddWithValue("@id_classe", Convert.ToInt32(Classe_ID[classe]));
                        cmd6.Parameters.AddWithValue("@id_session", 1);

                        Classe_candidats_1ereSession += Convert.ToInt32(cmd6.ExecuteScalar());
                        Departement_candidats_1ereSession += Classe_candidats_1ereSession;

                        string sq8 = "SELECT COUNT(DISTINCT deliberation.id_etudiant)" +
                                " FROM (deliberation INNER JOIN deliberation_condition ON deliberation.id_decision = deliberation_condition.id_decision) INNER JOIN deliberation_finalite ON deliberation_condition.id_finalite = deliberation_finalite.id_finalite" +
                                " WHERE deliberation.id_annee=@id_annee AND deliberation.id_faculte=@id_faculte AND deliberation.id_departement=@id_departement AND deliberation.id_classe=@id_classe AND deliberation.id_session=@id_session AND deliberation_finalite.droit_avancement=@droit_avancement";
                        MySqlCommand cmd8 = new MySqlCommand(sq8, conn);
                        cmd8.Parameters.AddWithValue("@id_departement", id_departement);
                        cmd8.Parameters.AddWithValue("@id_classe", Convert.ToInt32(Classe_ID[classe]));
                        cmd8.Parameters.AddWithValue("@id_annee", id_annee);
                        cmd8.Parameters.AddWithValue("@id_faculte", id_faculte);
                        cmd8.Parameters.AddWithValue("@id_session", 1);
                        cmd8.Parameters.AddWithValue("@droit_avancement", "Oui");

                        Classe_reussites_1ereSession = Convert.ToInt32(cmd8.ExecuteScalar());
                        Departement_reussites_1ereSession += Classe_reussites_1ereSession;

                        Classe_reussite += Classe_reussites_1ereSession;
                        Departement_reussite += Classe_reussites_1ereSession;

                        string sq9 = "SELECT COUNT(DISTINCT id_etudiant) FROM deliberation WHERE id_departement=@id_departement AND id_classe=@id_classe AND id_session=@id_session AND id_annee=@id_annee AND id_faculte=@id_faculte";
                        MySqlCommand cmd9 = new MySqlCommand(sq9, conn);
                        cmd9.Parameters.AddWithValue("@id_departement", id_departement);
                        cmd9.Parameters.AddWithValue("@id_classe", Convert.ToInt32(Classe_ID[classe]));
                        cmd9.Parameters.AddWithValue("@id_annee", id_annee);
                        cmd9.Parameters.AddWithValue("@id_faculte", id_faculte);
                        cmd9.Parameters.AddWithValue("@id_session", 2);

                        Classe_candidats_2eme_Session = Convert.ToInt32(cmd9.ExecuteScalar());
                        Departement_candidats_2eme_Session += Classe_candidats_2eme_Session;


                        string sq10 = "SELECT COUNT(DISTINCT deliberation.id_etudiant)" +
                            " FROM (deliberation INNER JOIN deliberation_condition ON deliberation.id_decision = deliberation_condition.id_decision) INNER JOIN deliberation_finalite ON deliberation_condition.id_finalite = deliberation_finalite.id_finalite" +
                            " WHERE deliberation.id_annee=@id_annee AND deliberation.id_faculte=@id_faculte AND deliberation.id_departement=@id_departement AND deliberation.id_classe=@id_classe AND deliberation.id_session=@id_session AND deliberation_finalite.droit_avancement=@droit_avancement";
                        MySqlCommand cmd10 = new MySqlCommand(sq10, conn);
                        cmd10.Parameters.AddWithValue("@id_departement", id_departement);
                        cmd10.Parameters.AddWithValue("@id_classe", Convert.ToInt32(Classe_ID[classe]));
                        cmd10.Parameters.AddWithValue("@id_annee", id_annee);
                        cmd10.Parameters.AddWithValue("@id_faculte", id_faculte);
                        cmd10.Parameters.AddWithValue("@id_session", 2);
                        cmd10.Parameters.AddWithValue("@droit_avancement", "Oui");

                        Classe_reussites_2eme_Session = Convert.ToInt32(cmd10.ExecuteScalar());
                        Departement_reussites_2eme_Session += Classe_reussites_2eme_Session;// Etudiant reussis en 1ere session

                        Classe_reussite += Classe_reussites_2eme_Session;
                        Departement_reussite += Classe_reussites_2eme_Session;


                        string sq11 = "SELECT COUNT(DISTINCT deliberation.id_etudiant)" +
                            " FROM (deliberation INNER JOIN deliberation_condition ON deliberation.id_decision = deliberation_condition.id_decision) INNER JOIN deliberation_finalite ON deliberation_condition.id_finalite = deliberation_finalite.id_finalite" +
                            " WHERE deliberation.id_annee=@id_annee AND deliberation.id_faculte=@id_faculte AND deliberation.id_departement=@id_departement AND deliberation.id_classe=@id_classe AND deliberation_finalite.id_finalite=@id_finalite";
                        MySqlCommand cmd11 = new MySqlCommand(sq11, conn);
                        cmd11.Parameters.AddWithValue("@id_departement", id_departement);
                        cmd11.Parameters.AddWithValue("@id_classe", Convert.ToInt32(Classe_ID[classe]));
                        cmd11.Parameters.AddWithValue("@id_annee", id_annee);
                        cmd11.Parameters.AddWithValue("@id_faculte", id_faculte);
                        cmd11.Parameters.AddWithValue("@id_finalite", 3);
                        Classe_ajournes = Convert.ToInt32(cmd11.ExecuteScalar());

                        Departement_ajournes += Classe_ajournes;


                        string sq12 = "SELECT COUNT(DISTINCT deliberation.id_etudiant)" +
                            " FROM (deliberation INNER JOIN deliberation_condition ON deliberation.id_decision = deliberation_condition.id_decision) INNER JOIN deliberation_finalite ON deliberation_condition.id_finalite = deliberation_finalite.id_finalite" +
                            " WHERE deliberation.id_annee=@id_annee AND deliberation.id_faculte=@id_faculte AND deliberation.id_departement=@id_departement AND deliberation.id_classe=@id_classe AND deliberation_finalite.id_finalite>@id_finalite";
                        MySqlCommand cmd12 = new MySqlCommand(sq12, conn);
                        cmd12.Parameters.AddWithValue("@id_departement", id_departement);
                        cmd12.Parameters.AddWithValue("@id_classe", Convert.ToInt32(Classe_ID[classe]));
                        cmd12.Parameters.AddWithValue("@id_annee", id_annee);
                        cmd12.Parameters.AddWithValue("@id_faculte", id_faculte);
                        cmd12.Parameters.AddWithValue("@id_finalite", 3);
                        Classe_eclusion = Convert.ToInt32(cmd12.ExecuteScalar());

                        Departement_eclusion += Classe_eclusion;


                        cell = new PdfPCell(new Phrase(Classe_candidats_1ereSession.ToString(), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        table.AddCell(cell);

                        cell = new PdfPCell(new Phrase(Classe_reussites_1ereSession.ToString(), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        table.AddCell(cell);

                        if (Classe_candidats_1ereSession == 0)
                        {
                            cell = new PdfPCell(new Phrase("0", font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);
                        }
                        else
                        {
                            if (Classe_reussites_1ereSession == 0)
                            {
                                cell = new PdfPCell(new Phrase("0", font_normal_7));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                table.AddCell(cell);
                            }
                            else
                            {
                                cell = new PdfPCell(new Phrase((Classe_reussites_1ereSession * 1000 * 0.1 / Classe_candidats_1ereSession).ToString("#.##"), font_normal_7));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                table.AddCell(cell);
                            }
                        }

                        cell = new PdfPCell(new Phrase(Classe_candidats_2eme_Session.ToString(), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        table.AddCell(cell);

                        cell = new PdfPCell(new Phrase(Classe_reussites_2eme_Session.ToString(), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        table.AddCell(cell);

                        if (Classe_candidats_2eme_Session == 0)
                        {
                            cell = new PdfPCell(new Phrase("0", font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);
                        }
                        else
                        {
                            if (Classe_reussites_2eme_Session == 0)
                            {
                                cell = new PdfPCell(new Phrase("0", font_normal_7));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                table.AddCell(cell);
                            }
                            else
                            {
                                cell = new PdfPCell(new Phrase((Classe_reussites_2eme_Session * 1000 * 0.1 / Classe_candidats_2eme_Session).ToString("#.##"), font_normal_7));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                table.AddCell(cell);
                            }

                        }

                        cell = new PdfPCell(new Phrase(Classe_reussite.ToString(), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        table.AddCell(cell);

                        if (Classe_candidats_1ereSession == 0)
                        {
                            cell = new PdfPCell(new Phrase("0", font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);
                        }
                        else
                        {
                            if (Classe_reussite == 0)
                            {
                                cell = new PdfPCell(new Phrase("0", font_normal_7));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                table.AddCell(cell);
                            }
                            else
                            {
                                cell = new PdfPCell(new Phrase((Classe_reussite * 1000 * 0.1 / Classe_candidats_1ereSession).ToString("#.##"), font_normal_7));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                table.AddCell(cell);
                            }
                        }

                        cell = new PdfPCell(new Phrase("-", font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        table.AddCell(cell);

                        cell = new PdfPCell(new Phrase("-", font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        table.AddCell(cell);


                        cell = new PdfPCell(new Phrase(Classe_ajournes.ToString(), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        table.AddCell(cell);

                        if (Classe_ajournes == 0)
                        {
                            cell = new PdfPCell(new Phrase("0", font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);
                        }
                        else
                        {
                            cell = new PdfPCell(new Phrase((Classe_ajournes * 1000 * 0.1 / Classe_candidats_1ereSession).ToString("#.##"), font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);
                        }

                        cell = new PdfPCell(new Phrase(Classe_eclusion.ToString(), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        table.AddCell(cell);

                        if (Classe_eclusion == 0)
                        {
                            cell = new PdfPCell(new Phrase("0", font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);
                        }
                        else
                        {
                            cell = new PdfPCell(new Phrase((Classe_eclusion * 1000 * 0.1 / Classe_candidats_1ereSession).ToString("#.##"), font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);
                        }
                    }

                    cell = new PdfPCell(new Phrase(" ", font_bold_7));
                    cell.BorderWidth = 0;
                    cell.BorderWidthRight = 1;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(Departement_candidats_1ereSession.ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(Departement_reussites_1ereSession.ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    table.AddCell(cell);

                    if (Departement_candidats_1ereSession == 0)
                    {
                        cell = new PdfPCell(new Phrase("0", font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        table.AddCell(cell);
                    }
                    else
                    {
                        if (Departement_reussites_1ereSession == 0)
                        {
                            cell = new PdfPCell(new Phrase("0", font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);
                        }
                        else
                        {
                            cell = new PdfPCell(new Phrase((Departement_reussites_1ereSession * 1000 * 0.1 / Departement_candidats_1ereSession).ToString("#.##"), font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);
                        }
                    }

                    cell = new PdfPCell(new Phrase(Departement_candidats_2eme_Session.ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(Departement_reussites_2eme_Session.ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    table.AddCell(cell);

                    if (Departement_candidats_2eme_Session == 0)
                    {
                        cell = new PdfPCell(new Phrase("0", font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        table.AddCell(cell);
                    }
                    else
                    {

                        if (Departement_reussites_2eme_Session == 0)
                        {
                            cell = new PdfPCell(new Phrase("0", font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);
                        }
                        else
                        {
                            cell = new PdfPCell(new Phrase((Departement_reussites_2eme_Session * 1000 * 0.1 / Departement_candidats_2eme_Session).ToString("#.##"), font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);
                        }
                    }

                    cell = new PdfPCell(new Phrase(Departement_reussite.ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    table.AddCell(cell);

                    if (Departement_candidats_1ereSession == 0)
                    {
                        cell = new PdfPCell(new Phrase("0", font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        table.AddCell(cell);
                    }
                    else
                    {
                        if (Departement_reussite == 0)
                        {
                            cell = new PdfPCell(new Phrase("0", font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);
                        }
                        else
                        {
                            cell = new PdfPCell(new Phrase((Departement_reussite * 1000 * 0.1 / Departement_candidats_1ereSession).ToString("#.##"), font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);
                        }
                    }

                    cell = new PdfPCell(new Phrase("-", font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase("-", font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(Departement_ajournes.ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    table.AddCell(cell);

                    if (Departement_ajournes == 0)
                    {
                        cell = new PdfPCell(new Phrase("0", font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        table.AddCell(cell);
                    }
                    else
                    {
                        cell = new PdfPCell(new Phrase((Departement_ajournes * 1000 * 0.1 / Departement_candidats_1ereSession).ToString("#.##"), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        table.AddCell(cell);
                    }

                    cell = new PdfPCell(new Phrase(Departement_eclusion.ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    table.AddCell(cell);

                    if (Departement_eclusion == 0)
                    {
                        cell = new PdfPCell(new Phrase("0", font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        table.AddCell(cell);
                    }
                    else
                    {
                        cell = new PdfPCell(new Phrase((Departement_eclusion * 1000 * 0.1 / Departement_candidats_1ereSession).ToString("#.##"), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        table.AddCell(cell);
                    }
                }

            }
            catch (Exception ex)
            {

            }
            conn.Close();
            doc.Add(table);

            PdfPTable tVisa = new PdfPTable(5);
            float[] colwithv = { 7f, 7f, 7f, 7f, 12f };
            tVisa.SetWidths(colwithv);


            cell = new PdfPCell(new Phrase("", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 5;
            tVisa.AddCell(cell);

            cell = new PdfPCell(new Phrase("", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 5;
            tVisa.AddCell(cell);

            cell = new PdfPCell(new Phrase("", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 5;
            tVisa.AddCell(cell);

            cell = new PdfPCell(new Phrase(" ", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 2;
            tVisa.AddCell(cell);

            cell = new PdfPCell(new Phrase("", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 2;
            tVisa.AddCell(cell);

            string dat = "Fait à " + siege + " ,le " + DateTime.Today.Date.ToShortDateString();
            string nom_rect = "La Direction";

            //cell = new PdfPCell(new Phrase(dat + "\n\n" + nom_rect, font_bold_8));
            cell = new PdfPCell(new Phrase(dat + " ", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            tVisa.AddCell(cell);

            Paragraph pVisa = new Paragraph();
            //parf.IndentationLeft = 240;
            pVisa.Alignment = Element.ALIGN_CENTER;
            pVisa.SpacingAfter = 10;
            pVisa.SpacingBefore = 10;
            pVisa.Add(tVisa);

            doc.Add(pVisa);

            wri.PageEvent = new Foot();
            doc.Close();
            System.Diagnostics.Process.Start(outputFile);
        }
        public void Taux_Reussite_par_Faculte(int id_an, string an, int idf, string fac, int hasdep)
        {

            int id_annee = id_an;
            string annee = an;
            int id_faculte = idf;
            string faculte = fac;
            int has_departement = hasdep;

            Create_Folder();


            DateTime dt = DateTime.Now;
            int ans = dt.Year;
            int mois = dt.Month;
            int jour = dt.Day;
            int heure = dt.Hour;
            int min = dt.Minute;
            int sec = dt.Month;
            string date = jour + "-" + mois + "-" + ans + "_à_" + heure + "h" + min + "min" + sec + "sec";

            iTextSharp.text.Document doc = new iTextSharp.text.Document(iTextSharp.text.PageSize.A4, 0, 0, 50, 10);
            string docname = "Stat_type_1_ " + date + ".pdf";
            string outputFile = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.Desktop), @"BMDSys", docname);
            FileStream fs = new FileStream(outputFile, FileMode.Create, FileAccess.Write, FileShare.None);
            PdfWriter wri = PdfWriter.GetInstance(doc, fs);
            doc.Open();

            conn = new MySqlConnection(Authentification.MyString);
            conn.Open();

            string universite = Load_Institution(conn);
            string coordonee = Load_Adress(conn);
            string value = coordonee;
            string[] op = value.Split('-');
            site = op[0];
            siege = op[1];
            telephone = op[2];
            b_postale = op[3];


            PdfPCell cell = new PdfPCell(new Phrase("", font_bold_10));
            PdfPTable table1 = first_header(conn, universite, ref cell, faculte);
            doc.Add(table1);


            Paragraph parf = new Paragraph();
            string ta = "STATISTIQUE DES REUSSITES\n A-A : " + annee + "\n" + faculte;
            parf.Add(new Phrase(ta, font_normal_underlined_8));
            parf.Alignment = Element.ALIGN_CENTER;
            parf.SpacingAfter = 10;
            parf.SpacingBefore = 10;
            doc.Add(parf);



            //CORPS DU RAPPORT 
            PdfPTable table = new PdfPTable(16);
            table.HorizontalAlignment = Element.ALIGN_CENTER;
            float[] colwiths = { 100f, 30f, 23f, 23f, 23f, 23f, 23f, 23f, 23f, 23f, 23f, 23f, 23f, 23f, 23f, 23f };
            table.SetWidths(colwiths);//appliquer ces dimenstions a l atable


            cell = new PdfPCell(new Phrase(" ", font_normal_7));
            cell.Colspan = 2;
            cell.Rowspan = 2;
            cell.BorderWidth = 0;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Sessions", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.Colspan = 8;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Effectif des crédits", font_bold_7));
            cell.Colspan = 2;
            cell.Rowspan = 2;
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Ajournement et assimilés", font_bold_7));
            cell.Colspan = 2;
            cell.Rowspan = 2;
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Exclusion", font_bold_7));
            cell.Colspan = 2;
            cell.Rowspan = 2;
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("1ère Session", font_bold_7));
            cell.Colspan = 3;
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("2ème Session", font_bold_7));
            cell.Colspan = 3;
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Total réussite", font_bold_7));
            cell.Rotation = 90;
            cell.Rowspan = 2;
            cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("% réussite", font_bold_7));
            cell.Rotation = 90;
            cell.Rowspan = 2;
            cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            table.AddCell(cell);




            cell = new PdfPCell(new Phrase("DEPARTEMENT", font_normal_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Classe", font_normal_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Candidats", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            cell.Rotation = 90;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Réussite", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            cell.Rotation = 90;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Taux", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            cell.Rotation = 90;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Candidats", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            cell.Rotation = 90;
            table.AddCell(cell);


            cell = new PdfPCell(new Phrase("Réussite", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            cell.Rotation = 90;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Taux", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            cell.Rotation = 90;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Validés", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            cell.Rotation = 90;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Non validés", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            cell.Rotation = 90;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Effectif", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            cell.Rotation = 90;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Taux", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            cell.Rotation = 90;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Effectif", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            cell.Rotation = 90;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Taux", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            cell.Rotation = 90;
            table.AddCell(cell);



            ///-----------------------------FIN ENTETE------------------------------------------------------------//


            string[] Faculte_ID, Faculte_Nom, Departement_ID, Departement_Nom, Classe_ID, Classe_Nom, Etudiant_ID;
            int nbre_classe = 0, nbre_faculte = 0, nbre_departement = 0;

            int Annee_candidats_1ereSession = 0, Faculte_candidats_1ereSession = 0, Departement_candidats_1ereSession = 0, Classe_candidats_1ereSession = 0;
            int Annee_reussites_1ereSession = 0, Faculte_reussites_1ereSession = 0, Departement_reussites_1ereSession = 0, Classe_reussites_1ereSession = 0;

            int Annee_candidats_2eme_Session = 0, Faculte_candidats_2eme_Session = 0, Departement_candidats_2eme_Session = 0, Classe_candidats_2eme_Session = 0;
            int Annee_reussites_2eme_Session = 0, Faculte_reussites_2eme_Session = 0, Departement_reussites_2eme_Session = 0, Classe_reussites_2eme_Session = 0;

            int Annee_reussite = 0, Faculte_reussite = 0, Departement_reussite = 0, Classe_reussite = 0;

            int Annee_ajournes = 0, Faculte_ajournes = 0, Departement_ajournes = 0, Classe_ajournes = 0;
            int Annee_eclusion = 0, Faculte_eclusion = 0, Departement_eclusion = 0, Classe_eclusion = 0;

            try
            {

                string sq4 = "SELECT COUNT(DISTINCT id_departement) FROM departement_par_faculte  WHERE id_faculte=@id_faculte AND id_annee=@id_annee";
                MySqlCommand cmd4 = new MySqlCommand(sq4, conn);
                cmd4.Parameters.AddWithValue("@id_faculte", id_faculte);
                cmd4.Parameters.AddWithValue("@id_annee", id_annee);
                nbre_departement = Convert.ToInt32(cmd4.ExecuteScalar());

                Departement_ID = new string[nbre_departement];
                Departement_Nom = new string[nbre_departement];


                string sq5 = "SELECT DISTINCT departement_par_faculte.id_departement, departement.departement" +
                    " FROM departement INNER JOIN departement_par_faculte ON departement.id_departement = departement_par_faculte.id_departement" +
                    " WHERE departement_par_faculte.id_annee=@id_annee AND departement_par_faculte.id_faculte=@id_faculte";
                MySqlCommand cmd5 = new MySqlCommand(sq5, conn);
                cmd5.Parameters.AddWithValue("@id_annee", id_annee);
                cmd5.Parameters.AddWithValue("@id_faculte", id_faculte);
                MySqlDataReader dr5 = cmd5.ExecuteReader();
                int na = 0;
                while (dr5.Read())
                {
                    Departement_ID[na] = string.Format("{0}", dr5.GetInt32(0).ToString());
                    Departement_Nom[na] = string.Format("{0}", dr5.GetString(1));
                    na++;
                }
                dr5.Close();

                for (int dptmnt = 0; dptmnt < nbre_departement; dptmnt++)
                {
                    Departement_ajournes = 0;
                    Departement_eclusion = 0;
                    Departement_candidats_1ereSession = 0;
                    Departement_candidats_2eme_Session = 0;
                    Departement_reussites_1ereSession = 0;
                    Departement_reussites_2eme_Session = 0;
                    Departement_reussite = 0;

                    string sql0 = "SELECT COUNT(DISTINCT id_classe) FROM classe_par_departement WHERE id_departement=@id_departement AND id_annee=@id_annee AND id_faculte=@id_faculte";
                    MySqlCommand cmd0 = new MySqlCommand(sql0, conn);
                    cmd0.Parameters.AddWithValue("@id_departement", Convert.ToInt32(Departement_ID[dptmnt]));
                    cmd0.Parameters.AddWithValue("@id_annee", id_annee);
                    cmd0.Parameters.AddWithValue("@id_faculte", id_faculte);
                    nbre_classe = Convert.ToInt32(cmd0.ExecuteScalar());
                    Classe_ID = new string[nbre_classe];
                    Classe_Nom = new string[nbre_classe];

                    if (nbre_classe == 0)
                    {
                        cell = new PdfPCell(new Phrase(Departement_Nom[dptmnt], font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_LEFT;
                        table.AddCell(cell);
                        for (int i = 0; i < 15; i++)
                        {
                            cell = new PdfPCell(new Phrase("-", font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            table.AddCell(cell);
                        }

                        cell = new PdfPCell(new Phrase("", font_normal_7));
                        cell.Colspan = 2;
                        cell.BorderWidthLeft = 0;
                        table.AddCell(cell);

                        for (int i = 0; i < 14; i++)
                        {
                            cell = new PdfPCell(new Phrase("0", font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);
                        }
                    }
                    else
                    {
                        cell = new PdfPCell(new Phrase(Departement_Nom[dptmnt], font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_LEFT;
                        cell.VerticalAlignment = Element.ALIGN_MIDDLE;
                        cell.Rowspan = nbre_classe;
                        table.AddCell(cell);


                        string sql1 = "SELECT DISTINCT classe_par_departement.id_classe, classe.classe" +
                            " FROM classe_par_departement INNER JOIN classe ON classe_par_departement.id_classe = classe.id_classe" +
                            " WHERE classe_par_departement.id_departement=@id_departement AND id_annee=@id_annee AND id_faculte=@id_faculte";
                        MySqlCommand cmd1 = new MySqlCommand(sql1, conn);
                        cmd1.Parameters.AddWithValue("@id_departement", Convert.ToInt32(Departement_ID[dptmnt]));
                        cmd1.Parameters.AddWithValue("@id_annee", id_annee);
                        cmd1.Parameters.AddWithValue("@id_faculte", id_faculte);
                        MySqlDataReader dr1 = cmd1.ExecuteReader();
                        int j = 0;
                        while (dr1.Read())
                        {
                            Classe_ID[j] = string.Format("{0}", dr1.GetInt32(0).ToString());
                            Classe_Nom[j] = string.Format("{0}", dr1.GetString(1));
                            j++;
                        }
                        dr1.Close();
                        for (int classe = 0; classe < nbre_classe; classe++)
                        {
                            Classe_ajournes = 0;
                            Classe_eclusion = 0;
                            Classe_candidats_1ereSession = 0;
                            Classe_candidats_2eme_Session = 0;
                            Classe_reussites_1ereSession = 0;
                            Classe_reussites_2eme_Session = 0;
                            Classe_reussite = 0;

                            cell = new PdfPCell(new Phrase(Classe_Nom[classe], font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_LEFT;
                            table.AddCell(cell);

                            string sq6 = "SELECT COUNT(DISTINCT id_etudiant) FROM deliberation WHERE id_departement=@id_departement AND id_classe=@id_classe AND id_session=@id_session AND id_annee=@id_annee AND id_faculte=@id_faculte";
                            MySqlCommand cmd6 = new MySqlCommand(sq6, conn);
                            cmd6.Parameters.AddWithValue("@id_annee", id_annee);
                            cmd6.Parameters.AddWithValue("@id_faculte", id_faculte);
                            cmd6.Parameters.AddWithValue("@id_departement", Convert.ToInt32(Departement_ID[dptmnt]));
                            cmd6.Parameters.AddWithValue("@id_classe", Convert.ToInt32(Classe_ID[classe]));
                            cmd6.Parameters.AddWithValue("@id_session", 1);

                            Classe_candidats_1ereSession += Convert.ToInt32(cmd6.ExecuteScalar());
                            Departement_candidats_1ereSession += Classe_candidats_1ereSession;
                            Faculte_candidats_1ereSession += Classe_candidats_1ereSession;

                            string sq8 = "SELECT COUNT(DISTINCT deliberation.id_etudiant)" +
                                    " FROM (deliberation INNER JOIN deliberation_condition ON deliberation.id_decision = deliberation_condition.id_decision) INNER JOIN deliberation_finalite ON deliberation_condition.id_finalite = deliberation_finalite.id_finalite" +
                                    " WHERE deliberation.id_annee=@id_annee AND deliberation.id_faculte=@id_faculte AND deliberation.id_departement=@id_departement AND deliberation.id_classe=@id_classe AND deliberation.id_session=@id_session AND deliberation_finalite.droit_avancement=@droit_avancement";
                            MySqlCommand cmd8 = new MySqlCommand(sq8, conn);
                            cmd8.Parameters.AddWithValue("@id_departement", Convert.ToInt32(Departement_ID[dptmnt]));
                            cmd8.Parameters.AddWithValue("@id_classe", Convert.ToInt32(Classe_ID[classe]));
                            cmd8.Parameters.AddWithValue("@id_annee", id_annee);
                            cmd8.Parameters.AddWithValue("@id_faculte", id_faculte);
                            cmd8.Parameters.AddWithValue("@id_session", 1);
                            cmd8.Parameters.AddWithValue("@droit_avancement", "Oui");

                            Classe_reussites_1ereSession = Convert.ToInt32(cmd8.ExecuteScalar());
                            Departement_reussites_1ereSession += Classe_reussites_1ereSession;
                            Faculte_reussites_1ereSession += Classe_reussites_1ereSession;

                            Classe_reussite += Classe_reussites_1ereSession;
                            Departement_reussite += Classe_reussites_1ereSession;
                            Faculte_reussite += Classe_reussites_1ereSession;

                            string sq9 = "SELECT COUNT(DISTINCT id_etudiant) FROM deliberation WHERE id_departement=@id_departement AND id_classe=@id_classe AND id_session=@id_session AND id_annee=@id_annee AND id_faculte=@id_faculte";
                            MySqlCommand cmd9 = new MySqlCommand(sq9, conn);
                            cmd9.Parameters.AddWithValue("@id_departement", Convert.ToInt32(Departement_ID[dptmnt]));
                            cmd9.Parameters.AddWithValue("@id_classe", Convert.ToInt32(Classe_ID[classe]));
                            cmd9.Parameters.AddWithValue("@id_annee", id_annee);
                            cmd9.Parameters.AddWithValue("@id_faculte", id_faculte);
                            cmd9.Parameters.AddWithValue("@id_session", 2);

                            Classe_candidats_2eme_Session = Convert.ToInt32(cmd9.ExecuteScalar());
                            Departement_candidats_2eme_Session += Classe_candidats_2eme_Session;
                            Faculte_candidats_2eme_Session += Classe_candidats_2eme_Session;


                            string sq10 = "SELECT COUNT(DISTINCT deliberation.id_etudiant)" +
                                " FROM (deliberation INNER JOIN deliberation_condition ON deliberation.id_decision = deliberation_condition.id_decision) INNER JOIN deliberation_finalite ON deliberation_condition.id_finalite = deliberation_finalite.id_finalite" +
                                " WHERE deliberation.id_annee=@id_annee AND deliberation.id_faculte=@id_faculte AND deliberation.id_departement=@id_departement AND deliberation.id_classe=@id_classe AND deliberation.id_session=@id_session AND deliberation_finalite.droit_avancement=@droit_avancement";
                            MySqlCommand cmd10 = new MySqlCommand(sq10, conn);
                            cmd10.Parameters.AddWithValue("@id_departement", Convert.ToInt32(Departement_ID[dptmnt]));
                            cmd10.Parameters.AddWithValue("@id_classe", Convert.ToInt32(Classe_ID[classe]));
                            cmd10.Parameters.AddWithValue("@id_annee", id_annee);
                            cmd10.Parameters.AddWithValue("@id_faculte", id_faculte);
                            cmd10.Parameters.AddWithValue("@id_session", 2);
                            cmd10.Parameters.AddWithValue("@droit_avancement", "Oui");

                            Classe_reussites_2eme_Session = Convert.ToInt32(cmd10.ExecuteScalar());
                            Departement_reussites_2eme_Session += Classe_reussites_2eme_Session;// Etudiant reussis en 1ere session
                            Faculte_reussites_2eme_Session += Classe_reussites_2eme_Session;

                            Classe_reussite += Classe_reussites_2eme_Session;
                            Departement_reussite += Classe_reussites_2eme_Session;
                            Faculte_reussite += Classe_reussites_2eme_Session;


                            string sq11 = "SELECT COUNT(DISTINCT deliberation.id_etudiant)" +
                                " FROM (deliberation INNER JOIN deliberation_condition ON deliberation.id_decision = deliberation_condition.id_decision) INNER JOIN deliberation_finalite ON deliberation_condition.id_finalite = deliberation_finalite.id_finalite" +
                                " WHERE deliberation.id_annee=@id_annee AND deliberation.id_faculte=@id_faculte AND deliberation.id_departement=@id_departement AND deliberation.id_classe=@id_classe AND deliberation_finalite.id_finalite=@id_finalite";
                            MySqlCommand cmd11 = new MySqlCommand(sq11, conn);
                            cmd11.Parameters.AddWithValue("@id_departement", Convert.ToInt32(Departement_ID[dptmnt]));
                            cmd11.Parameters.AddWithValue("@id_classe", Convert.ToInt32(Classe_ID[classe]));
                            cmd11.Parameters.AddWithValue("@id_annee", id_annee);
                            cmd11.Parameters.AddWithValue("@id_faculte", id_faculte);
                            cmd11.Parameters.AddWithValue("@id_finalite", 3);
                            Classe_ajournes = Convert.ToInt32(cmd11.ExecuteScalar());

                            Departement_ajournes += Classe_ajournes;
                            Faculte_ajournes += Classe_ajournes;


                            string sq12 = "SELECT COUNT(DISTINCT deliberation.id_etudiant)" +
                                " FROM (deliberation INNER JOIN deliberation_condition ON deliberation.id_decision = deliberation_condition.id_decision) INNER JOIN deliberation_finalite ON deliberation_condition.id_finalite = deliberation_finalite.id_finalite" +
                                " WHERE deliberation.id_annee=@id_annee AND deliberation.id_faculte=@id_faculte AND deliberation.id_departement=@id_departement AND deliberation.id_classe=@id_classe AND deliberation_finalite.id_finalite>@id_finalite";
                            MySqlCommand cmd12 = new MySqlCommand(sq12, conn);
                            cmd12.Parameters.AddWithValue("@id_departement", Convert.ToInt32(Departement_ID[dptmnt]));
                            cmd12.Parameters.AddWithValue("@id_classe", Convert.ToInt32(Classe_ID[classe]));
                            cmd12.Parameters.AddWithValue("@id_annee", id_annee);
                            cmd12.Parameters.AddWithValue("@id_faculte", id_faculte);
                            cmd12.Parameters.AddWithValue("@id_finalite", 3);
                            Classe_eclusion = Convert.ToInt32(cmd12.ExecuteScalar());

                            Departement_eclusion += Classe_eclusion;
                            Faculte_eclusion += Classe_eclusion;


                            cell = new PdfPCell(new Phrase(Classe_candidats_1ereSession.ToString(), font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            table.AddCell(cell);

                            cell = new PdfPCell(new Phrase(Classe_reussites_1ereSession.ToString(), font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);

                            if (Classe_candidats_1ereSession == 0)
                            {
                                cell = new PdfPCell(new Phrase("0", font_normal_7));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                table.AddCell(cell);
                            }
                            else
                            {
                                if (Classe_reussites_1ereSession == 0)
                                {
                                    cell = new PdfPCell(new Phrase("0", font_normal_7));
                                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                    //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                    table.AddCell(cell);
                                }
                                else
                                {
                                    cell = new PdfPCell(new Phrase((Classe_reussites_1ereSession * 1000 * 0.1 / Classe_candidats_1ereSession).ToString("#.##"), font_normal_7));
                                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                    //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                    table.AddCell(cell);
                                }
                            }

                            cell = new PdfPCell(new Phrase(Classe_candidats_2eme_Session.ToString(), font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);

                            cell = new PdfPCell(new Phrase(Classe_reussites_2eme_Session.ToString(), font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);

                            if (Classe_candidats_2eme_Session == 0)
                            {
                                cell = new PdfPCell(new Phrase("0", font_normal_7));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                table.AddCell(cell);
                            }
                            else
                            {
                                if (Classe_reussites_2eme_Session == 0)
                                {
                                    cell = new PdfPCell(new Phrase("0", font_normal_7));
                                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                    //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                    table.AddCell(cell);
                                }
                                else
                                {
                                    cell = new PdfPCell(new Phrase((Classe_reussites_2eme_Session * 1000 * 0.1 / Classe_candidats_2eme_Session).ToString("#.##"), font_normal_7));
                                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                    //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                    table.AddCell(cell);
                                }

                            }

                            cell = new PdfPCell(new Phrase(Classe_reussite.ToString(), font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);

                            if (Classe_candidats_1ereSession == 0)
                            {
                                cell = new PdfPCell(new Phrase("0", font_normal_7));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                table.AddCell(cell);
                            }
                            else
                            {
                                if (Classe_reussite == 0)
                                {
                                    cell = new PdfPCell(new Phrase("0", font_normal_7));
                                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                    table.AddCell(cell);
                                }
                                else
                                {
                                    cell = new PdfPCell(new Phrase((Classe_reussite * 1000 * 0.1 / Classe_candidats_1ereSession).ToString("#.##"), font_normal_7));
                                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                    table.AddCell(cell);
                                }
                            }

                            cell = new PdfPCell(new Phrase("-", font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            table.AddCell(cell);

                            cell = new PdfPCell(new Phrase("-", font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            table.AddCell(cell);


                            cell = new PdfPCell(new Phrase(Classe_ajournes.ToString(), font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);

                            if (Classe_ajournes == 0)
                            {
                                cell = new PdfPCell(new Phrase("0", font_normal_7));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                table.AddCell(cell);
                            }
                            else
                            {
                                cell = new PdfPCell(new Phrase((Classe_ajournes * 1000 * 0.1 / Classe_candidats_1ereSession).ToString("#.##"), font_normal_7));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                table.AddCell(cell);
                            }

                            cell = new PdfPCell(new Phrase(Classe_eclusion.ToString(), font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);

                            if (Classe_eclusion == 0)
                            {
                                cell = new PdfPCell(new Phrase("0", font_normal_7));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                table.AddCell(cell);
                            }
                            else
                            {
                                cell = new PdfPCell(new Phrase((Classe_eclusion * 1000 * 0.1 / Classe_candidats_1ereSession).ToString("#.##"), font_normal_7));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                table.AddCell(cell);
                            }
                        }

                        cell = new PdfPCell(new Phrase(" ", font_bold_7));
                        cell.BorderWidthLeft = 0;
                        cell.Colspan = 2;
                        table.AddCell(cell);

                        cell = new PdfPCell(new Phrase(Departement_candidats_1ereSession.ToString(), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        table.AddCell(cell);

                        cell = new PdfPCell(new Phrase(Departement_reussites_1ereSession.ToString(), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        table.AddCell(cell);

                        if (Departement_candidats_1ereSession == 0)
                        {
                            cell = new PdfPCell(new Phrase("0", font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);
                        }
                        else
                        {
                            if (Departement_reussites_1ereSession == 0)
                            {
                                cell = new PdfPCell(new Phrase("0", font_normal_7));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                table.AddCell(cell);
                            }
                            else
                            {
                                cell = new PdfPCell(new Phrase((Departement_reussites_1ereSession * 1000 * 0.1 / Departement_candidats_1ereSession).ToString("#.##"), font_normal_7));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                table.AddCell(cell);
                            }
                        }

                        cell = new PdfPCell(new Phrase(Departement_candidats_2eme_Session.ToString(), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        table.AddCell(cell);

                        cell = new PdfPCell(new Phrase(Departement_reussites_2eme_Session.ToString(), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        table.AddCell(cell);

                        if (Departement_candidats_2eme_Session == 0)
                        {
                            cell = new PdfPCell(new Phrase("0", font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);
                        }
                        else
                        {

                            if (Departement_reussites_2eme_Session == 0)
                            {
                                cell = new PdfPCell(new Phrase("0", font_normal_7));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                table.AddCell(cell);
                            }
                            else
                            {
                                cell = new PdfPCell(new Phrase((Departement_reussites_2eme_Session * 1000 * 0.1 / Departement_candidats_2eme_Session).ToString("#.##"), font_normal_7));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                table.AddCell(cell);
                            }
                        }

                        cell = new PdfPCell(new Phrase(Departement_reussite.ToString(), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        table.AddCell(cell);

                        if (Departement_candidats_1ereSession == 0)
                        {
                            cell = new PdfPCell(new Phrase("0", font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);
                        }
                        else
                        {
                            if (Departement_reussite == 0)
                            {
                                cell = new PdfPCell(new Phrase("0", font_normal_7));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                table.AddCell(cell);
                            }
                            else
                            {
                                cell = new PdfPCell(new Phrase((Departement_reussite * 1000 * 0.1 / Departement_candidats_1ereSession).ToString("#.##"), font_normal_7));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                table.AddCell(cell);
                            }
                        }

                        cell = new PdfPCell(new Phrase("-", font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        table.AddCell(cell);

                        cell = new PdfPCell(new Phrase("-", font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        table.AddCell(cell);

                        cell = new PdfPCell(new Phrase(Departement_ajournes.ToString(), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        table.AddCell(cell);

                        if (Departement_ajournes == 0)
                        {
                            cell = new PdfPCell(new Phrase("0", font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);
                        }
                        else
                        {
                            cell = new PdfPCell(new Phrase((Departement_ajournes * 1000 * 0.1 / Departement_candidats_1ereSession).ToString("#.##"), font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);
                        }

                        cell = new PdfPCell(new Phrase(Departement_eclusion.ToString(), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        table.AddCell(cell);

                        if (Departement_eclusion == 0)
                        {
                            cell = new PdfPCell(new Phrase("0", font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);
                        }
                        else
                        {
                            cell = new PdfPCell(new Phrase((Departement_eclusion * 1000 * 0.1 / Departement_candidats_1ereSession).ToString("#.##"), font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);
                        }
                    }

                }
                cell = new PdfPCell(new Phrase("TAUX PAR FAC/INSTITUT ", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_MIDDLE;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                cell.Colspan = 2;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(Faculte_candidats_1ereSession.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(Faculte_reussites_1ereSession.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.GRAY;
                table.AddCell(cell);

                if (Faculte_candidats_1ereSession == 0)
                {
                    cell = new PdfPCell(new Phrase("0", font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.GRAY;
                    table.AddCell(cell);
                }
                else
                {
                    if (Faculte_reussites_1ereSession == 0)
                    {
                        cell = new PdfPCell(new Phrase("0", font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.GRAY;
                        table.AddCell(cell);
                    }
                    else
                    {
                        cell = new PdfPCell(new Phrase((Faculte_reussites_1ereSession * 1000 * 0.1 / Faculte_candidats_1ereSession).ToString("#.##"), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.GRAY;
                        table.AddCell(cell);
                    }
                }

                cell = new PdfPCell(new Phrase(Faculte_candidats_2eme_Session.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(Faculte_reussites_2eme_Session.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.GRAY;
                table.AddCell(cell);

                if (Faculte_candidats_2eme_Session == 0)
                {
                    cell = new PdfPCell(new Phrase("0", font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.GRAY;
                    table.AddCell(cell);
                }
                else
                {

                    if (Faculte_reussites_2eme_Session == 0)
                    {
                        cell = new PdfPCell(new Phrase("0", font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.GRAY;
                        table.AddCell(cell);
                    }
                    else
                    {
                        cell = new PdfPCell(new Phrase((Faculte_reussites_2eme_Session * 1000 * 0.1 / Faculte_candidats_2eme_Session).ToString("#.##"), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.GRAY;
                        table.AddCell(cell);
                    }
                }

                cell = new PdfPCell(new Phrase(Faculte_reussite.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.GRAY;
                table.AddCell(cell);

                if (Faculte_candidats_1ereSession == 0)
                {
                    cell = new PdfPCell(new Phrase("0", font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.GRAY;
                    table.AddCell(cell);
                }
                else
                {
                    if (Faculte_reussite == 0)
                    {
                        cell = new PdfPCell(new Phrase("0", font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.GRAY;
                        table.AddCell(cell);
                    }
                    else
                    {
                        cell = new PdfPCell(new Phrase((Faculte_reussite * 1000 * 0.1 / Faculte_candidats_1ereSession).ToString("#.##"), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.GRAY;
                        table.AddCell(cell);
                    }
                }

                cell = new PdfPCell(new Phrase("-", font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("-", font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(Faculte_ajournes.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.GRAY;
                table.AddCell(cell);
                if (Faculte_ajournes == 0)
                {
                    cell = new PdfPCell(new Phrase("0", font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.GRAY;
                    table.AddCell(cell);
                }
                else
                {
                    cell = new PdfPCell(new Phrase((Faculte_ajournes * 1000 * 0.1 / Faculte_candidats_1ereSession).ToString("#.##"), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    cell.BackgroundColor = BaseColor.GRAY;
                    table.AddCell(cell);
                }

                cell = new PdfPCell(new Phrase(Faculte_eclusion.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.GRAY;
                //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                if (Faculte_eclusion == 0)
                {
                    cell = new PdfPCell(new Phrase("0", font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.GRAY;
                    //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    table.AddCell(cell);
                }
                else
                {
                    cell = new PdfPCell(new Phrase((Faculte_eclusion * 1000 * 0.1 / Faculte_candidats_1ereSession).ToString("#.##"), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.GRAY;
                    //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    table.AddCell(cell);
                }

            }
            catch (Exception ex)
            {

            }
            conn.Close();
            doc.Add(table);

            PdfPTable tVisa = new PdfPTable(5);
            float[] colwithv = { 7f, 7f, 7f, 7f, 12f };
            tVisa.SetWidths(colwithv);


            cell = new PdfPCell(new Phrase("", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 5;
            tVisa.AddCell(cell);

            cell = new PdfPCell(new Phrase("", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 5;
            tVisa.AddCell(cell);

            cell = new PdfPCell(new Phrase("", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 5;
            tVisa.AddCell(cell);

            cell = new PdfPCell(new Phrase(" ", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 2;
            tVisa.AddCell(cell);

            cell = new PdfPCell(new Phrase("", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 2;
            tVisa.AddCell(cell);

            string dat = "Fait à " + siege + " ,le " + DateTime.Today.Date.ToShortDateString();
            string nom_rect = "La Direction";

            //cell = new PdfPCell(new Phrase(dat + "\n\n" + nom_rect, font_bold_8));
            cell = new PdfPCell(new Phrase(dat + " ", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            tVisa.AddCell(cell);

            Paragraph pVisa = new Paragraph();
            //parf.IndentationLeft = 240;
            pVisa.Alignment = Element.ALIGN_CENTER;
            pVisa.SpacingAfter = 10;
            pVisa.SpacingBefore = 10;
            pVisa.Add(tVisa);

            doc.Add(pVisa);

            wri.PageEvent = new Foot();
            doc.Close();
            System.Diagnostics.Process.Start(outputFile);
        }
        public void Taux_Reussite_par_Annee(int id_ann, string ane)
        {
            Create_Folder();
            int id_annee = id_ann;
            string annee = ane;

            DateTime dt = DateTime.Now;
            int ann = dt.Year;
            int mois = dt.Month;
            int jour = dt.Day;
            int heure = dt.Hour;
            int min = dt.Minute;
            int sec = dt.Month;
            string date = jour + "-" + mois + "-" + ann + "_à_" + heure + "h" + min + "min" + sec + "sec";

            iTextSharp.text.Document doc = new iTextSharp.text.Document(iTextSharp.text.PageSize.A4, 0, 0, 50, 10);
            string docname = "Stat_type_2_ " + date + ".pdf";
            string outputFile = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.Desktop), @"BMDSys", docname);
            FileStream fs = new FileStream(outputFile, FileMode.Create, FileAccess.Write, FileShare.None);
            PdfWriter wri = PdfWriter.GetInstance(doc, fs);
            doc.Open();

            conn = new MySqlConnection(Authentification.MyString);
            conn.Open();



            string universite = Load_Institution(conn);
            string coordonee = Load_Adress(conn);
            string value = coordonee;
            string[] op = value.Split('-');
            site = op[0];
            siege = op[1];
            telephone = op[2];
            b_postale = op[3];


            PdfPCell cell = new PdfPCell(new Phrase("", font_bold_10));
            PdfPTable table1 = first_header(conn, universite, ref cell, " ");
            doc.Add(table1);



            iTextSharp.text.Paragraph txt_t = new iTextSharp.text.Paragraph(" ", font_bold_7);
            txt_t.Alignment = Element.ALIGN_CENTER;
            txt_t.SpacingBefore = 10;
            txt_t.SpacingAfter = 10;
            doc.Add(txt_t);

            Paragraph parf = new Paragraph();
            string ta = "STATISTIQUES DES REUSSITES\n A.A " + annee;
            parf.Add(new Phrase(ta, font_normal_underlined_8));
            parf.Alignment = Element.ALIGN_CENTER;

            parf.SpacingBefore = 10;
            parf.SpacingAfter = 10;
            doc.Add(parf);



            //CORPS DU RAPPORT 
            PdfPTable table = new PdfPTable(16);
            table.HorizontalAlignment = Element.ALIGN_CENTER;
            float[] colwiths = { 25f, 110f, 23f, 23f, 23f, 23f, 23f, 23f, 23f, 23f, 23f, 23f, 23f, 23f, 23f, 23f };
            table.SetWidths(colwiths);//appliquer ces dimenstions a l atable


            cell = new PdfPCell(new Phrase(" ", font_normal_7));
            cell.Colspan = 2;
            cell.Rowspan = 2;
            cell.BorderWidth = 0;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Sessions", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            cell.Colspan = 8;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Effectif des crédits", font_bold_7));
            cell.Colspan = 2;
            cell.Rowspan = 2;
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Ajournement et assimilés", font_bold_7));
            cell.Colspan = 2;
            cell.Rowspan = 2;
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Exclusion", font_bold_7));
            cell.Colspan = 2;
            cell.Rowspan = 2;
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("1ère Session", font_bold_7));
            cell.Colspan = 3;
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("2ème Session", font_bold_7));
            cell.Colspan = 3;
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Total réussite", font_bold_7));
            cell.Rotation = 90;
            cell.Rowspan = 2;
            cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("% réussite", font_bold_7));
            cell.Rotation = 90;
            cell.Rowspan = 2;
            cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase(" ", font_normal_7));
            cell.BorderWidth = 0;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("DEPARTEMENT/FILIERE", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Candidats", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            cell.Rotation = 90;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Réussite", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            cell.Rotation = 90;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Taux", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            cell.Rotation = 90;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Candidats", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            cell.Rotation = 90;
            table.AddCell(cell);


            cell = new PdfPCell(new Phrase("Réussite", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            cell.Rotation = 90;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Taux", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            cell.Rotation = 90;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Validés", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            cell.Rotation = 90;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Non validés", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            cell.Rotation = 90;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Effectif", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            cell.Rotation = 90;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Taux", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            cell.Rotation = 90;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Effectif", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            cell.Rotation = 90;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Taux", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            cell.Rotation = 90;
            table.AddCell(cell);



            ///-----------------------------FIN ENTETE------------------------------------------------------------//


            string[] Faculte_ID, Faculte_Nom, Departement_ID, Departement_Nom, Classe_ID, Classe_Nom, Etudiant_ID;
            int nbre_dpt = 0, nbre_faculte = 0, nbre_cls = 0;

            int Annee_candidats_1ereSession = 0, Faculte_candidats_1ereSession = 0, Departement_candidats_1ereSession = 0, Classe_candidats_1ereSession = 0;
            int Annee_reussites_1ereSession = 0, Faculte_reussites_1ereSession = 0, Departement_reussites_1ereSession = 0, Classe_reussites_1ereSession = 0;

            int Annee_candidats_2eme_Session = 0, Faculte_candidats_2eme_Session = 0, Departement_candidats_2eme_Session = 0, Classe_candidats_2eme_Session = 0;
            int Annee_reussites_2eme_Session = 0, Faculte_reussites_2eme_Session = 0, Departement_reussites_2eme_Session = 0, Classe_reussites_2eme_Session = 0;

            int Annee_reussite = 0, Faculte_reussite = 0, Departement_reussite = 0, Classe_reussite = 0;

            int Annee_ajournes = 0, Faculte_ajournes = 0, Departement_ajournes = 0, Classe_ajournes = 0;
            int Annee_eclusion = 0, Faculte_eclusion = 0, Departement_eclusion = 0, Classe_eclusion = 0;

            try
            {

                string sq4 = "SELECT COUNT(DISTINCT id_classe) FROM classe_par_departement  WHERE id_annee=@id_annee";
                MySqlCommand cmd4 = new MySqlCommand(sq4, conn);
                cmd4.Parameters.AddWithValue("@id_annee", id_annee);
                nbre_cls = Convert.ToInt32(cmd4.ExecuteScalar());

                Classe_ID = new string[nbre_cls];
                Classe_Nom = new string[nbre_cls];


                string sq5 = "SELECT DISTINCT classe_par_departement.id_classe, classe.classe" +
                    " FROM classe INNER JOIN classe_par_departement ON classe.id_classe = classe_par_departement.id_classe" +
                    " WHERE classe_par_departement.id_annee=@id_annee";
                MySqlCommand cmd5 = new MySqlCommand(sq5, conn);
                cmd5.Parameters.AddWithValue("@id_annee", id_annee);
                MySqlDataReader dr5 = cmd5.ExecuteReader();
                int na = 0;
                while (dr5.Read())
                {
                    Classe_ID[na] = string.Format("{0}", dr5.GetInt32(0).ToString());
                    Classe_Nom[na] = string.Format("{0}", dr5.GetString(1));
                    na++;
                }
                dr5.Close();

                for (int cls = 0; cls < nbre_cls; cls++)
                {
                    Departement_ajournes = 0;
                    Departement_eclusion = 0;
                    Departement_candidats_1ereSession = 0;
                    Departement_candidats_2eme_Session = 0;
                    Departement_reussites_1ereSession = 0;
                    Departement_reussites_2eme_Session = 0;
                    Departement_reussite = 0;

                    string sql0 = "SELECT COUNT(DISTINCT id_departement) FROM classe_par_departement WHERE id_classe=@id_classe AND id_annee=@id_annee";
                    MySqlCommand cmd0 = new MySqlCommand(sql0, conn);
                    cmd0.Parameters.AddWithValue("@id_classe", Convert.ToInt32(Classe_ID[cls]));
                    cmd0.Parameters.AddWithValue("@id_annee", id_annee);
                    nbre_dpt = Convert.ToInt32(cmd0.ExecuteScalar());


                    Departement_ID = new string[nbre_dpt];
                    Departement_Nom = new string[nbre_dpt];

                    if (nbre_dpt == 0)
                    {
                        cell = new PdfPCell(new Phrase(" ", font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_LEFT;
                        table.AddCell(cell);

                        cell = new PdfPCell(new Phrase("", font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_LEFT;
                        cell.Colspan = 12;
                        table.AddCell(cell);
                    }
                    else
                    {
                        //cell = new PdfPCell(new Phrase(Departement_Nom[dptmnt], font_normal_7));
                        cell = new PdfPCell(new Phrase(Classe_Nom[cls], font_bold_8));
                        cell.HorizontalAlignment = Element.ALIGN_LEFT;
                        cell.VerticalAlignment = Element.ALIGN_MIDDLE;
                        cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        cell.Rowspan = nbre_dpt;
                        table.AddCell(cell);


                        string sql1 = "SELECT DISTINCT classe_par_departement.id_departement, departement.departement" +
                            " FROM classe_par_departement INNER JOIN departement ON classe_par_departement.id_departement = departement.id_departement" +
                            " WHERE classe_par_departement.id_classe=@id_classe AND id_annee=@id_annee";
                        MySqlCommand cmd1 = new MySqlCommand(sql1, conn);
                        cmd1.Parameters.AddWithValue("@id_classe", Convert.ToInt32(Classe_ID[cls]));
                        cmd1.Parameters.AddWithValue("@id_annee", id_annee);
                        MySqlDataReader dr1 = cmd1.ExecuteReader();
                        int j = 0;
                        while (dr1.Read())
                        {
                            Departement_ID[j] = string.Format("{0}", dr1.GetInt32(0).ToString());
                            Departement_Nom[j] = string.Format("{0}", dr1.GetString(1));
                            j++;
                        }
                        dr1.Close();
                        for (int dpt = 0; dpt < nbre_dpt; dpt++)
                        {
                            Classe_ajournes = 0;
                            Classe_eclusion = 0;
                            Classe_candidats_1ereSession = 0;
                            Classe_candidats_2eme_Session = 0;
                            Classe_reussites_1ereSession = 0;
                            Classe_reussites_2eme_Session = 0;
                            Classe_reussite = 0;

                            //cell = new PdfPCell(new Phrase(Classe_Nom[classe], font_normal_7));
                            cell = new PdfPCell(new Phrase(Departement_Nom[dpt], font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_LEFT;
                            table.AddCell(cell);

                            string sq6 = "SELECT COUNT(DISTINCT id_etudiant) FROM deliberation WHERE id_departement=@id_departement AND id_classe=@id_classe AND id_session=@id_session AND id_annee=@id_annee";
                            MySqlCommand cmd6 = new MySqlCommand(sq6, conn);
                            cmd6.Parameters.AddWithValue("@id_annee", id_annee);
                            cmd6.Parameters.AddWithValue("@id_classe", Convert.ToInt32(Classe_ID[cls]));
                            cmd6.Parameters.AddWithValue("@id_departement", Convert.ToInt32(Departement_ID[dpt]));
                            cmd6.Parameters.AddWithValue("@id_session", 1);

                            Classe_candidats_1ereSession += Convert.ToInt32(cmd6.ExecuteScalar());
                            Departement_candidats_1ereSession += Classe_candidats_1ereSession;
                            Faculte_candidats_1ereSession += Classe_candidats_1ereSession;

                            string sq8 = "SELECT COUNT(DISTINCT deliberation.id_etudiant)" +
                                    " FROM (deliberation INNER JOIN deliberation_condition ON deliberation.id_decision = deliberation_condition.id_decision) INNER JOIN deliberation_finalite ON deliberation_condition.id_finalite = deliberation_finalite.id_finalite" +
                                    " WHERE deliberation.id_annee=@id_annee AND  deliberation.id_departement=@id_departement AND deliberation.id_classe=@id_classe AND deliberation.id_session=@id_session AND deliberation_finalite.droit_avancement=@droit_avancement";
                            MySqlCommand cmd8 = new MySqlCommand(sq8, conn);
                            cmd8.Parameters.AddWithValue("@id_departement", Convert.ToInt32(Departement_ID[dpt]));
                            cmd8.Parameters.AddWithValue("@id_classe", Convert.ToInt32(Classe_ID[cls]));
                            cmd8.Parameters.AddWithValue("@id_annee", id_annee);
                            cmd8.Parameters.AddWithValue("@id_session", 1);
                            cmd8.Parameters.AddWithValue("@droit_avancement", "Oui");

                            Classe_reussites_1ereSession = Convert.ToInt32(cmd8.ExecuteScalar());
                            Departement_reussites_1ereSession += Classe_reussites_1ereSession;
                            Faculte_reussites_1ereSession += Classe_reussites_1ereSession;

                            Classe_reussite += Classe_reussites_1ereSession;
                            Departement_reussite += Classe_reussites_1ereSession;
                            Faculte_reussite += Classe_reussites_1ereSession;

                            string sq9 = "SELECT COUNT(DISTINCT id_etudiant) FROM deliberation WHERE id_departement=@id_departement AND id_classe=@id_classe AND id_session=@id_session AND id_annee=@id_annee";
                            MySqlCommand cmd9 = new MySqlCommand(sq9, conn);
                            cmd9.Parameters.AddWithValue("@id_departement", Convert.ToInt32(Departement_ID[dpt]));
                            cmd9.Parameters.AddWithValue("@id_classe", Convert.ToInt32(Classe_ID[cls]));
                            cmd9.Parameters.AddWithValue("@id_annee", id_annee);
                            cmd9.Parameters.AddWithValue("@id_session", 2);

                            Classe_candidats_2eme_Session = Convert.ToInt32(cmd9.ExecuteScalar());
                            Departement_candidats_2eme_Session += Classe_candidats_2eme_Session;
                            Faculte_candidats_2eme_Session += Classe_candidats_2eme_Session;


                            string sq10 = "SELECT COUNT(DISTINCT deliberation.id_etudiant)" +
                                " FROM (deliberation INNER JOIN deliberation_condition ON deliberation.id_decision = deliberation_condition.id_decision) INNER JOIN deliberation_finalite ON deliberation_condition.id_finalite = deliberation_finalite.id_finalite" +
                                " WHERE deliberation.id_annee=@id_annee AND  deliberation.id_departement=@id_departement AND deliberation.id_classe=@id_classe AND deliberation.id_session=@id_session AND deliberation_finalite.droit_avancement=@droit_avancement";
                            MySqlCommand cmd10 = new MySqlCommand(sq10, conn);
                            cmd10.Parameters.AddWithValue("@id_departement", Convert.ToInt32(Departement_ID[dpt]));
                            cmd10.Parameters.AddWithValue("@id_classe", Convert.ToInt32(Classe_ID[cls]));
                            cmd10.Parameters.AddWithValue("@id_annee", id_annee);
                            cmd10.Parameters.AddWithValue("@id_session", 2);
                            cmd10.Parameters.AddWithValue("@droit_avancement", "Oui");

                            Classe_reussites_2eme_Session = Convert.ToInt32(cmd10.ExecuteScalar());
                            Departement_reussites_2eme_Session += Classe_reussites_2eme_Session;// Etudiant reussis en 1ere session
                            Faculte_reussites_2eme_Session += Classe_reussites_2eme_Session;

                            Classe_reussite += Classe_reussites_2eme_Session;
                            Departement_reussite += Classe_reussites_2eme_Session;
                            Faculte_reussite += Classe_reussites_2eme_Session;


                            string sq11 = "SELECT COUNT(DISTINCT deliberation.id_etudiant)" +
                                " FROM (deliberation INNER JOIN deliberation_condition ON deliberation.id_decision = deliberation_condition.id_decision) INNER JOIN deliberation_finalite ON deliberation_condition.id_finalite = deliberation_finalite.id_finalite" +
                                " WHERE deliberation.id_annee=@id_annee  AND deliberation.id_departement=@id_departement AND deliberation.id_classe=@id_classe AND deliberation_finalite.id_finalite=@id_finalite";
                            MySqlCommand cmd11 = new MySqlCommand(sq11, conn);
                            cmd11.Parameters.AddWithValue("@id_departement", Convert.ToInt32(Departement_ID[dpt]));
                            cmd11.Parameters.AddWithValue("@id_classe", Convert.ToInt32(Classe_ID[cls]));
                            cmd11.Parameters.AddWithValue("@id_annee", id_annee);
                            cmd11.Parameters.AddWithValue("@id_finalite", 3);
                            Classe_ajournes = Convert.ToInt32(cmd11.ExecuteScalar());

                            Departement_ajournes += Classe_ajournes;
                            Faculte_ajournes += Classe_ajournes;


                            string sq12 = "SELECT COUNT(DISTINCT deliberation.id_etudiant)" +
                                " FROM (deliberation INNER JOIN deliberation_condition ON deliberation.id_decision = deliberation_condition.id_decision) INNER JOIN deliberation_finalite ON deliberation_condition.id_finalite = deliberation_finalite.id_finalite" +
                                " WHERE deliberation.id_annee=@id_annee AND deliberation.id_departement=@id_departement AND deliberation.id_classe=@id_classe AND deliberation_finalite.id_finalite>@id_finalite";
                            MySqlCommand cmd12 = new MySqlCommand(sq12, conn);
                            cmd12.Parameters.AddWithValue("@id_departement", Convert.ToInt32(Departement_ID[dpt]));
                            cmd12.Parameters.AddWithValue("@id_classe", Convert.ToInt32(Classe_ID[cls]));
                            cmd12.Parameters.AddWithValue("@id_annee", id_annee);
                            cmd12.Parameters.AddWithValue("@id_finalite", 3);
                            Classe_eclusion = Convert.ToInt32(cmd12.ExecuteScalar());

                            Departement_eclusion += Classe_eclusion;
                            Faculte_eclusion += Classe_eclusion;


                            cell = new PdfPCell(new Phrase(Classe_candidats_1ereSession.ToString(), font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            table.AddCell(cell);

                            cell = new PdfPCell(new Phrase(Classe_reussites_1ereSession.ToString(), font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);

                            if (Classe_candidats_1ereSession == 0)
                            {
                                cell = new PdfPCell(new Phrase("0", font_normal_7));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                table.AddCell(cell);
                            }
                            else
                            {
                                if (Classe_reussites_1ereSession == 0)
                                {
                                    cell = new PdfPCell(new Phrase("0", font_normal_7));
                                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                    //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                    table.AddCell(cell);
                                }
                                else
                                {
                                    cell = new PdfPCell(new Phrase((Classe_reussites_1ereSession * 1000 * 0.1 / Classe_candidats_1ereSession).ToString("#.##"), font_normal_7));
                                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                    //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                    table.AddCell(cell);
                                }
                            }

                            cell = new PdfPCell(new Phrase(Classe_candidats_2eme_Session.ToString(), font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);

                            cell = new PdfPCell(new Phrase(Classe_reussites_2eme_Session.ToString(), font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);

                            if (Classe_candidats_2eme_Session == 0)
                            {
                                cell = new PdfPCell(new Phrase("0", font_normal_7));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                table.AddCell(cell);
                            }
                            else
                            {
                                if (Classe_reussites_2eme_Session == 0)
                                {
                                    cell = new PdfPCell(new Phrase("0", font_normal_7));
                                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                    //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                    table.AddCell(cell);
                                }
                                else
                                {
                                    cell = new PdfPCell(new Phrase((Classe_reussites_2eme_Session * 1000 * 0.1 / Classe_candidats_2eme_Session).ToString("#.##"), font_normal_7));
                                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                    //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                    table.AddCell(cell);
                                }

                            }

                            cell = new PdfPCell(new Phrase(Classe_reussite.ToString(), font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);

                            if (Classe_candidats_1ereSession == 0)
                            {
                                cell = new PdfPCell(new Phrase("0", font_normal_7));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                table.AddCell(cell);
                            }
                            else
                            {
                                if (Classe_reussite == 0)
                                {
                                    cell = new PdfPCell(new Phrase("0", font_normal_7));
                                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                    table.AddCell(cell);
                                }
                                else
                                {
                                    cell = new PdfPCell(new Phrase((Classe_reussite * 1000 * 0.1 / Classe_candidats_1ereSession).ToString("#.##"), font_normal_7));
                                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                    table.AddCell(cell);
                                }
                            }

                            cell = new PdfPCell(new Phrase("-", font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            table.AddCell(cell);

                            cell = new PdfPCell(new Phrase("-", font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            table.AddCell(cell);


                            cell = new PdfPCell(new Phrase(Classe_ajournes.ToString(), font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);

                            if (Classe_ajournes == 0)
                            {
                                cell = new PdfPCell(new Phrase("0", font_normal_7));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                table.AddCell(cell);
                            }
                            else
                            {
                                cell = new PdfPCell(new Phrase((Classe_ajournes * 1000 * 0.1 / Classe_candidats_1ereSession).ToString("#.##"), font_normal_7));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                table.AddCell(cell);
                            }

                            cell = new PdfPCell(new Phrase(Classe_eclusion.ToString(), font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);

                            if (Classe_eclusion == 0)
                            {
                                cell = new PdfPCell(new Phrase("0", font_normal_7));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                table.AddCell(cell);
                            }
                            else
                            {
                                cell = new PdfPCell(new Phrase((Classe_eclusion * 1000 * 0.1 / Classe_candidats_1ereSession).ToString("#.##"), font_normal_7));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                table.AddCell(cell);
                            }
                        }

                        cell = new PdfPCell(new Phrase("Taux global des reussites pour les " + Classe_Nom[cls], font_bold_7));
                        cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                        //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        cell.Colspan = 2;
                        table.AddCell(cell);

                        cell = new PdfPCell(new Phrase(Departement_candidats_1ereSession.ToString(), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        table.AddCell(cell);

                        cell = new PdfPCell(new Phrase(Departement_reussites_1ereSession.ToString(), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        table.AddCell(cell);

                        if (Departement_candidats_1ereSession == 0)
                        {
                            cell = new PdfPCell(new Phrase("0", font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);
                        }
                        else
                        {
                            if (Departement_reussites_1ereSession == 0)
                            {
                                cell = new PdfPCell(new Phrase("0", font_normal_7));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                table.AddCell(cell);
                            }
                            else
                            {
                                cell = new PdfPCell(new Phrase((Departement_reussites_1ereSession * 1000 * 0.1 / Departement_candidats_1ereSession).ToString("#.##"), font_normal_7));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                table.AddCell(cell);
                            }
                        }

                        cell = new PdfPCell(new Phrase(Departement_candidats_2eme_Session.ToString(), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        table.AddCell(cell);

                        cell = new PdfPCell(new Phrase(Departement_reussites_2eme_Session.ToString(), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        table.AddCell(cell);

                        if (Departement_candidats_2eme_Session == 0)
                        {
                            cell = new PdfPCell(new Phrase("0", font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);
                        }
                        else
                        {

                            if (Departement_reussites_2eme_Session == 0)
                            {
                                cell = new PdfPCell(new Phrase("0", font_normal_7));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                table.AddCell(cell);
                            }
                            else
                            {
                                cell = new PdfPCell(new Phrase((Departement_reussites_2eme_Session * 1000 * 0.1 / Departement_candidats_2eme_Session).ToString("#.##"), font_normal_7));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                table.AddCell(cell);
                            }
                        }

                        cell = new PdfPCell(new Phrase(Departement_reussite.ToString(), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        table.AddCell(cell);

                        if (Departement_candidats_1ereSession == 0)
                        {
                            cell = new PdfPCell(new Phrase("0", font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);
                        }
                        else
                        {
                            if (Departement_reussite == 0)
                            {
                                cell = new PdfPCell(new Phrase("0", font_normal_7));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                table.AddCell(cell);
                            }
                            else
                            {
                                cell = new PdfPCell(new Phrase((Departement_reussite * 1000 * 0.1 / Departement_candidats_1ereSession).ToString("#.##"), font_normal_7));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                table.AddCell(cell);
                            }
                        }

                        cell = new PdfPCell(new Phrase("-", font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        table.AddCell(cell);

                        cell = new PdfPCell(new Phrase("-", font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        table.AddCell(cell);

                        cell = new PdfPCell(new Phrase(Departement_ajournes.ToString(), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        table.AddCell(cell);

                        if (Departement_ajournes == 0)
                        {
                            cell = new PdfPCell(new Phrase("0", font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);
                        }
                        else
                        {
                            cell = new PdfPCell(new Phrase((Departement_ajournes * 1000 * 0.1 / Departement_candidats_1ereSession).ToString("#.##"), font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);
                        }

                        cell = new PdfPCell(new Phrase(Departement_eclusion.ToString(), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        table.AddCell(cell);

                        if (Departement_eclusion == 0)
                        {
                            cell = new PdfPCell(new Phrase("0", font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);
                        }
                        else
                        {
                            cell = new PdfPCell(new Phrase((Departement_eclusion * 1000 * 0.1 / Departement_candidats_1ereSession).ToString("#.##"), font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);
                        }
                    }

                }
            }
            catch (Exception ex)
            {

            }
            conn.Close();
            doc.Add(table);

            PdfPTable tVisa = new PdfPTable(5);
            float[] colwithv = { 7f, 7f, 7f, 7f, 12f };
            tVisa.SetWidths(colwithv);


            cell = new PdfPCell(new Phrase("", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 5;
            tVisa.AddCell(cell);

            cell = new PdfPCell(new Phrase("", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 5;
            tVisa.AddCell(cell);

            cell = new PdfPCell(new Phrase("", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 5;
            tVisa.AddCell(cell);

            cell = new PdfPCell(new Phrase(" ", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 2;
            tVisa.AddCell(cell);

            cell = new PdfPCell(new Phrase("", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 2;
            tVisa.AddCell(cell);

            string dat = "Fait à " + siege + " ,le " + DateTime.Today.Date.ToShortDateString();
            string nom_rect = "La Direction";

            //cell = new PdfPCell(new Phrase(dat + "\n\n" + nom_rect, font_bold_8));
            cell = new PdfPCell(new Phrase(dat + " ", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            tVisa.AddCell(cell);

            Paragraph pVisa = new Paragraph();
            //parf.IndentationLeft = 240;
            pVisa.Alignment = Element.ALIGN_CENTER;
            pVisa.SpacingAfter = 10;
            pVisa.SpacingBefore = 10;
            pVisa.Add(tVisa);

            doc.Add(pVisa);

            wri.PageEvent = new Foot();
            doc.Close();
            System.Diagnostics.Process.Start(outputFile);
        }
        //===================HORAIRES, PRESTATIONS ET ETATS D'AVANCEMENT======================================//
        public void prestations_history(int id_a, string ann, int id_f, string nom_f, int has_dep, int iddep, string dep, int idcl, string cla, int idcours, string course)
        {
            int id_annee = id_a;
            int id_faculte = id_f;
            int id_departement = iddep;
            int id_classe = idcl;
            int id_cours = idcours;
            int has_depaartement = has_dep;

            string annee = ann;
            string faculte = nom_f;
            string departement = dep;
            string classe = cla;
            string cours = course;

            Create_Folder();
            DateTime dt = DateTime.Now;
            int year = dt.Year;
            int mois = dt.Month;
            int jour = dt.Day;
            int heure = dt.Hour;
            int mn = dt.Minute;
            int sec = dt.Month;
            string date = jour + "-" + mois + "-" + year + "_" + heure + "-" + mn + "-" + sec;



            conn = new MySqlConnection(Authentification.MyString);
            conn.Open();

            iTextSharp.text.Document doc = new iTextSharp.text.Document(iTextSharp.text.PageSize.A4, 0, 0, 50, 20);
            string docname = "HP_" + date + ".pdf";
            string outputFile = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.Desktop), @"BMDSys", docname);
            FileStream fs = new FileStream(outputFile, FileMode.Create, FileAccess.Write, FileShare.None);
            PdfWriter wri = PdfWriter.GetInstance(doc, fs);
            doc.Open();

            string universite = Load_Institution(conn);
            string coordonee = Load_Adress(conn);
            string valuep = coordonee;
            string[] opp = valuep.Split('-');
            site = opp[0];
            siege = opp[1];
            telephone = opp[2];
            b_postale = opp[3];


            PdfPCell cell = new PdfPCell(new Phrase("", font_bold_10));
            PdfPTable table1 = first_header(conn, universite, ref cell, faculte);
            doc.Add(table1);




            iTextSharp.text.Paragraph txt_t = new iTextSharp.text.Paragraph(" ", font_normal_8);
            txt_t.Alignment = Element.ALIGN_CENTER;
            txt_t.SpacingBefore = 10;
            txt_t.SpacingAfter = 10;
            doc.Add(txt_t);


            string institution = "", type_fac_or_institut = "", enseignant = "", vh = "";

            string req = "SELECT  nom_institution FROM institution";
            MySqlCommand cmd = new MySqlCommand(req, conn);
            MySqlDataReader dr = cmd.ExecuteReader();
            while (dr.Read())
            {
                institution = dr.GetString(0);
            }
            dr.Close();

            string req1 = "SELECT faculte_type.type FROM faculte_type INNER JOIN faculte ON faculte_type.id_type = faculte.id_type WHERE faculte.id_faculte=@id_faculte";
            MySqlCommand cmd1 = new MySqlCommand(req1, conn);
            cmd1.Parameters.AddWithValue("id_faculte", id_faculte);
            MySqlDataReader dr1 = cmd1.ExecuteReader();
            while (dr1.Read())
            {
                type_fac_or_institut = dr1.GetString(0);
            }
            dr1.Close();

            string req2 = "SELECT cours.credits, personnel.nom, personnel.prenom, personnel_diplome.sigle" +
                " FROM personnel_diplome INNER JOIN (personnel INNER JOIN (cours INNER JOIN attribution_cours ON cours.id_cours = attribution_cours.id_cours) ON personnel.id_personnel = attribution_cours.id_personnel) ON personnel_diplome.id_diplome = personnel.id_diplome" +
                " WHERE cours.id_cours=@id_cours";
            MySqlCommand cmd2 = new MySqlCommand(req2, conn);
            cmd2.Parameters.AddWithValue("id_cours", id_cours);
            MySqlDataReader dr2 = cmd2.ExecuteReader();
            while (dr2.Read())
            {
                vh = Convert.ToInt32(dr2.GetInt32(0) * 15).ToString();
                enseignant = dr2.GetString(2) + " " + dr2.GetString(1) + ", " + dr2.GetString(3);
            }
            dr2.Close();



            PdfPTable taba = new PdfPTable(4);//Creer une table de 5 colonnes
            float[] coltaba = { 10f, 12f, 6f, 15f };//parametrer les domensions(largeur) de chacune des collonnes
            taba.SetWidths(coltaba);

            cell = new PdfPCell(new Phrase("Département", font_normal_8));
            cell.HorizontalAlignment = Element.ALIGN_RIGHT;
            cell.BorderWidth = 0;
            taba.AddCell(cell);

            if (has_depaartement == 0 || has_depaartement == 1)
            {
                cell = new PdfPCell(new Phrase(": ", font_normal_8));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);
            }
            else if (has_depaartement > 1)
            {
                cell = new PdfPCell(new Phrase(": " + departement, font_normal_8));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);
            }

            cell = new PdfPCell(new Phrase("Cours", font_normal_8));
            cell.HorizontalAlignment = Element.ALIGN_RIGHT;
            cell.BorderWidth = 0;
            taba.AddCell(cell);

            cell = new PdfPCell(new Phrase(": " + cours, font_normal_8));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidth = 0;
            taba.AddCell(cell);



            cell = new PdfPCell(new Phrase("Filière/Option", font_normal_8));
            cell.HorizontalAlignment = Element.ALIGN_RIGHT;
            cell.BorderWidth = 0;
            taba.AddCell(cell);

            cell = new PdfPCell(new Phrase(": ", font_normal_8));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidth = 0;
            taba.AddCell(cell);

            cell = new PdfPCell(new Phrase("Volume", font_normal_8));
            cell.HorizontalAlignment = Element.ALIGN_RIGHT;
            cell.BorderWidth = 0;
            taba.AddCell(cell);


            cell = new PdfPCell(new Phrase(": " + vh + " H", font_normal_8));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidth = 0;
            taba.AddCell(cell);




            cell = new PdfPCell(new Phrase("Classe", font_normal_8));
            cell.HorizontalAlignment = Element.ALIGN_RIGHT;
            cell.BorderWidth = 0;
            taba.AddCell(cell);


            cell = new PdfPCell(new Phrase(": " + classe, font_normal_8));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidth = 0;
            taba.AddCell(cell);


            cell = new PdfPCell(new Phrase("Enseignant", font_normal_8));
            cell.HorizontalAlignment = Element.ALIGN_RIGHT;
            cell.BorderWidth = 0;
            taba.AddCell(cell);

            cell = new PdfPCell(new Phrase(": " + enseignant, font_normal_8));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidth = 0;
            taba.AddCell(cell);


            cell = new PdfPCell(new Phrase("Année Academique", font_normal_8));
            cell.HorizontalAlignment = Element.ALIGN_RIGHT;
            cell.BorderWidth = 0;
            taba.AddCell(cell);

            cell = new PdfPCell(new Phrase(": " + annee, font_normal_8));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidth = 0;
            taba.AddCell(cell);


            cell = new PdfPCell(new Phrase(" ", font_normal_8));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidth = 0;
            cell.Colspan = 2;
            taba.AddCell(cell);

            doc.Add(taba);



            Paragraph parf = new Paragraph();
            //parf.IndentationLeft = 240;
            string ta = "GRILLE DES PRESTATIONS";
            parf.Add(new Phrase(ta, font_normal_underlined_8));
            parf.Alignment = Element.ALIGN_CENTER;
            parf.SpacingAfter = 15;
            parf.SpacingBefore = 15;
            doc.Add(parf);



            PdfPTable table = new PdfPTable(7);
            table.HorizontalAlignment = Element.ALIGN_CENTER;
            float[] colwiths = { 12f, 8f, 8f, 8f, 8f, 8f, 58f };
            table.SetWidths(colwiths);

            try
            {
                int cumul = 0;
                cell = new PdfPCell(new Phrase("Date", font_normal_8));
                cell.FixedHeight = 16f;
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("Début", font_normal_8));
                cell.FixedHeight = 16f;
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("Fin", font_normal_8));
                cell.FixedHeight = 16f;
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("NbreH", font_normal_8));
                cell.FixedHeight = 16f;
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("Cumul", font_normal_8));
                cell.FixedHeight = 16f;
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("Reste", font_normal_8));
                cell.FixedHeight = 16f;
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("Matière enseignée", font_normal_8));
                cell.FixedHeight = 16f;
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                table.AddCell(cell);

                string[] Prestation_ID, Heure_Debut, Heure_Fin, Nbre_Heure, Cumul_Heure, Heure_Restant;
                DateTime[] Horaire_Date;

                string sq3 = "SELECT COUNT(DISTINCT date) FROM horaire WHERE id_departement=@id_departement AND id_classe=@id_classe AND id_cours=@id_cours";
                MySqlCommand cm3 = new MySqlCommand(sq3, conn);
                cm3.Parameters.AddWithValue("@id_departement", id_departement);
                cm3.Parameters.AddWithValue("@id_classe", id_classe);
                cm3.Parameters.AddWithValue("@id_cours", id_cours);
                int nbre_date = Convert.ToInt32(cm3.ExecuteScalar());
                Horaire_Date = new DateTime[nbre_date];

                string sq4 = "SELECT DISTINCT date FROM horaire WHERE id_departement=@id_departement AND id_classe=@id_classe AND id_cours=@id_cours ORDER BY date";
                MySqlCommand cm4 = new MySqlCommand(sq4, conn);
                cm4.Parameters.AddWithValue("@id_departement", id_departement);
                cm4.Parameters.AddWithValue("@id_classe", id_classe);
                cm4.Parameters.AddWithValue("@id_cours", id_cours);
                MySqlDataReader dr4 = cm4.ExecuteReader();
                int i = 0;
                while (dr4.Read() && i < nbre_date)
                {
                    Horaire_Date[i] = DateTime.Parse(dr4.GetString(0));
                    ////MessageBox.Show(Horaire_Date[i].ToShortDateString());
                    i++;
                }
                dr4.Close();
                Array.Sort(Horaire_Date);

                for (int d = 0; d < nbre_date; d++)
                {
                    string sq5 = "SELECT COUNT(prestation_details.id_prestation_details)" +
                        " FROM (horaire INNER JOIN prestation ON horaire.id_horaire = prestation.id_horaire) INNER JOIN prestation_details ON prestation.id_prestation = prestation_details.id_prestation" +
                        " WHERE horaire.id_departement=@id_departement AND horaire.id_classe=@id_classe AND horaire.id_cours=@id_cours AND horaire.date=@date" +
                        " ORDER BY horaire.date";
                    MySqlCommand cm5 = new MySqlCommand(sq5, conn);
                    cm5.Parameters.AddWithValue("@id_departement", id_departement);
                    cm5.Parameters.AddWithValue("@id_classe", id_classe);
                    cm5.Parameters.AddWithValue("@id_cours", id_cours);
                    cm5.Parameters.AddWithValue("@date", Horaire_Date[d].ToString("dd-MM-yyyy"));
                    ////MessageBox.Show(Horaire_Date[d].ToString("dd-MM-yyyy"));
                    int nbre_prestation_par_date = Convert.ToInt32(cm5.ExecuteScalar());
                    if (nbre_prestation_par_date == 0)
                    {
                    }
                    else
                    {
                        string s5 = "SELECT COUNT(prestation_details.id_prestation_details)" +
                        " FROM (horaire INNER JOIN prestation ON horaire.id_horaire = prestation.id_horaire) INNER JOIN prestation_details ON prestation.id_prestation = prestation_details.id_prestation" +
                        " WHERE horaire.id_departement=@id_departement AND horaire.id_classe=@id_classe AND horaire.id_cours=@id_cours AND horaire.date=@date" +
                        " ORDER BY horaire.date";
                        MySqlCommand c5 = new MySqlCommand(s5, conn);
                        c5.Parameters.AddWithValue("@id_departement", id_departement);
                        c5.Parameters.AddWithValue("@id_classe", id_classe);
                        c5.Parameters.AddWithValue("@id_cours", id_cours);
                        c5.Parameters.AddWithValue("@date", Horaire_Date[d].ToString("dd-MM-yyyy"));
                        int tot_prestation = Convert.ToInt32(c5.ExecuteScalar());

                        cell = new PdfPCell(new Phrase(Horaire_Date[d].ToShortDateString(), font_normal_8));
                        cell.Rowspan = tot_prestation;
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.VerticalAlignment = Element.ALIGN_CENTER;
                        table.AddCell(cell);

                        string sq6 = "SELECT COUNT(DISTINCT prestation_details.id_prestation)" +
                            " FROM horaire INNER JOIN (prestation INNER JOIN prestation_details ON prestation.id_prestation = prestation_details.id_prestation) ON horaire.id_horaire = prestation.id_horaire" +
                            " WHERE horaire.id_departement=@id_departement AND horaire.id_classe=@id_classe AND horaire.id_cours=@id_cours AND horaire.date=@date";
                        MySqlCommand cm6 = new MySqlCommand(sq6, conn);
                        cm6.Parameters.AddWithValue("@id_departement", id_departement);
                        cm6.Parameters.AddWithValue("@id_classe", id_classe);
                        cm6.Parameters.AddWithValue("@id_cours", id_cours);
                        cm6.Parameters.AddWithValue("@date", Horaire_Date[d].ToString("dd-MM-yyyy"));
                        int prestation_par_date = Convert.ToInt32(cm6.ExecuteScalar());

                        ////MessageBox.Show(prestation_par_date+"");
                        Prestation_ID = new string[prestation_par_date];
                        Heure_Debut = new string[prestation_par_date];
                        Heure_Fin = new string[prestation_par_date];
                        Nbre_Heure = new string[prestation_par_date];
                        Cumul_Heure = new string[prestation_par_date];
                        Heure_Restant = new string[prestation_par_date];

                        string sq7 = "SELECT DISTINCT prestation_details.id_prestation" +
                             " FROM horaire INNER JOIN (prestation INNER JOIN prestation_details ON prestation.id_prestation = prestation_details.id_prestation) ON horaire.id_horaire = prestation.id_horaire" +
                             " WHERE horaire.id_departement=@id_departement AND horaire.id_classe=@id_classe AND horaire.id_cours=@id_cours AND horaire.date=@date" +
                             " ORDER BY horaire.periode";
                        MySqlCommand cm7 = new MySqlCommand(sq7, conn);
                        cm7.Parameters.AddWithValue("@id_departement", id_departement);
                        cm7.Parameters.AddWithValue("@id_classe", id_classe);
                        cm7.Parameters.AddWithValue("@id_cours", id_cours);
                        cm7.Parameters.AddWithValue("@date", Horaire_Date[d].ToString("dd-MM-yyyy"));
                        MySqlDataReader dr7 = cm7.ExecuteReader();
                        int j = 0;
                        while (dr7.Read())
                        {
                            Prestation_ID[j] = string.Format("{0}", dr7.GetString(0));
                            j++;
                        }
                        dr7.Close();
                        for (int prst = 0; prst < prestation_par_date; prst++)
                        {
                            string sq9 = "SELECT heureD, heureF FROM prestation WHERE id_prestation=@id_prestation";
                            MySqlCommand cm9 = new MySqlCommand(sq9, conn);
                            cm9.Parameters.AddWithValue("@id_prestation", Convert.ToInt32(Prestation_ID[prst]));
                            MySqlDataReader dr9 = cm9.ExecuteReader();
                            while (dr9.Read())
                            {
                                int debut_heure, debut_min, fin_heure, fin_min, minute_prestees, volume, restant;
                                string heure_preste, heure_cumulee, heure_restant;

                                string value1 = dr9.GetString(0);
                                string[] op = value1.Split('h');
                                debut_heure = Convert.ToInt32(op[0]);
                                debut_min = Convert.ToInt32(op[1]);

                                int min3 = debut_min % 60;
                                string hd = "";
                                if (min3 < 10)
                                {
                                    hd = debut_heure + "h0" + debut_min;
                                }
                                else
                                {
                                    hd = debut_heure + "h" + debut_min;
                                }

                                string value2 = dr9.GetString(1);
                                string[] op1 = value2.Split('h');
                                fin_heure = Convert.ToInt32(op1[0]);
                                fin_min = Convert.ToInt32(op1[1]);

                                int min4 = fin_min % 60;
                                string hf = "";
                                if (min4 < 10)
                                {
                                    hf = fin_heure + "h0" + fin_min;
                                }
                                else
                                {
                                    hf = fin_heure + "h" + fin_min;
                                }

                                Heure_Debut[prst] = string.Format("{0}", hd);
                                Heure_Fin[prst] = string.Format("{0}", hf);

                                string value3 = vh;
                                string[] op2 = value3.Split('h');
                                volume = Convert.ToInt32(op2[0]);
                                minute_prestees = (fin_heure * 60 + fin_min) - (debut_heure * 60 + debut_min);
                                int min = minute_prestees % 60;
                                if (min < 10)
                                {
                                    heure_preste = minute_prestees / 60 + "h0" + min;
                                }
                                else
                                {
                                    heure_preste = minute_prestees / 60 + "h" + minute_prestees % 60;
                                }

                                cumul += minute_prestees;
                                int min1 = cumul % 60;
                                if (min1 < 10)
                                {
                                    heure_cumulee = cumul / 60 + "h0" + min1;
                                }
                                else
                                {
                                    heure_cumulee = cumul / 60 + "h" + cumul % 60;
                                }


                                restant = volume * 60 - cumul;
                                int min2 = restant % 60;
                                if (min2 < 10)
                                {
                                    heure_restant = restant / 60 + "h0" + min2;
                                }
                                else
                                {
                                    heure_restant = restant / 60 + "h" + restant % 60;
                                }
                                Nbre_Heure[prst] = string.Format("{0}", heure_preste);
                                Cumul_Heure[prst] = string.Format("{0}", heure_cumulee);
                                Heure_Restant[prst] = string.Format("{0}", heure_restant);
                            }
                            dr9.Close();
                            string sq8 = "SELECT COUNT(id_prestation_details) FROM prestation_details WHERE id_prestation=@id_prestation";
                            MySqlCommand cm8 = new MySqlCommand(sq8, conn);
                            cm8.Parameters.AddWithValue("@id_prestation", Convert.ToInt32(Prestation_ID[prst]));
                            int nbre_details = Convert.ToInt32(cm8.ExecuteScalar());

                            cell = new PdfPCell(new Phrase(Heure_Debut[prst], font_normal_8));
                            cell.Rowspan = nbre_details;
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.VerticalAlignment = Element.ALIGN_CENTER;
                            table.AddCell(cell);

                            cell = new PdfPCell(new Phrase(Heure_Fin[prst], font_normal_8));
                            cell.Rowspan = nbre_details;
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.VerticalAlignment = Element.ALIGN_CENTER;
                            table.AddCell(cell);

                            cell = new PdfPCell(new Phrase(Nbre_Heure[prst], font_normal_8));
                            cell.Rowspan = nbre_details;
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.VerticalAlignment = Element.ALIGN_CENTER;
                            table.AddCell(cell);

                            cell = new PdfPCell(new Phrase(Cumul_Heure[prst], font_normal_8));
                            cell.Rowspan = nbre_details;
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.VerticalAlignment = Element.ALIGN_CENTER;
                            table.AddCell(cell);

                            cell = new PdfPCell(new Phrase(Heure_Restant[prst], font_normal_8));
                            cell.Rowspan = nbre_details;
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.VerticalAlignment = Element.ALIGN_CENTER;
                            table.AddCell(cell);

                            string sq10 = "SELECT pointAborde FROM prestation_details WHERE id_prestation=@id_prestation";
                            MySqlCommand cm10 = new MySqlCommand(sq10, conn);
                            cm10.Parameters.AddWithValue("@id_prestation", Convert.ToInt32(Prestation_ID[prst]));
                            MySqlDataReader dr10 = cm10.ExecuteReader();
                            int k = 0;
                            while (dr10.Read())
                            {
                                if (k == 0)
                                {
                                    k++;
                                    cell = new PdfPCell(new Phrase(k + ". " + dr10.GetString(0), font_normal_8));
                                    cell.HorizontalAlignment = Element.ALIGN_LEFT;
                                    table.AddCell(cell);
                                }
                                else if (k == (nbre_details - 1))
                                {
                                    k++;
                                    cell = new PdfPCell(new Phrase(k + ". " + dr10.GetString(0), font_normal_8));
                                    cell.HorizontalAlignment = Element.ALIGN_LEFT;
                                    table.AddCell(cell);
                                }
                                else
                                {
                                    k++;
                                    cell = new PdfPCell(new Phrase(k + ". " + dr10.GetString(0), font_normal_8));
                                    cell.HorizontalAlignment = Element.ALIGN_LEFT;
                                    table.AddCell(cell);
                                }
                            }
                            dr10.Close();
                        }
                    }
                }
            }
            catch (Exception ex)
            {
                //MessageBox.Show(ex.Message);
            }
            doc.Add(table);
            PdfPTable tVisa = new PdfPTable(5);//Creer une table de 5 colonnes
            float[] colwithv = { 7f, 7f, 7f, 7f, 12f };//parametrer les domensions(largeur) de chacune des collonnes
            tVisa.SetWidths(colwithv);//appliquer ces dimenstions a l atable


            cell = new PdfPCell(new Phrase("", font_normal_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidthLeft = 0;
            cell.BorderWidthRight = 0;
            cell.BorderWidthTop = 0;
            cell.BorderWidth = 0;
            cell.Colspan = 5;
            tVisa.AddCell(cell);

            cell = new PdfPCell(new Phrase("", font_normal_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidthLeft = 0;
            cell.BorderWidthRight = 0;
            cell.BorderWidthTop = 0;
            cell.BorderWidth = 0;
            cell.Colspan = 5;
            tVisa.AddCell(cell);

            cell = new PdfPCell(new Phrase("", font_normal_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidthLeft = 0;
            cell.BorderWidthRight = 0;
            cell.BorderWidthTop = 0;
            cell.BorderWidth = 0;
            cell.Colspan = 5;
            tVisa.AddCell(cell);

            cell = new PdfPCell(new Phrase("\nVISA DU DECANAT", font_normal_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidthLeft = 0;
            cell.BorderWidthRight = 0;
            cell.BorderWidthTop = 0;
            cell.BorderWidth = 0;
            cell.Colspan = 2;
            tVisa.AddCell(cell);

            cell = new PdfPCell(new Phrase("", font_normal_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidthLeft = 0;
            cell.BorderWidthRight = 0;
            cell.BorderWidthTop = 0;
            cell.BorderWidth = 0;
            cell.Colspan = 2;
            tVisa.AddCell(cell);

            string dat = "Fait à " + siege + " ,le " + DateTime.Today.Date.ToShortDateString();
            string nom_rect = "Délégué(e) de la classe";

            cell = new PdfPCell(new Phrase(dat + "\n\n" + nom_rect, font_normal_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidthLeft = 0;
            cell.BorderWidthRight = 0;
            cell.BorderWidthTop = 0;
            cell.BorderWidth = 0;
            tVisa.AddCell(cell);

            Paragraph pVisa = new Paragraph();
            //parf.IndentationLeft = 240;
            pVisa.Alignment = Element.ALIGN_CENTER;
            //pVisa.SpacingAfter = 6;
            pVisa.SpacingBefore = 8;
            pVisa.Add(tVisa);
            doc.Add(pVisa);

            wri.PageEvent = new Foot();
            doc.Close();
            System.Diagnostics.Process.Start(outputFile);
            conn.Close();
        }
        /*public void horaire_par_departement_historique(int id_an, string ann, int id_fac, string nom_fac, int has_dep, int id_dep, string dep, string date_debut, string date_fin)
        {
            Create_Folder();
            int id_annee = id_an;
            string annee = ann;

            int id_faculte = id_fac;
            string nom_faculte = nom_fac;
            int has_depaartement = has_dep;

            int id_departement = id_dep;
            string departement = dep;

            string date1 = date_debut;
            string date2 = date_fin;


            DateTime dt = DateTime.Now;
            int anne = dt.Year;
            int mois = dt.Month;
            int jr = dt.Day;
            int heure = dt.Hour;
            int min = dt.Minute;
            int sec = dt.Month;
            string date = jr + "-" + mois + "-" + anne + "_à_" + heure + "h" + min + "min" + sec + "sec";

            iTextSharp.text.Document doc = new iTextSharp.text.Document(PageSize.A4, 5, 5, 15, 5);
            string docname = "HOR_" + date + ".pdf";
            string outputFile = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.Desktop), @"BMDSys", docname);
            FileStream fs = new FileStream(outputFile, FileMode.Create, FileAccess.Write, FileShare.None);
            PdfWriter wri = PdfWriter.GetInstance(doc, fs);
            doc.Open();


            iTextSharp.text.pdf.BaseFont bfTimes = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, false);
            iTextSharp.text.pdf.BaseFont bfTimes1 = BaseFont.CreateFont(BaseFont.HELVETICA, BaseFont.CP1252, false);
            iTextSharp.text.pdf.BaseFont bfTimes2 = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, false);

            iTextSharp.text.Font times = new iTextSharp.text.Font(bfTimes, 10, iTextSharp.text.Font.BOLD, iTextSharp.text.BaseColor.BLACK);
            iTextSharp.text.Font for_courses = new iTextSharp.text.Font(bfTimes1, 8, iTextSharp.text.Font.NORMAL, iTextSharp.text.BaseColor.BLACK);
            iTextSharp.text.Font Semestre_font1 = new iTextSharp.text.Font(bfTimes, 8, iTextSharp.text.Font.BOLD, iTextSharp.text.BaseColor.BLUE);
            iTextSharp.text.Font Semestre_font = new iTextSharp.text.Font(bfTimes, 8, iTextSharp.text.Font.BOLD, iTextSharp.text.BaseColor.BLACK);
            iTextSharp.text.Font entete_decision_font = new iTextSharp.text.Font(bfTimes1, 8, iTextSharp.text.Font.BOLD, iTextSharp.text.BaseColor.BLACK);
            iTextSharp.text.Font note_font = new iTextSharp.text.Font(bfTimes2, 7, iTextSharp.text.Font.NORMAL, iTextSharp.text.BaseColor.BLACK);
            iTextSharp.text.Font timesunderlined = new iTextSharp.text.Font(bfTimes, 9, iTextSharp.text.Font.BOLD | iTextSharp.text.Font.UNDERLINE, BaseColor.BLACK);

            conn = new MySqlConnection(Authentification.MyString);
            conn.Open();

            string universite = Load_Institution(conn);

            string coordonee = Load_Adress(conn);
            string value = coordonee;
            string[] op = value.Split('-');
            site = op[0];
            siege = op[1];
            telephone = op[2];
            b_postale = op[3];



            PdfPCell cell = new PdfPCell(new Phrase("", font_bold_10));
            PdfPTable table = first_header(conn, universite, ref cell, nom_faculte);
            doc.Add(table);


            iTextSharp.text.Paragraph txt_t = new iTextSharp.text.Paragraph(" ", Semestre_font);
            txt_t.Alignment = Element.ALIGN_CENTER;
            txt_t.SpacingBefore = 10;
            txt_t.SpacingAfter = 10;
            doc.Add(txt_t);


            PdfPTable taba = new PdfPTable(4);//Creer une table de 5 colonnes
            float[] coltaba = { 10f, 12f, 8f, 12f };//parametrer les domensions(largeur) de chacune des collonnes
            taba.SetWidths(coltaba);

            cell = new PdfPCell(new Phrase("Département", Semestre_font));
            cell.HorizontalAlignment = Element.ALIGN_RIGHT;
            cell.BorderWidth = 0;
            taba.AddCell(cell);

            if (has_depaartement == 0 || has_depaartement == 1)
            {
                cell = new PdfPCell(new Phrase(": ", Semestre_font));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);
            }
            else if (has_depaartement > 1)
            {
                cell = new PdfPCell(new Phrase(": " + departement, Semestre_font));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);
            }



            cell = new PdfPCell(new Phrase(" ", Semestre_font));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidth = 0;
            cell.Colspan = 2;
            taba.AddCell(cell);



            cell = new PdfPCell(new Phrase("Filière/Option ", Semestre_font));
            cell.HorizontalAlignment = Element.ALIGN_RIGHT;
            cell.BorderWidth = 0;
            taba.AddCell(cell);

            cell = new PdfPCell(new Phrase(": ", Semestre_font));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidth = 0;
            taba.AddCell(cell);

            cell = new PdfPCell(new Phrase(" ", Semestre_font));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidth = 0;
            cell.Colspan = 2;
            taba.AddCell(cell);


            cell = new PdfPCell(new Phrase("Année Academique", Semestre_font));
            cell.HorizontalAlignment = Element.ALIGN_RIGHT;
            cell.BorderWidth = 0;
            taba.AddCell(cell);

            cell = new PdfPCell(new Phrase(": " + annee, Semestre_font));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidth = 0;
            taba.AddCell(cell);


            cell = new PdfPCell(new Phrase(" ", Semestre_font));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidth = 0;
            cell.Colspan = 2;
            taba.AddCell(cell);

            doc.Add(taba);



            iTextSharp.text.Paragraph txt_titre = new iTextSharp.text.Paragraph("HORAIRE du " + date1 + "  au  " + date2, timesunderlined);
            txt_titre.Alignment = Element.ALIGN_CENTER;
            txt_titre.SpacingAfter = 15;
            txt_titre.SpacingBefore = 30;
            doc.Add(txt_titre);


            string[] Classe_ID = new string[100];
            string[] Classe_Nom = new string[100];
            int nbre_colonnes = 0;
            string sqlv = "SELECT COUNT( DISTINCT id_classe) FROM classe_par_departement WHERE id_departement=@id_departement AND id_faculte=@id_faculte AND id_annee=@id_annee";
            MySqlCommand cmdv = new MySqlCommand(sqlv, conn);
            cmdv.Parameters.AddWithValue("@id_departement", id_departement);
            cmdv.Parameters.AddWithValue("@id_faculte", id_faculte);
            cmdv.Parameters.AddWithValue("@id_annee", id_annee);
            int nbre_classe = Convert.ToInt32(cmdv.ExecuteScalar());
            Classe_ID = new string[nbre_classe];
            Classe_Nom = new string[nbre_classe];

            nbre_colonnes += nbre_classe + 2;

            PdfPTable tab = new PdfPTable(nbre_colonnes);
            List<float> termsList = new List<float>();
            float[] widths = new float[nbre_colonnes];
            int i = 0;
            for (i = 0; i < nbre_colonnes; i++)
            {
                if (i == 0)
                    termsList.Add(8f);
                else if (i == 1)
                    termsList.Add(5f);
                else
                    termsList.Add(40f);
            }

            float[] terms = termsList.ToArray();
            tab.SetWidths(terms);



            string[] jour = new string[] { "Lundi", "Mardi", "Mercredi", "Jeudi", "Vendredi", "Samedi", "Dimanche" };
            string[] dates = new string[] { horaire_historique.lu, horaire_historique.mar, horaire_historique.mer, horaire_historique.jeu, horaire_historique.ve, horaire_historique.sam, horaire_historique.dim };
            string[] periodes = new string[] { "AM", "PM" };

            try
            {
                cell = new PdfPCell(new Phrase(" "));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.VerticalAlignment = Element.ALIGN_CENTER;
                cell.Colspan = 2;
                cell.BorderWidth = 0;
                tab.AddCell(cell);


                string sqlvv = "SELECT DISTINCT classe_par_departement.id_classe, classe.classe" +
                    " FROM classe_par_departement INNER JOIN classe ON classe_par_departement.id_classe = classe.id_classe" +
                    " WHERE classe_par_departement.id_departement=@id_departement AND classe_par_departement.id_faculte=@id_faculte AND classe_par_departement.id_annee=@id_annee";
                MySqlCommand cmdvv = new MySqlCommand(sqlvv, conn);
                cmdvv.Parameters.AddWithValue("@id_departement", id_departement);
                cmdvv.Parameters.AddWithValue("@id_faculte", id_faculte);
                cmdvv.Parameters.AddWithValue("@id_annee", id_annee);
                MySqlDataReader drvv = cmdvv.ExecuteReader();
                int j = 0;
                while (drvv.Read() && j < nbre_classe)
                {
                    Classe_ID[j] = string.Format("{0}", drvv.GetInt32(0).ToString());
                    Classe_Nom[j] = string.Format("{0}", drvv.GetString(1));
                    j++;
                }
                drvv.Close();

                for (int a = 0; a < nbre_classe; a++)
                {
                    cell = new PdfPCell(new Phrase(Classe_Nom[a], times));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    tab.AddCell(cell);
                }

                for (int jour_date = 0; jour_date < 7; jour_date++)
                {
                    cell = new PdfPCell(new Phrase(jour[jour_date] + "\n" + dates[jour_date], times));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.Rowspan = 2;
                    cell.Rotation = 90;
                    tab.AddCell(cell);
                    for (int perio = 0; perio < 2; perio++)
                    {
                        cell = new PdfPCell(new Phrase(periodes[perio], times));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.Rotation = 90;
                        tab.AddCell(cell);
                        for (int classe = 0; classe < nbre_classe; classe++)
                        {
                            string sql0 = "SELECT COUNT(id_cours) FROM horaire WHERE id_classe=@id_classe AND id_departement=@id_departement AND date=@date AND jour=@jour AND periode=@periode AND id_faculte=@id_faculte AND id_annee=@id_annee";
                            MySqlCommand cmd0 = new MySqlCommand(sql0, conn);
                            cmd0.Parameters.AddWithValue("@id_classe", Convert.ToInt32(Classe_ID[classe]));
                            cmd0.Parameters.AddWithValue("@id_departement", id_departement);
                            cmd0.Parameters.AddWithValue("@id_faculte", id_faculte);
                            cmd0.Parameters.AddWithValue("@id_annee", id_annee);
                            cmd0.Parameters.AddWithValue("@date", dates[jour_date]);
                            cmd0.Parameters.AddWithValue("@jour", jour[jour_date]);
                            cmd0.Parameters.AddWithValue("@periode", periodes[perio]);
                            int hor_exist = Convert.ToInt32(cmd0.ExecuteScalar());
                            if (hor_exist == 0)
                            {
                                cell = new PdfPCell(new Phrase("", for_courses));
                                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                cell.FixedHeight = 35f;
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                tab.AddCell(cell);
                            }
                            else
                            {
                                int id_hora = 0;

                                string sqz = "SELECT id_horaire FROM horaire WHERE id_classe=@id_classe AND id_departement=@id_departement AND date=@date AND jour=@jour AND periode=@periode AND id_faculte=@id_faculte AND id_annee=@id_annee";
                                MySqlCommand cmz = new MySqlCommand(sqz, conn);
                                cmz.Parameters.AddWithValue("@id_classe", Convert.ToInt32(Classe_ID[classe]));
                                cmz.Parameters.AddWithValue("@id_departement", id_departement);
                                cmz.Parameters.AddWithValue("@id_faculte", id_faculte);
                                cmz.Parameters.AddWithValue("@id_annee", id_annee);
                                cmz.Parameters.AddWithValue("@date", dates[jour_date]);
                                cmz.Parameters.AddWithValue("@jour", jour[jour_date]);
                                cmz.Parameters.AddWithValue("@periode", periodes[perio]);
                                MySqlDataReader dmz = cmz.ExecuteReader();
                                while (dmz.Read())
                                {
                                    id_hora = dmz.GetInt32(0);
                                }
                                dmz.Close();

                                string sql1 = "SELECT cours.cours, horaire.id_horaire_type, salle.nom_salle, personnel.prenom, personnel.nom" +
                                    " FROM ((personnel INNER JOIN ((cours INNER JOIN horaire ON cours.id_cours = horaire.id_cours) INNER JOIN attribution_cours ON cours.id_cours = attribution_cours.id_cours) ON personnel.id_personnel = attribution_cours.id_personnel) INNER JOIN salle_occupation ON horaire.id_horaire = salle_occupation.id_horaire) INNER JOIN salle ON salle_occupation.id_salle = salle.id_salle" +
                                    " WHERE horaire.id_horaire=@id_horaire";
                                MySqlCommand cmd1 = new MySqlCommand(sql1, conn);
                                cmd1.Parameters.AddWithValue("@id_horaire", id_hora);
                                MySqlDataReader drm = cmd1.ExecuteReader();
                                while (drm.Read())
                                {
                                    if (drm.GetInt32(1) == 2)
                                    {
                                        cell = new PdfPCell(new Phrase(drm.GetString(0) + "\n" + drm.GetString(2) + "\nEXAMEN", for_courses));
                                        cell.HorizontalAlignment = Element.ALIGN_LEFT;
                                        cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                        tab.AddCell(cell);
                                    }
                                    else
                                    {
                                        cell = new PdfPCell(new Phrase(drm.GetString(0) + "\n" + drm.GetString(2) + "\n" + drm.GetString(3) + " " + drm.GetString(4), for_courses));
                                        cell.HorizontalAlignment = Element.ALIGN_LEFT;
                                        cell.BackgroundColor = BaseColor.CYAN;
                                        tab.AddCell(cell);
                                    }
                                }
                                drm.Close();
                            }

                        }
                    }
                }

            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
            ajouter la table
            doc.Add(tab);


            PdfPTable tVisa = new PdfPTable(5);//Creer une table de 5 colonnes
            float[] colwithv = { 7f, 7f, 7f, 7f, 12f };//parametrer les domensions(largeur) de chacune des collonnes
            tVisa.SetWidths(colwithv);//appliquer ces dimenstions a l atable


            cell = new PdfPCell(new Phrase("", for_courses));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidthLeft = 0;
            cell.BorderWidthRight = 0;
            cell.BorderWidthTop = 0;
            cell.BorderWidth = 0;
            cell.Colspan = 5;
            tVisa.AddCell(cell);

            cell = new PdfPCell(new Phrase("", for_courses));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidthLeft = 0;
            cell.BorderWidthRight = 0;
            cell.BorderWidthTop = 0;
            cell.BorderWidth = 0;
            cell.Colspan = 5;
            tVisa.AddCell(cell);

            cell = new PdfPCell(new Phrase("", for_courses));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidthLeft = 0;
            cell.BorderWidthRight = 0;
            cell.BorderWidthTop = 0;
            cell.BorderWidth = 0;
            cell.Colspan = 5;
            tVisa.AddCell(cell);

            string dat = "Fait à " + siege + " ,le " + DateTime.Today.Date.ToShortDateString();
            cell = new PdfPCell(new Phrase("Fait à " + siege + " ,le " + DateTime.Today.Date.ToShortDateString(), for_courses));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidthLeft = 0;
            cell.BorderWidthRight = 0;
            cell.BorderWidthTop = 0;
            cell.BorderWidth = 0;
            cell.Colspan = 2;
            tVisa.AddCell(cell);

            cell = new PdfPCell(new Phrase("", for_courses));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidthLeft = 0;
            cell.BorderWidthRight = 0;
            cell.BorderWidthTop = 0;
            cell.BorderWidth = 0;
            cell.Colspan = 2;
            tVisa.AddCell(cell);

            cell = new PdfPCell(new Phrase("\nVISA DU DEPARTEMENT", for_courses));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidthLeft = 0;
            cell.BorderWidthRight = 0;
            cell.BorderWidthTop = 0;
            cell.BorderWidth = 0;
            tVisa.AddCell(cell);

            Paragraph pVisa = new Paragraph();
            parf.IndentationLeft = 240;
            pVisa.Alignment = Element.ALIGN_CENTER;
            pVisa.SpacingAfter = 6;
            pVisa.SpacingBefore = 8;
            pVisa.Add(tVisa);

            doc.Add(pVisa);
            wri.PageEvent = new Foot();
            doc.Close();
            AddPageNumber(docname, docname1);
            System.Diagnostics.Process.Start(outputFile);
            conn.Close();

        }*/
        public void Etat_Avancement_Par_Classe(int idan, string an, int idf, string fac, int hasdep, int idp, string depa, int idc, string cla)
        {
            try
            {
                int id_annee = idan;
                int id_faculte = idf;
                int id_departement = idp;
                int id_classe = idc;
                int has_departement = hasdep;

                string annee = an;
                string faculte = fac;
                string departement = depa;
                string classe = cla;


                Create_Folder();
                conn = new MySqlConnection(Authentification.MyString);
                conn.Open();



                DateTime dt = DateTime.Now;
                int year = dt.Year;
                int mois = dt.Month;
                int jour = dt.Day;
                int heure = dt.Hour;
                int min = dt.Minute;
                int sec = dt.Month;
                string date = jour + "-" + mois + "-" + year + "_à_" + heure + "h" + min + "min" + sec + "sec";

                iTextSharp.text.Document doc = new iTextSharp.text.Document(iTextSharp.text.PageSize.A4, 0, 0, 50, 10);
                string docname = "EA_" + date + ".pdf";
                string outputFile = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.Desktop), @"BMDSys", docname);
                FileStream fs = new FileStream(outputFile, FileMode.Create, FileAccess.Write, FileShare.None);
                PdfWriter wri = PdfWriter.GetInstance(doc, fs);
                doc.Open();


                iTextSharp.text.pdf.BaseFont bfTimes = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, false);
                iTextSharp.text.pdf.BaseFont bfTimes1 = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, false);
                iTextSharp.text.pdf.BaseFont bfTimes2 = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, false);

                iTextSharp.text.Font entete = new iTextSharp.text.Font(bfTimes, 8, iTextSharp.text.Font.BOLD, iTextSharp.text.BaseColor.BLACK);
                iTextSharp.text.Font enteteValue = new iTextSharp.text.Font(bfTimes, 8, iTextSharp.text.Font.NORMAL, iTextSharp.text.BaseColor.BLACK);
                iTextSharp.text.Font Font_Normal = new iTextSharp.text.Font(bfTimes, 7, iTextSharp.text.Font.NORMAL, iTextSharp.text.BaseColor.BLACK);
                iTextSharp.text.Font critereEntete = new iTextSharp.text.Font(bfTimes, 9, iTextSharp.text.Font.NORMAL, iTextSharp.text.BaseColor.BLACK);
                iTextSharp.text.Font classeEntete = new iTextSharp.text.Font(bfTimes, 11, iTextSharp.text.Font.BOLD, iTextSharp.text.BaseColor.BLACK);
                iTextSharp.text.Font classeDepartement = new iTextSharp.text.Font(bfTimes, 12, iTextSharp.text.Font.BOLD, iTextSharp.text.BaseColor.BLACK);
                iTextSharp.text.Font entete_decision_font = new iTextSharp.text.Font(bfTimes1, 6, iTextSharp.text.Font.BOLD, iTextSharp.text.BaseColor.BLACK);
                iTextSharp.text.Font note_font = new iTextSharp.text.Font(bfTimes2, 7, iTextSharp.text.Font.NORMAL, iTextSharp.text.BaseColor.DARK_GRAY);
                iTextSharp.text.Font timesunderlined = new iTextSharp.text.Font(bfTimes, 7, iTextSharp.text.Font.BOLD | iTextSharp.text.Font.UNDERLINE, BaseColor.BLACK);



                string coordonee = Load_Adress(conn);
                string valuep = coordonee;
                string[] opp = valuep.Split('-');
                site = opp[0];
                siege = opp[1];
                telephone = opp[2];
                b_postale = opp[3];



                string institution = "", type_fac_or_institut = "", enseignant = "", vh = "";

                string req = "SELECT  nom_institution FROM institution";
                MySqlCommand cmd = new MySqlCommand(req, conn);
                MySqlDataReader dr = cmd.ExecuteReader();
                while (dr.Read())
                {
                    institution = dr.GetString(0);
                }
                dr.Close();


                string universite = Load_Institution(conn);


                PdfPCell cell = new PdfPCell(new Phrase("", font_bold_10));
                PdfPTable table1 = first_header(conn, universite, ref cell, faculte);
                doc.Add(table1);


                iTextSharp.text.Paragraph txt_t = new iTextSharp.text.Paragraph(" ", enteteValue);
                txt_t.Alignment = Element.ALIGN_CENTER;
                txt_t.SpacingBefore = 10;
                txt_t.SpacingAfter = 10;
                doc.Add(txt_t);


                PdfPTable taba = new PdfPTable(4);//Creer une table de 5 colonnes
                float[] coltaba = { 10f, 12f, 14f, 7f };//parametrer les domensions(largeur) de chacune des collonnes
                taba.SetWidths(coltaba);

                cell = new PdfPCell(new Phrase("Département", enteteValue));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);

                if (has_departement == 0 || has_departement == 1)
                {
                    cell = new PdfPCell(new Phrase(": ", enteteValue));
                    cell.HorizontalAlignment = Element.ALIGN_LEFT;
                    cell.BorderWidth = 0;
                    taba.AddCell(cell);
                }
                else if (has_departement > 1)
                {
                    cell = new PdfPCell(new Phrase(": " + departement, enteteValue));
                    cell.HorizontalAlignment = Element.ALIGN_LEFT;
                    cell.BorderWidth = 0;
                    taba.AddCell(cell);
                }

                cell = new PdfPCell(new Phrase("Année Academique", enteteValue));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);

                cell = new PdfPCell(new Phrase(": " + annee, enteteValue));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);



                cell = new PdfPCell(new Phrase("Filière/Option", enteteValue));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);

                cell = new PdfPCell(new Phrase(": ", enteteValue));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);


                cell = new PdfPCell(new Phrase("Classe", enteteValue));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);


                cell = new PdfPCell(new Phrase(": " + classe, enteteValue));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);

                doc.Add(taba);


                Paragraph parf = new Paragraph();
                //parf.IndentationLeft = 240;
                string ta = "ETAT D'AVANCEMENT DES ENSEIGNEMENTS ";
                parf.Add(new Phrase(ta, timesunderlined));
                parf.Alignment = Element.ALIGN_CENTER;
                parf.SpacingAfter = 10;
                parf.SpacingBefore = 10;
                doc.Add(parf);


                PdfPTable table = new PdfPTable(6);
                table.HorizontalAlignment = Element.ALIGN_CENTER;
                float[] colwiths = { 1f, 12f, 3f, 10f, 3f, 3f };
                table.SetWidths(colwiths);


                cell = new PdfPCell(new Phrase("", critereEntete));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthTop = 0;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("COURS ", critereEntete));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("VH ", critereEntete));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("ENSEIGNANT ", critereEntete));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("ETAT ", critereEntete));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("% ", critereEntete));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                table.AddCell(cell);


                string[] Cours_ID, Cours_Nom, Cours_VH, Enseignant_Nom;

                string[] Semestre_ID = new string[2] { "1", "2" };
                string[] Semestre_Nom = new string[2] { "1er", "2eme" };

                int nbre_cours;
                int vhClasse, hClasse, vhSemestre, hSemestre;

                hClasse = 0;
                vhClasse = 0;
                for (int sem = 0; sem < 2; sem++)
                {
                    vhSemestre = 0;
                    hSemestre = 0;
                    string sq2 = "SELECT COUNT(DISTINCT id_cours)" +
                        " FROM unite INNER JOIN cours ON unite.id_unite = cours.id_unite" +
                        " WHERE unite.id_annee=@id_annee AND unite.id_faculte=@id_faculte AND unite.id_departement=@id_departement AND unite.id_classe=@id_classe AND unite.id_semestre=@id_semestre";
                    MySqlCommand cmd2 = new MySqlCommand(sq2, conn);
                    cmd2.Parameters.AddWithValue("@id_departement", id_departement);
                    cmd2.Parameters.AddWithValue("@id_classe", id_classe);
                    cmd2.Parameters.AddWithValue("@id_annee", id_annee);
                    cmd2.Parameters.AddWithValue("@id_faculte", id_faculte);
                    cmd2.Parameters.AddWithValue("@id_semestre", Convert.ToInt32(Semestre_ID[sem]));
                    nbre_cours = Convert.ToInt32(cmd2.ExecuteScalar());

                    cell = new PdfPCell(new Phrase(Semestre_Nom[sem] + " Semestre", entete));
                    cell.VerticalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    cell.Rotation = 90;
                    cell.Rowspan = nbre_cours;
                    table.AddCell(cell);


                    Cours_ID = new string[nbre_cours];
                    Cours_Nom = new string[nbre_cours];
                    Cours_VH = new string[nbre_cours];
                    //Enseignant_Nom = new string[nbre_cours];

                    /*string sq3 = "SELECT DISTINCT cours.id_cours, cours.cours, cours.credits, personnel.nom, personnel.prenom, personnel_diplome.sigle" +
                       " FROM personnel_diplome INNER JOIN (personnel INNER JOIN ((unite INNER JOIN cours ON unite.id_unite = cours.id_unite) INNER JOIN attribution_cours ON cours.id_cours = attribution_cours.id_cours) ON personnel.id_personnel = attribution_cours.id_personnel) ON personnel_diplome.id_diplome = personnel.id_diplome" +
                       " WHERE unite.id_annee=@id_annee AND unite.id_faculte=@id_faculte AND unite.id_departement=@id_departement AND unite.id_classe=@id_classe AND unite.id_semestre=@id_semestre" +
                       " ORDER BY cours.cours";*/

                    string sq3 = "SELECT DISTINCT cours.id_cours, cours.cours, cours.credits" +
                        " FROM unite INNER JOIN cours ON unite.id_unite = cours.id_unite" +
                        " WHERE unite.id_annee=@id_annee AND unite.id_faculte=@id_faculte AND unite.id_departement=@id_departement AND unite.id_classe=@id_classe AND unite.id_semestre=@id_semestre" +
                        " ORDER BY cours.cours";
                    MySqlCommand cmd3 = new MySqlCommand(sq3, conn);
                    cmd3.Parameters.AddWithValue("@id_departement", id_departement);
                    cmd3.Parameters.AddWithValue("@id_classe", id_classe);
                    cmd3.Parameters.AddWithValue("@id_annee", id_annee);
                    cmd3.Parameters.AddWithValue("@id_faculte", id_faculte);
                    cmd3.Parameters.AddWithValue("@id_semestre", Convert.ToInt32(Semestre_ID[sem]));
                    MySqlDataReader dr3 = cmd3.ExecuteReader();
                    int i = 0;
                    while (dr3.Read())
                    {
                        Cours_ID[i] = string.Format("{0}", dr3.GetInt32(0).ToString());
                        Cours_Nom[i] = string.Format("{0}", dr3.GetString(1));
                        Cours_VH[i] = string.Format("{0}", (dr3.GetInt32(2) * 15).ToString());
                        //Enseignant_Nom[i] = string.Format("{0}", dr3.GetString(3) + " " + dr3.GetString(4) + ", " + dr3.GetString(5));
                        i++;
                    }
                    dr3.Close();
                    int hCours;
                    for (int cour = 0; cour < nbre_cours; cour++)
                    {
                        hCours = 0;
                        vhClasse += Convert.ToInt32(Cours_VH[cour]) * 60;
                        vhSemestre += Convert.ToInt32(Cours_VH[cour]) * 60;

                        cell = new PdfPCell(new Phrase(Cours_Nom[cour], entete));
                        cell.HorizontalAlignment = Element.ALIGN_LEFT;
                        table.AddCell(cell);

                        cell = new PdfPCell(new Phrase(Cours_VH[cour] + " h", entete));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        table.AddCell(cell);

                        string personne = "";
                        string sqp = "SELECT personnel.nom, personnel.prenom, personnel_diplome.sigle" +
                            " FROM personnel_diplome INNER JOIN (personnel INNER JOIN attribution_cours ON personnel.id_personnel = attribution_cours.id_personnel) ON personnel_diplome.id_diplome = personnel.id_diplome" +
                            " WHERE attribution_cours.id_cours=@id_cours";
                        MySqlCommand cmdp = new MySqlCommand(sqp, conn);
                        cmdp.Parameters.AddWithValue("@id_cours", Convert.ToInt32(Cours_ID[cour]));
                        MySqlDataReader drp = cmdp.ExecuteReader();
                        while (drp.Read())
                        {
                            personne = drp.GetString(0) + " " + drp.GetString(1) + ", " + drp.GetString(2);
                        }
                        drp.Close();



                        cell = new PdfPCell(new Phrase(personne, entete));
                        cell.HorizontalAlignment = Element.ALIGN_LEFT;
                        table.AddCell(cell);

                        string etat = "";
                        double pourcentage = 0;

                        string sq5 = "SELECT etat FROM attribution_cours WHERE id_cours=@id_cours";
                        MySqlCommand cmd5 = new MySqlCommand(sq5, conn);
                        cmd5.Parameters.AddWithValue("@id_cours", Convert.ToInt32(Cours_ID[cour]));
                        MySqlDataReader dr5 = cmd5.ExecuteReader();
                        while (dr5.Read())
                        {
                            etat = dr5.GetString(0);
                        }
                        dr5.Close();
                        if (etat == "Cloturee")
                        {
                            hClasse += Convert.ToInt32(Cours_VH[cour]) * 60;
                            hSemestre += Convert.ToInt32(Cours_VH[cour]) * 60;

                            cell = new PdfPCell(new Phrase("Clôturé", entete));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            table.AddCell(cell);

                            cell = new PdfPCell(new Phrase("100 %", entete));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            table.AddCell(cell);
                        }
                        else
                        {
                            string sq4 = "SELECT COUNT(DISTINCT prestation.id_prestation)" +
                                " FROM cours INNER JOIN (horaire INNER JOIN prestation ON horaire.id_horaire = prestation.id_horaire) ON cours.id_cours = horaire.id_cours" +
                                " WHERE cours.id_cours=@id_cours";
                            MySqlCommand cmd4 = new MySqlCommand(sq4, conn);
                            cmd4.Parameters.AddWithValue("@id_cours", Convert.ToInt32(Cours_ID[cour]));
                            int nbre_prst = Convert.ToInt32(cmd4.ExecuteScalar());
                            if (nbre_prst == 0)
                            {
                                cell = new PdfPCell(new Phrase("En attente", entete));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                table.AddCell(cell);

                                cell = new PdfPCell(new Phrase("0 %", entete));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                table.AddCell(cell);
                            }
                            else
                            {
                                int minute, min1, min2, debut_heure, debut_min, fin_heure, fin_min;
                                string sq7 = "SELECT prestation.heureD, prestation.heureF" +
                                    " FROM horaire INNER JOIN prestation ON horaire.id_horaire = prestation.id_horaire" +
                                    "  WHERE horaire.id_cours=@id_cours";
                                MySqlCommand cmd7 = new MySqlCommand(sq7, conn);
                                cmd7.Parameters.AddWithValue("@id_cours", Convert.ToInt32(Cours_ID[cour]));
                                MySqlDataReader dr7 = cmd7.ExecuteReader();
                                while (dr7.Read())
                                {
                                    string value1 = dr7.GetString(0);
                                    string[] op = value1.Split('h');

                                    debut_heure = Convert.ToInt32(op[0]);
                                    debut_min = Convert.ToInt32(op[1]);
                                    min1 = debut_heure * 60 + debut_min;

                                    string value2 = dr7.GetString(1);
                                    string[] op2 = value2.Split('h');
                                    fin_heure = Convert.ToInt32(op2[0]);
                                    fin_min = Convert.ToInt32(op2[1]);
                                    min2 = fin_heure * 60 + fin_min;

                                    minute = min2 - min1;
                                    hCours += minute;
                                    hSemestre += minute;
                                    hClasse += minute;
                                }
                                dr7.Close();
                                ////MessageBox.Show(" minutes cumulee= " + hCours + "" + " VH= " + Cours_VH[cour]);
                                cell = new PdfPCell(new Phrase("Encours", entete));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                table.AddCell(cell);

                                double prcent = hCours * 1000 * 0.1 / (Convert.ToInt32(Cours_VH[cour]) * 60);

                                cell = new PdfPCell(new Phrase(prcent.ToString("#.##") + " %", entete));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                table.AddCell(cell);
                            }
                        }
                    }
                    cell = new PdfPCell(new Phrase("Etat d'avancement global du " + Semestre_Nom[sem] + " Semestre", critereEntete));
                    cell.HorizontalAlignment = Element.ALIGN_LEFT;
                    cell.Colspan = 5;
                    table.AddCell(cell);

                    double prcent_Semestre = hSemestre * 1000 * 0.1 / vhSemestre;
                    cell = new PdfPCell(new Phrase(prcent_Semestre.ToString("#.##") + " %", critereEntete));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);
                }
                cell = new PdfPCell(new Phrase("Etat d'avancement global de la clase", critereEntete));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.Colspan = 5;
                table.AddCell(cell);

                double prcent_classe = hClasse * 1000 * 0.1 / vhClasse;
                cell = new PdfPCell(new Phrase(prcent_classe.ToString("#.##") + " %", critereEntete));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                table.AddCell(cell);


                doc.Add(table);

                PdfPTable tVisa = new PdfPTable(5);//Creer une table de 5 colonnes
                float[] colwithv = { 7f, 7f, 7f, 7f, 12f };//parametrer les domensions(largeur) de chacune des collonnes
                tVisa.SetWidths(colwithv);//appliquer ces dimenstions a l atable


                cell = new PdfPCell(new Phrase("", Font_Normal));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 5;
                tVisa.AddCell(cell);

                cell = new PdfPCell(new Phrase("", Font_Normal));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 5;
                tVisa.AddCell(cell);

                cell = new PdfPCell(new Phrase("", Font_Normal));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 5;
                tVisa.AddCell(cell);

                cell = new PdfPCell(new Phrase("\nVISA DU DECANAT", Font_Normal));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 2;
                tVisa.AddCell(cell);

                cell = new PdfPCell(new Phrase("", Font_Normal));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 2;
                tVisa.AddCell(cell);


                string dat = "Fait à " + siege + " ,le " + DateTime.Today.Date.ToShortDateString();
                string nom_rect = "";

                cell = new PdfPCell(new Phrase(dat + "\n\n" + nom_rect, Font_Normal));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                tVisa.AddCell(cell);

                Paragraph pVisa = new Paragraph();
                //parf.IndentationLeft = 240;
                pVisa.Alignment = Element.ALIGN_CENTER;
                //pVisa.SpacingAfter = 6;
                pVisa.SpacingBefore = 8;
                pVisa.Add(tVisa);

                doc.Add(pVisa);

                wri.PageEvent = new Foot();
                doc.Close();
                System.Diagnostics.Process.Start(outputFile);
                conn.Close();
                //lf.Dispose();
            }
            catch (Exception ex)
            {
                //MessageBox.Show(ex.Message);
            }
        }
        public void Etat_Avancement_par_departement(int idan, string an, int idf, string fac, int hasdep, int idp, string depa)
        {
            try
            {
                int id_annee = idan;
                int id_faculte = idf;
                int id_departement = idp;
                int has_departement = hasdep;

                string annee = an;
                string faculte = fac;
                string departement = depa;

                Create_Folder();
                conn = new MySqlConnection(Authentification.MyString);
                conn.Open();


                DateTime dt = DateTime.Now;
                int year = dt.Year;
                int mois = dt.Month;
                int jour = dt.Day;
                int heure = dt.Hour;
                int min = dt.Minute;
                int sec = dt.Month;
                string date = jour + "-" + mois + "-" + year + "_à_" + heure + "h" + min + "min" + sec + "sec";

                iTextSharp.text.Document doc = new iTextSharp.text.Document(iTextSharp.text.PageSize.A4.Rotate(), 0, 0, 50, 10);
                string docname = "EA_ " + date + ".pdf";
                string outputFile = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.Desktop), @"BMDSys", docname);
                FileStream fs = new FileStream(outputFile, FileMode.Create, FileAccess.Write, FileShare.None);
                PdfWriter wri = PdfWriter.GetInstance(doc, fs);
                doc.Open();


                string coordonee = Load_Adress(conn);
                string value = coordonee;
                string[] op = value.Split('-');
                site = op[0];
                siege = op[1];
                telephone = op[2];
                b_postale = op[3];

                string institution = "", type_fac_or_institut = "", enseignant = "", vh = "";

                string req = "SELECT  nom_institution FROM institution";
                MySqlCommand cmd = new MySqlCommand(req, conn);
                MySqlDataReader dr = cmd.ExecuteReader();
                while (dr.Read())
                {
                    institution = dr.GetString(0);
                }
                dr.Close();

                string req1 = "SELECT faculte_type.type FROM faculte_type INNER JOIN faculte ON faculte_type.id_type = faculte.id_type WHERE faculte.id_faculte=@id_faculte";
                MySqlCommand cd1 = new MySqlCommand(req1, conn);
                cd1.Parameters.AddWithValue("id_faculte", id_faculte);
                MySqlDataReader d1 = cd1.ExecuteReader();
                while (d1.Read())
                {
                    type_fac_or_institut = d1.GetString(0);
                }
                d1.Close();


                string universite = Load_Institution(conn);
                PdfPCell cell = new PdfPCell(new Phrase("", font_normal_10));
                PdfPTable tablex = first_header(conn, universite, ref cell, faculte);
                doc.Add(tablex);



                Paragraph parfx = new Paragraph();
                string tax = " ";
                parfx.Add(new Phrase(tax, font_normal_underlined_9));
                parfx.Alignment = Element.ALIGN_CENTER;
                parfx.SpacingAfter = 10;
                parfx.SpacingBefore = 10;
                doc.Add(parfx);

                PdfPTable table1 = new PdfPTable(2);//Creer une table de 5 colonnes
                float[] colwith1 = { 8f, 30f };//parametrer les domensions(largeur) de chacune des collonnes
                table1.SetWidths(colwith1);//appliquer ces dimenstions a l atable





                cell = new PdfPCell(new Phrase("A.A: ", font_bold_9));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidth = 0;
                table1.AddCell(cell);

                cell = new PdfPCell(new Phrase(annee, font_bold_9));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                table1.AddCell(cell);



                cell = new PdfPCell(new Phrase("Faculte/Institut: ", font_bold_9));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidth = 0;
                table1.AddCell(cell);

                cell = new PdfPCell(new Phrase(faculte, font_bold_9));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                table1.AddCell(cell);


                cell = new PdfPCell(new Phrase("Departement: ", font_bold_9));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidth = 0;
                table1.AddCell(cell);

                if (has_departement == 0 || has_departement == 1)
                {
                    cell = new PdfPCell(new Phrase(" ", font_bold_9));
                    cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                    cell.BorderWidth = 0;
                    table1.AddCell(cell);
                }
                else if (has_departement > 1)
                {
                    cell = new PdfPCell(new Phrase(departement, font_bold_9));
                    cell.HorizontalAlignment = Element.ALIGN_LEFT;
                    cell.BorderWidth = 0;
                    table1.AddCell(cell);
                }
                doc.Add(table1);


                Paragraph parf = new Paragraph();
                //parf.IndentationLeft = 240;
                string ta = "ETAT D’AVANCEMENT DETAILLES DES COURS ";
                parf.Add(new Phrase(ta, font_normal_underlined_10));
                parf.Alignment = Element.ALIGN_CENTER;
                parf.SpacingAfter = 10;
                parf.SpacingBefore = 10;
                doc.Add(parf);


                PdfPTable table = new PdfPTable(19);
                table.HorizontalAlignment = Element.ALIGN_CENTER;
                float[] colwiths = { 3f, 15f, 3f, 4f, 5f, 4f, 5f, 4f, 5f, 4f, 5f, 4f, 5f, 4f, 5f, 4f, 5f, 4f, 5f };
                table.SetWidths(colwiths);

                cell = new PdfPCell(new Phrase("", font_bold_9));
                cell.Colspan = 2;
                cell.Rowspan = 2;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthTop = 0;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("Nbre total de cours ", font_bold_9));
                cell.Rotation = 90;
                cell.Rowspan = 2;
                cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("\n\nNon attribués", font_bold_9));
                cell.Rotation = 90;
                cell.Colspan = 2;
                cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("\n\nAttribués", font_bold_9));
                cell.Rotation = 90;
                cell.Colspan = 2;
                cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("\n\nEn attente\nd'enseignement ", font_bold_9));
                cell.Rotation = 90;
                cell.Colspan = 2;
                cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("\n\nEncours\nd'enseignement ", font_bold_9));
                cell.Rotation = 90;
                cell.Colspan = 2;
                cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("\n\nClôturés", font_bold_9));
                cell.Rotation = 90;
                cell.Colspan = 2;
                cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
                table.AddCell(cell);


                cell = new PdfPCell(new Phrase("\n\nProgrammés\npour évaluation", font_bold_9));
                cell.Rotation = 90;
                cell.Colspan = 2;
                cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("\n\nEvalués", font_bold_9));
                cell.Rotation = 90;
                cell.Colspan = 2;
                cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("\n\nEvalués \navec résultats", font_bold_9));
                cell.Rotation = 90;
                cell.Colspan = 2;
                cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
                table.AddCell(cell);

                for (int ce = 0; ce < 8; ce++)
                {
                    cell = new PdfPCell(new Phrase("Nbre", font_bold_9));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.FixedHeight = 16f;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase("%", font_bold_9));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.FixedHeight = 16f;
                    table.AddCell(cell);
                }
                //Departements
                string[] Classe_ID, Classe_Nom, Cours_ID;
                string[] Semestre_ID = new string[2] { "1", "2" };
                string[] Semestre_Nom = new string[2] { "1er", "2eme" };
                int nbre_departement, nbre_classe, nbre_cours_semestre, nbre_cours_annee = 0;

                string sq2 = "SELECT COUNT(DISTINCT id_classe) FROM classe_par_departement WHERE id_departement=@id_departement AND id_faculte=@id_faculte AND id_annee=@id_annee";
                MySqlCommand cmd2 = new MySqlCommand(sq2, conn);
                cmd2.Parameters.AddWithValue("@id_departement", id_departement);
                cmd2.Parameters.AddWithValue("@id_faculte", id_faculte);
                cmd2.Parameters.AddWithValue("@id_annee", id_annee);
                nbre_classe = Convert.ToInt32(cmd2.ExecuteScalar());

                Classe_ID = new string[nbre_classe];
                Classe_Nom = new string[nbre_classe];

                string sq3 = "SELECT classe_par_departement.id_classe, classe.classe" +
                    " FROM classe INNER JOIN classe_par_departement ON classe.id_classe = classe_par_departement.id_classe" +
                    " WHERE classe_par_departement.id_departement=@id_departement AND classe_par_departement.id_faculte=@id_faculte AND classe_par_departement.id_annee=@id_annee";
                MySqlCommand cmd3 = new MySqlCommand(sq3, conn);
                cmd3.Parameters.AddWithValue("@id_departement", id_departement);
                cmd3.Parameters.AddWithValue("@id_faculte", id_faculte);
                cmd3.Parameters.AddWithValue("@id_annee", id_annee);
                MySqlDataReader dr3 = cmd3.ExecuteReader();
                int i = 0;
                while (dr3.Read())
                {
                    Classe_ID[i] = string.Format("{0}", dr3.GetInt32(0).ToString());
                    Classe_Nom[i] = string.Format("{0}", dr3.GetString(1));
                    i++;
                }
                dr3.Close();

                for (int cla = 0; cla < nbre_classe; cla++)
                {
                    int encours_annee = 0, termine_annee = 0, attente_annee = 0, attribue_annee = 0, non_attribue_annee = 0, programme_annee = 0, examine_annee = 0, resultat_annee = 0;
                    nbre_cours_annee = 0;
                    cell = new PdfPCell(new Phrase(Classe_Nom[cla], font_bold_9));
                    cell.HorizontalAlignment = Element.ALIGN_LEFT;
                    cell.Rowspan = 3;
                    cell.Rotation = 90;
                    table.AddCell(cell);
                    for (int sem = 0; sem < 2; sem++)
                    {
                        cell = new PdfPCell(new Phrase(Semestre_Nom[sem] + " Semestre", font_bold_9));
                        cell.HorizontalAlignment = Element.ALIGN_LEFT;
                        table.AddCell(cell);

                        string sq4 = "SELECT COUNT(cours.id_cours)" +
                        " FROM unite INNER JOIN cours ON unite.id_unite = cours.id_unite" +
                        " WHERE unite.id_annee=@id_annee AND unite.id_faculte=@id_faculte AND unite.id_departement=@id_departement AND unite.id_classe=@id_classe AND unite.id_semestre=@id_semestre";
                        MySqlCommand cmd4 = new MySqlCommand(sq4, conn);
                        cmd4.Parameters.AddWithValue("@id_semestre", Convert.ToInt32(Semestre_ID[sem]));
                        cmd4.Parameters.AddWithValue("@id_classe", Convert.ToInt32(Classe_ID[cla]));
                        cmd4.Parameters.AddWithValue("@id_departement", id_departement);
                        cmd4.Parameters.AddWithValue("@id_faculte", id_faculte);
                        cmd4.Parameters.AddWithValue("@id_annee", id_annee);

                        nbre_cours_semestre = Convert.ToInt32(cmd4.ExecuteScalar());
                        nbre_cours_annee += nbre_cours_semestre;


                        cell = new PdfPCell(new Phrase(nbre_cours_semestre.ToString(), font_bold_9));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        table.AddCell(cell);

                        Cours_ID = new string[nbre_cours_semestre];

                        string sq5 = "SELECT DISTINCT cours.id_cours" +
                        " FROM unite INNER JOIN cours ON unite.id_unite = cours.id_unite" +
                        " WHERE unite.id_annee=@id_annee AND unite.id_faculte=@id_faculte AND unite.id_departement=@id_departement AND unite.id_classe=@id_classe AND unite.id_semestre=@id_semestre";
                        MySqlCommand cmd5 = new MySqlCommand(sq5, conn);
                        cmd5.Parameters.AddWithValue("@id_semestre", Convert.ToInt32(Semestre_ID[sem]));
                        cmd5.Parameters.AddWithValue("@id_classe", Convert.ToInt32(Classe_ID[cla]));
                        cmd5.Parameters.AddWithValue("@id_departement", id_departement);
                        cmd5.Parameters.AddWithValue("@id_annee", id_annee);
                        cmd5.Parameters.AddWithValue("@id_faculte", id_faculte);
                        MySqlDataReader dr5 = cmd5.ExecuteReader();
                        i = 0;
                        while (dr5.Read())
                        {
                            Cours_ID[i] = string.Format("{0}", dr5.GetInt32(0).ToString());
                            i++;
                        }
                        dr5.Close();

                        int encours_semestre = 0, termine_semestre = 0, attente_semestre = 0, attribue_semestre = 0, non_attribue_semestre = 0, programme_semestre = 0, examine_semestre = 0, resultat_semestre = 0;

                        for (int cours = 0; cours < nbre_cours_semestre; cours++)
                        {
                            string sq6 = "SELECT COUNT(*) FROM attribution_cours WHERE id_cours=@id_cours";
                            MySqlCommand cmd6 = new MySqlCommand(sq6, conn);
                            cmd6.Parameters.AddWithValue("@id_cours", Convert.ToInt32(Cours_ID[cours]));
                            int exist = Convert.ToInt32(cmd6.ExecuteScalar());
                            if (exist == 0)
                            {
                                non_attribue_semestre++;
                                non_attribue_annee++;
                            }
                            else
                            {
                                attribue_semestre++;
                                attribue_annee++;

                                string sq12 = "SELECT COUNT(*) FROM horaire WHERE id_cours=@id_cours AND id_horaire_type=@id_type";
                                MySqlCommand cmd12 = new MySqlCommand(sq12, conn);
                                cmd12.Parameters.AddWithValue("@id_cours", Convert.ToInt32(Cours_ID[cours]));
                                cmd12.Parameters.AddWithValue("@id_type", 2);
                                int exist5 = Convert.ToInt32(cmd12.ExecuteScalar());
                                if (exist5 > 0)
                                {
                                    programme_semestre++;
                                    programme_annee++;
                                }

                                string sq7 = "SELECT etat FROM  attribution_cours  WHERE id_cours=@id_cours";
                                MySqlCommand cmd7 = new MySqlCommand(sq7, conn);
                                cmd7.Parameters.AddWithValue("@id_cours", Convert.ToInt32(Cours_ID[cours]));
                                MySqlDataReader dr7 = cmd7.ExecuteReader();
                                string etat_cloture = "";
                                while (dr7.Read())
                                {
                                    etat_cloture = dr7.GetString(0);
                                }
                                dr7.Close();

                                if (etat_cloture == "Cloturee")
                                {
                                    termine_semestre++;
                                    termine_annee++;

                                    string sq10 = "SELECT COUNT(*) FROM etudiant_note WHERE id_cours=@id_cours";
                                    MySqlCommand cmd10 = new MySqlCommand(sq10, conn);
                                    cmd10.Parameters.AddWithValue("@id_cours", Convert.ToInt32(Cours_ID[cours]));
                                    int exist3 = Convert.ToInt32(cmd10.ExecuteScalar());
                                    if (exist3 == 0)
                                    {
                                        string sq11 = "SELECT COUNT(*) FROM horaire INNER JOIN prestation ON horaire.id_horaire = prestation.id_horaire WHERE horaire.id_cours=@id_cours AND horaire.id_horaire_type=@id_type";
                                        MySqlCommand cmd11 = new MySqlCommand(sq11, conn);
                                        cmd11.Parameters.AddWithValue("@id_cours", Convert.ToInt32(Cours_ID[cours]));
                                        cmd11.Parameters.AddWithValue("@id_type", 2);
                                        int exist4 = Convert.ToInt32(cmd11.ExecuteScalar());
                                        if (exist4 > 0)
                                        {
                                            examine_semestre++;
                                            examine_annee++;
                                        }
                                    }
                                    else
                                    {
                                        resultat_semestre++;
                                        resultat_annee++;
                                    }
                                }
                                else
                                {
                                    string sq8 = "SELECT COUNT(*) FROM horaire WHERE horaire.id_cours=@id_cours";
                                    MySqlCommand cmd8 = new MySqlCommand(sq8, conn);
                                    cmd8.Parameters.AddWithValue("@id_cours", Convert.ToInt32(Cours_ID[cours]));
                                    int exist1 = Convert.ToInt32(cmd8.ExecuteScalar());
                                    if (exist1 == 0)
                                    {
                                        attente_semestre++;
                                        attente_annee++;
                                    }
                                    else
                                    {
                                        string sq9 = "SELECT COUNT(*) FROM horaire INNER JOIN prestation ON horaire.id_horaire = prestation.id_horaire WHERE horaire.id_cours=@id_cours";
                                        MySqlCommand cmd9 = new MySqlCommand(sq9, conn);
                                        cmd9.Parameters.AddWithValue("@id_cours", Convert.ToInt32(Cours_ID[cours]));
                                        int exist2 = Convert.ToInt32(cmd9.ExecuteScalar());
                                        if (exist2 > 0)
                                        {
                                            encours_semestre++;
                                            encours_annee++;
                                        }
                                    }
                                }
                            }

                        }
                        if (nbre_cours_semestre == 0)
                        {
                            cell = new PdfPCell(new Phrase("", font_bold_9));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.FixedHeight = 13f;
                            cell.Colspan = 16;
                            table.AddCell(cell);
                        }
                        else
                        {
                            cell = new PdfPCell(new Phrase(non_attribue_semestre.ToString(), font_bold_9));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.FixedHeight = 13f;
                            table.AddCell(cell);

                            if (non_attribue_semestre == 0)
                            {
                                cell = new PdfPCell(new Phrase("0 %", font_bold_9));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                cell.FixedHeight = 13f;
                                table.AddCell(cell);
                            }
                            else
                            {
                                cell = new PdfPCell(new Phrase((non_attribue_semestre * 1000 * 0.1 / nbre_cours_semestre).ToString("#.##") + " %", font_bold_9));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                cell.FixedHeight = 13f;
                                table.AddCell(cell);
                            }


                            cell = new PdfPCell(new Phrase(attribue_semestre.ToString(), font_bold_9));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.FixedHeight = 13f;
                            table.AddCell(cell);



                            if (attribue_semestre == 0)
                            {
                                cell = new PdfPCell(new Phrase("0 %", font_bold_9));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                cell.FixedHeight = 13f;
                                table.AddCell(cell);
                            }
                            else
                            {
                                cell = new PdfPCell(new Phrase((attribue_semestre * 1000 * 0.1 / nbre_cours_semestre).ToString("#.##") + " %", font_bold_9));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                cell.FixedHeight = 13f;
                                table.AddCell(cell);
                            }


                            cell = new PdfPCell(new Phrase(attente_semestre.ToString(), font_bold_9));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.FixedHeight = 13f;
                            table.AddCell(cell);

                            if (attente_semestre == 0)
                            {
                                cell = new PdfPCell(new Phrase("0 %", font_bold_9));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                cell.FixedHeight = 13f;
                                table.AddCell(cell);
                            }
                            else
                            {
                                cell = new PdfPCell(new Phrase((attente_semestre * 1000 * 0.1 / nbre_cours_semestre).ToString("#.##") + " %", font_bold_9));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                cell.FixedHeight = 13f;
                                table.AddCell(cell);
                            }


                            cell = new PdfPCell(new Phrase(encours_semestre.ToString(), font_bold_9));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.FixedHeight = 13f;
                            table.AddCell(cell);

                            if (encours_semestre == 0)
                            {
                                cell = new PdfPCell(new Phrase("0 %", font_bold_9));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                cell.FixedHeight = 13f;
                                table.AddCell(cell);
                            }
                            else
                            {
                                cell = new PdfPCell(new Phrase((encours_semestre * 1000 * 0.1 / nbre_cours_semestre).ToString("#.##") + " %", font_bold_9));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                cell.FixedHeight = 13f;
                                table.AddCell(cell);
                            }

                            cell = new PdfPCell(new Phrase(termine_semestre.ToString(), font_bold_9));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.FixedHeight = 13f;
                            table.AddCell(cell);

                            if (termine_semestre == 0)
                            {
                                cell = new PdfPCell(new Phrase("0 %", font_bold_9));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                cell.FixedHeight = 13f;
                                table.AddCell(cell);
                            }
                            else
                            {
                                cell = new PdfPCell(new Phrase((termine_semestre * 1000 * 0.1 / nbre_cours_semestre).ToString("#.##") + " %", font_bold_9));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                cell.FixedHeight = 13f;
                                table.AddCell(cell);
                            }

                            cell = new PdfPCell(new Phrase(programme_semestre.ToString(), font_bold_9));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.FixedHeight = 13f;
                            table.AddCell(cell);


                            if (programme_semestre == 0)
                            {
                                cell = new PdfPCell(new Phrase("0 %", font_bold_9));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                cell.FixedHeight = 13f;
                                table.AddCell(cell);
                            }
                            else
                            {
                                cell = new PdfPCell(new Phrase((programme_semestre * 1000 * 0.1 / nbre_cours_semestre).ToString("#.##") + " %", font_bold_9));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                cell.FixedHeight = 13f;
                                table.AddCell(cell);
                            }



                            cell = new PdfPCell(new Phrase(examine_semestre.ToString(), font_bold_9));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.FixedHeight = 13f;
                            table.AddCell(cell);


                            if (examine_semestre == 0)
                            {
                                cell = new PdfPCell(new Phrase("0 %", font_bold_9));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                cell.FixedHeight = 13f;
                                table.AddCell(cell);
                            }
                            else
                            {
                                cell = new PdfPCell(new Phrase((examine_semestre * 1000 * 0.1 / nbre_cours_semestre).ToString("#.##") + " %", font_bold_9));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                cell.FixedHeight = 13f;
                                table.AddCell(cell);
                            }

                            cell = new PdfPCell(new Phrase(resultat_semestre.ToString(), font_bold_9));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.FixedHeight = 13f;
                            table.AddCell(cell);


                            if (resultat_semestre == 0)
                            {
                                cell = new PdfPCell(new Phrase("0 %", font_bold_9));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                cell.FixedHeight = 13f;
                                table.AddCell(cell);
                            }
                            else
                            {
                                cell = new PdfPCell(new Phrase((resultat_semestre * 1000 * 0.1 / nbre_cours_semestre).ToString("#.##") + " %", font_bold_9));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                cell.FixedHeight = 13f;
                                table.AddCell(cell);
                            }
                        }
                    }
                    cell = new PdfPCell(new Phrase("SITUATION ANNUELLE", font_bold_9));
                    cell.HorizontalAlignment = Element.ALIGN_LEFT;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(nbre_cours_annee.ToString(), font_bold_9));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.FixedHeight = 13f;
                    table.AddCell(cell);

                    if (nbre_cours_annee == 0)
                    {
                        cell = new PdfPCell(new Phrase("", font_bold_9));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.FixedHeight = 13f;
                        cell.Colspan = 16;
                        table.AddCell(cell);
                    }
                    else
                    {
                        cell = new PdfPCell(new Phrase(non_attribue_annee.ToString(), font_bold_9));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.FixedHeight = 13f;
                        table.AddCell(cell);


                        if (non_attribue_annee == 0)
                        {
                            cell = new PdfPCell(new Phrase("0 %", font_bold_9));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.FixedHeight = 13f;
                            table.AddCell(cell);
                        }
                        else
                        {
                            cell = new PdfPCell(new Phrase((non_attribue_annee * 1000 * 0.1 / nbre_cours_annee).ToString("#.##") + " %", font_bold_9));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.FixedHeight = 13f;
                            table.AddCell(cell);
                        }

                        cell = new PdfPCell(new Phrase(attribue_annee.ToString(), font_bold_9));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.FixedHeight = 13f;
                        table.AddCell(cell);

                        if (attribue_annee == 0)
                        {
                            cell = new PdfPCell(new Phrase("0 %", font_bold_9));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.FixedHeight = 13f;
                            table.AddCell(cell);
                        }
                        else
                        {
                            cell = new PdfPCell(new Phrase((attribue_annee * 1000 * 0.1 / nbre_cours_annee).ToString("#.##") + " %", font_bold_9));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.FixedHeight = 13f;
                            table.AddCell(cell);
                        }

                        cell = new PdfPCell(new Phrase(attente_annee.ToString(), font_bold_9));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.FixedHeight = 13f;
                        table.AddCell(cell);

                        if (attente_annee == 0)
                        {
                            cell = new PdfPCell(new Phrase("0 %", font_bold_9));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.FixedHeight = 13f;
                            table.AddCell(cell);
                        }
                        else
                        {
                            cell = new PdfPCell(new Phrase((attente_annee * 1000 * 0.1 / nbre_cours_annee).ToString("#.##") + " %", font_bold_9));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.FixedHeight = 13f;
                            table.AddCell(cell);
                        }

                        cell = new PdfPCell(new Phrase(encours_annee.ToString(), font_bold_9));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.FixedHeight = 13f;
                        table.AddCell(cell);


                        if (encours_annee == 0)
                        {
                            cell = new PdfPCell(new Phrase("0 %", font_bold_9));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.FixedHeight = 13f;
                            table.AddCell(cell);
                        }
                        else
                        {
                            cell = new PdfPCell(new Phrase((encours_annee * 1000 * 0.1 / nbre_cours_annee).ToString("#.##") + " %", font_bold_9));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.FixedHeight = 13f;
                            table.AddCell(cell);
                        }

                        cell = new PdfPCell(new Phrase(termine_annee.ToString(), font_bold_9));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.FixedHeight = 13f;
                        table.AddCell(cell);

                        if (termine_annee == 0)
                        {
                            cell = new PdfPCell(new Phrase("0 %", font_bold_9));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.FixedHeight = 13f;
                            table.AddCell(cell);
                        }
                        else
                        {
                            cell = new PdfPCell(new Phrase((termine_annee * 1000 * 0.1 / nbre_cours_annee).ToString("#.##") + " %", font_bold_9));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.FixedHeight = 13f;
                            table.AddCell(cell);
                        }


                        cell = new PdfPCell(new Phrase(programme_annee.ToString(), font_bold_9));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.FixedHeight = 13f;
                        table.AddCell(cell);

                        if (programme_annee == 0)
                        {
                            cell = new PdfPCell(new Phrase("0 %", font_bold_9));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.FixedHeight = 13f;
                            table.AddCell(cell);
                        }
                        else
                        {
                            cell = new PdfPCell(new Phrase((programme_annee * 1000 * 0.1 / nbre_cours_annee).ToString("#.##") + " %", font_bold_9));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.FixedHeight = 13f;
                            table.AddCell(cell);
                        }


                        cell = new PdfPCell(new Phrase(examine_annee.ToString(), font_bold_9));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.FixedHeight = 13f;
                        table.AddCell(cell);

                        if (examine_annee == 0)
                        {
                            cell = new PdfPCell(new Phrase("0 %", font_bold_9));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.FixedHeight = 13f;
                            table.AddCell(cell);
                        }
                        else
                        {
                            cell = new PdfPCell(new Phrase((examine_annee * 1000 * 0.1 / nbre_cours_annee).ToString("#.##") + " %", font_bold_9));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.FixedHeight = 13f;
                            table.AddCell(cell);
                        }

                        cell = new PdfPCell(new Phrase(resultat_annee.ToString(), font_bold_9));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.FixedHeight = 13f;
                        table.AddCell(cell);

                        if (resultat_annee == 0)
                        {
                            cell = new PdfPCell(new Phrase("0 %", font_bold_9));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.FixedHeight = 13f;
                            table.AddCell(cell);
                        }
                        else
                        {
                            cell = new PdfPCell(new Phrase((resultat_annee * 1000 * 0.1 / nbre_cours_annee).ToString("#.##") + " %", font_bold_9));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.FixedHeight = 13f;
                            table.AddCell(cell);
                        }
                    }
                }

                doc.Add(table);

                PdfPTable tVisa = new PdfPTable(5);//Creer une table de 5 colonnes
                float[] colwithv = { 7f, 7f, 7f, 7f, 12f };//parametrer les domensions(largeur) de chacune des collonnes
                tVisa.SetWidths(colwithv);//appliquer ces dimenstions a l atable


                cell = new PdfPCell(new Phrase("", font_bold_9));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 5;
                tVisa.AddCell(cell);

                cell = new PdfPCell(new Phrase("", font_bold_9));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 5;
                tVisa.AddCell(cell);

                cell = new PdfPCell(new Phrase("", font_bold_9));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 5;
                tVisa.AddCell(cell);

                cell = new PdfPCell(new Phrase("\nVISA DU DECANAT", font_bold_9));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 2;
                tVisa.AddCell(cell);

                cell = new PdfPCell(new Phrase("", font_bold_9));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 2;
                tVisa.AddCell(cell);

                string dat = "Fait à " + siege + " ,le " + DateTime.Today.Date.ToShortDateString();
                string nom_rect = "";

                cell = new PdfPCell(new Phrase(dat + "\n\n" + nom_rect, font_bold_9));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                tVisa.AddCell(cell);

                Paragraph pVisa = new Paragraph();
                //parf.IndentationLeft = 240;
                pVisa.Alignment = Element.ALIGN_CENTER;
                //pVisa.SpacingAfter = 6;
                pVisa.SpacingBefore = 8;
                pVisa.Add(tVisa);

                doc.Add(pVisa);

                wri.PageEvent = new Foot();
                doc.Close();
                System.Diagnostics.Process.Start(outputFile);
                conn.Close();
            }
            catch (Exception ex)
            {
                //MessageBox.Show(ex.Message);
            }
        }

        //===================STATISTIQUES DES ETUDIANTS ET ENSEIGNANTS======================================//

        public void Etudiants_Rapport_Academique_par_Annee(int id_an, string ann, int id_fac, string fac)
        {
            int id_annee = id_an;
            string annee = ann;
            int id_faculte = id_fac;
            string faculte = fac;
            Create_Folder();

            DateTime dt = DateTime.Now;
            int ans = dt.Year;
            int mois = dt.Month;
            int jour = dt.Day;
            int heure = dt.Hour;
            int min = dt.Minute;
            int sec = dt.Month;
            string date = jour + "-" + mois + "-" + ans + "_à_" + heure + "h" + min + "min" + sec + "sec";

            iTextSharp.text.Document doc = new iTextSharp.text.Document(iTextSharp.text.PageSize.A4, 0, 0, 50, 10);
            string docname = "Stat_type_3_  " + date + ".pdf";
            string outputFile = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.Desktop), @"BMDSys", docname);
            FileStream fs = new FileStream(outputFile, FileMode.Create, FileAccess.Write, FileShare.None);
            PdfWriter wri = PdfWriter.GetInstance(doc, fs);
            doc.Open();

            conn = new MySqlConnection(Authentification.MyString);
            conn.Open();


            string universite = Load_Institution(conn);
            string coordonee = Load_Adress(conn);
            string value = coordonee;
            string[] op = value.Split('-');
            site = op[0];
            siege = op[1];
            telephone = op[2];
            b_postale = op[3];


            PdfPCell cell = new PdfPCell(new Phrase("", font_bold_10));
            PdfPTable table1 = first_header(conn, universite, ref cell, faculte);
            doc.Add(table1);


            Paragraph parf = new Paragraph();
            string ta = "RAPPORT ACADEMIQUE ANNUEL, A.A:" + annee;
            parf.Add(new Phrase(ta, font_normal_underlined_8));
            parf.Alignment = Element.ALIGN_CENTER;
            parf.SpacingAfter = 10;
            parf.SpacingBefore = 10;
            doc.Add(parf);




            PdfPTable taba = new PdfPTable(4);//Creer une table de 5 colonnes
            float[] coltaba = { 10f, 10f, 10f, 10f };//parametrer les domensions(largeur) de chacune des collonnes
            taba.SetWidths(coltaba);




            cell = new PdfPCell(new Phrase("Faculte ou Institut", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_RIGHT;
            cell.BorderWidth = 0;
            taba.AddCell(cell);

            cell = new PdfPCell(new Phrase(": " + faculte, font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidth = 0;
            taba.AddCell(cell);

            cell = new PdfPCell(new Phrase(" ", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidth = 0;
            cell.Colspan = 2;
            taba.AddCell(cell);


            cell = new PdfPCell(new Phrase("Année Academique", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_RIGHT;
            cell.BorderWidth = 0;
            taba.AddCell(cell);

            cell = new PdfPCell(new Phrase(": " + annee, font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidth = 0;
            taba.AddCell(cell);

            cell = new PdfPCell(new Phrase(" ", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidth = 0;
            cell.Colspan = 2;
            taba.AddCell(cell);


            doc.Add(taba);


            iTextSharp.text.Paragraph txt_t = new iTextSharp.text.Paragraph(" ", font_bold_7);
            txt_t.Alignment = Element.ALIGN_CENTER;
            txt_t.SpacingBefore = 10;
            txt_t.SpacingAfter = 10;
            doc.Add(txt_t);




            //CORPS DU RAPPORT 
            PdfPTable table = new PdfPTable(20);
            table.HorizontalAlignment = Element.ALIGN_CENTER;
            float[] colwiths = { 80f, 30f, 20f, 20f, 20f, 20f, 20f, 20f, 20f, 20f, 20f, 20f, 20f, 20f, 20f, 20f, 20f, 20f, 20f, 20f };
            table.SetWidths(colwiths);//appliquer ces dimenstions a l atable


            cell = new PdfPCell(new Phrase(" ", font_normal_7));
            cell.Colspan = 2;
            cell.BorderWidth = 0;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Total etudiants", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.Colspan = 3;
            cell.Rowspan = 2;
            table.AddCell(cell);



            cell = new PdfPCell(new Phrase("Etrangers", font_bold_7));
            cell.Colspan = 3;
            cell.Rowspan = 2;
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Boursiers", font_bold_7));
            cell.Colspan = 3;
            cell.Rowspan = 2;
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Loges", font_bold_7));
            cell.Colspan = 3;
            cell.Rowspan = 2;
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Redoublants", font_bold_7));
            cell.Colspan = 3;
            cell.Rowspan = 2;
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Abandon annee precedente", font_bold_7));
            cell.Colspan = 3;
            cell.Rowspan = 2;
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);


            cell = new PdfPCell(new Phrase("DEPARTEMENT", font_normal_7));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Classe", font_normal_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("F", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("M", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("TOT", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("F", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("M", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("TOT", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("F", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("M", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("TOT", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("F", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("M", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("TOT", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("F", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("M", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("TOT", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("F", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("M", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("TOT", font_bold_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);


            ///-----------------------------FIN ENTETE------------------------------------------------------------//


            string[] Faculte_ID, Faculte_Nom, Departement_ID, Departement_Nom, Classe_ID, Classe_Nom, Etudiant_ID;
            int nbre_classe = 0, nbre_faculte = 0, nbre_departement = 0;

            int Annee_candidats_1ereSession = 0, Faculte_candidats_1ereSession = 0, Departement_candidats_1ereSession = 0, Classe_candidats_1ereSession = 0;
            int Annee_reussites_1ereSession = 0, Faculte_reussites_1ereSession = 0, Departement_reussites_1ereSession = 0, Classe_reussites_1ereSession = 0;

            int Annee_candidats_2eme_Session = 0, Faculte_candidats_2eme_Session = 0, Departement_candidats_2eme_Session = 0, Classe_candidats_2eme_Session = 0;
            int Annee_reussites_2eme_Session = 0, Faculte_reussites_2eme_Session = 0, Departement_reussites_2eme_Session = 0, Classe_reussites_2eme_Session = 0;

            int Annee_reussite = 0, Faculte_reussite = 0, Departement_reussite = 0, Classe_reussite = 0;

            int Annee_ajournes = 0, Faculte_ajournes = 0, Departement_ajournes = 0, Classe_ajournes = 0;
            int Annee_eclusion = 0, Faculte_eclusion = 0, Departement_eclusion = 0, Classe_eclusion = 0;

            try
            {

                string sq4 = "SELECT COUNT(DISTINCT id_departement) FROM departement_par_faculte  WHERE id_annee=@id_annee";
                MySqlCommand cmd4 = new MySqlCommand(sq4, conn);
                cmd4.Parameters.AddWithValue("@id_annee", id_annee);
                nbre_departement = Convert.ToInt32(cmd4.ExecuteScalar());

                Departement_ID = new string[nbre_departement];
                Departement_Nom = new string[nbre_departement];


                string sq5 = "SELECT DISTINCT departement_par_faculte.id_departement, departement.departement" +
                    " FROM departement INNER JOIN departement_par_faculte ON departement.id_departement = departement_par_faculte.id_departement" +
                    " WHERE departement_par_faculte.id_annee=@id_annee";
                MySqlCommand cmd5 = new MySqlCommand(sq5, conn);
                cmd5.Parameters.AddWithValue("@id_annee", id_annee);
                MySqlDataReader dr5 = cmd5.ExecuteReader();
                int na = 0;
                while (dr5.Read())
                {
                    Departement_ID[na] = string.Format("{0}", dr5.GetInt32(0).ToString());
                    Departement_Nom[na] = string.Format("{0}", dr5.GetString(1));
                    na++;
                }
                dr5.Close();

                for (int dptmnt = 0; dptmnt < nbre_departement; dptmnt++)
                {
                    Departement_ajournes = 0;
                    Departement_eclusion = 0;
                    Departement_candidats_1ereSession = 0;
                    Departement_candidats_2eme_Session = 0;
                    Departement_reussites_1ereSession = 0;
                    Departement_reussites_2eme_Session = 0;
                    Departement_reussite = 0;

                    string sql0 = "SELECT COUNT(DISTINCT id_classe) FROM classe_par_departement WHERE id_departement=@id_departement AND id_annee=@id_annee";
                    MySqlCommand cmd0 = new MySqlCommand(sql0, conn);
                    cmd0.Parameters.AddWithValue("@id_departement", Convert.ToInt32(Departement_ID[dptmnt]));
                    cmd0.Parameters.AddWithValue("@id_annee", id_annee);
                    nbre_classe = Convert.ToInt32(cmd0.ExecuteScalar());
                    Classe_ID = new string[nbre_classe];
                    Classe_Nom = new string[nbre_classe];

                    if (nbre_classe == 0)
                    {
                        cell = new PdfPCell(new Phrase(Departement_Nom[dptmnt], font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_LEFT;
                        table.AddCell(cell);

                        cell = new PdfPCell(new Phrase("", font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_LEFT;
                        cell.Colspan = 12;
                        table.AddCell(cell);
                    }
                    else
                    {
                        cell = new PdfPCell(new Phrase(Departement_Nom[dptmnt], font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_LEFT;
                        cell.VerticalAlignment = Element.ALIGN_MIDDLE;
                        cell.Rowspan = nbre_classe;
                        table.AddCell(cell);


                        string sql1 = "SELECT DISTINCT classe_par_departement.id_classe, classe.classe" +
                            " FROM classe_par_departement INNER JOIN classe ON classe_par_departement.id_classe = classe.id_classe" +
                            " WHERE classe_par_departement.id_departement=@id_departement AND id_annee=@id_annee";
                        MySqlCommand cmd1 = new MySqlCommand(sql1, conn);
                        cmd1.Parameters.AddWithValue("@id_departement", Convert.ToInt32(Departement_ID[dptmnt]));
                        cmd1.Parameters.AddWithValue("@id_annee", id_annee);
                        MySqlDataReader dr1 = cmd1.ExecuteReader();
                        int j = 0;
                        while (dr1.Read())
                        {
                            Classe_ID[j] = string.Format("{0}", dr1.GetInt32(0).ToString());
                            Classe_Nom[j] = string.Format("{0}", dr1.GetString(1));
                            j++;
                        }
                        dr1.Close();
                        for (int classe = 0; classe < nbre_classe; classe++)
                        {
                            Classe_ajournes = 0;
                            Classe_eclusion = 0;
                            Classe_candidats_1ereSession = 0;
                            Classe_candidats_2eme_Session = 0;
                            Classe_reussites_1ereSession = 0;
                            Classe_reussites_2eme_Session = 0;
                            Classe_reussite = 0;

                            cell = new PdfPCell(new Phrase(Classe_Nom[classe], font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_LEFT;
                            table.AddCell(cell);

                            string sq6 = "SELECT COUNT(DISTINCT id_etudiant) FROM deliberation WHERE id_departement=@id_departement AND id_classe=@id_classe AND id_annee=@id_annee";
                            MySqlCommand cmd6 = new MySqlCommand(sq6, conn);
                            cmd6.Parameters.AddWithValue("@id_annee", id_annee);
                            cmd6.Parameters.AddWithValue("@id_departement", Convert.ToInt32(Departement_ID[dptmnt]));
                            cmd6.Parameters.AddWithValue("@id_classe", Convert.ToInt32(Classe_ID[classe]));

                            Classe_candidats_1ereSession += Convert.ToInt32(cmd6.ExecuteScalar());
                            Departement_candidats_1ereSession += Classe_candidats_1ereSession;
                            Faculte_candidats_1ereSession += Classe_candidats_1ereSession;

                            //Recherche redoublants
                            string sq1p = "SELECT COUNT(DISTINCT deliberation.id_etudiant)" +
                                " FROM (deliberation INNER JOIN deliberation_condition ON deliberation.id_decision = deliberation_condition.id_decision) INNER JOIN deliberation_finalite ON deliberation_condition.id_finalite = deliberation_finalite.id_finalite" +
                                " WHERE deliberation.id_departement=@id_departement AND deliberation.id_classe=@id_classe AND deliberation_finalite.id_finalite=@id_finalite AND deliberation.id_annee=@id_annee";
                            MySqlCommand cmd1p = new MySqlCommand(sq1p, conn);
                            cmd1p.Parameters.AddWithValue("@id_departement", Convert.ToInt32(Departement_ID[dptmnt]));
                            cmd1p.Parameters.AddWithValue("@id_classe", Convert.ToInt32(Classe_ID[classe]));
                            cmd1p.Parameters.AddWithValue("@id_annee", id_annee - 1);
                            cmd1p.Parameters.AddWithValue("@id_finalite", 3);

                            Classe_ajournes = Convert.ToInt32(cmd1p.ExecuteScalar());

                            Departement_ajournes += Classe_ajournes;
                            Faculte_ajournes += Classe_ajournes;



                            //Recherche etrangers
                            string sq8 = "SELECT COUNT(DISTINCT etudiant_inscription.id_etudiant)" +
                                    " FROM etudiant_inscription INNER JOIN etudiant ON etudiant_inscription.id_etudiant = etudiant.id_etudiant" +
                                    " WHERE etudiant_inscription.id_annee=@id_annee AND  etudiant_inscription.id_departement=@id_departement AND etudiant_inscription.id_classe=@id_classe ";
                            MySqlCommand cmd8 = new MySqlCommand(sq8, conn);
                            cmd8.Parameters.AddWithValue("@id_departement", Convert.ToInt32(Departement_ID[dptmnt]));
                            cmd8.Parameters.AddWithValue("@id_classe", Convert.ToInt32(Classe_ID[classe]));
                            cmd8.Parameters.AddWithValue("@id_annee", id_annee);
                            cmd8.Parameters.AddWithValue("@id_faculte", id_faculte);
                            cmd8.Parameters.AddWithValue("@id_session", 1);
                            cmd8.Parameters.AddWithValue("@droit_avancement", "Oui");

                            Classe_reussites_1ereSession = Convert.ToInt32(cmd8.ExecuteScalar());
                            Departement_reussites_1ereSession += Classe_reussites_1ereSession;
                            Faculte_reussites_1ereSession += Classe_reussites_1ereSession;

                            Classe_reussite += Classe_reussites_1ereSession;
                            Departement_reussite += Classe_reussites_1ereSession;
                            Faculte_reussite += Classe_reussites_1ereSession;

                            string sq9 = "SELECT COUNT(DISTINCT id_etudiant) FROM deliberation WHERE id_departement=@id_departement AND id_classe=@id_classe AND id_session=@id_session AND id_annee=@id_annee AND id_faculte=@id_faculte";
                            MySqlCommand cmd9 = new MySqlCommand(sq9, conn);
                            cmd9.Parameters.AddWithValue("@id_departement", Convert.ToInt32(Departement_ID[dptmnt]));
                            cmd9.Parameters.AddWithValue("@id_classe", Convert.ToInt32(Classe_ID[classe]));
                            cmd9.Parameters.AddWithValue("@id_annee", id_annee);
                            cmd9.Parameters.AddWithValue("@id_faculte", id_faculte);
                            cmd9.Parameters.AddWithValue("@id_session", 2);

                            Classe_candidats_2eme_Session = Convert.ToInt32(cmd9.ExecuteScalar());
                            Departement_candidats_2eme_Session += Classe_candidats_2eme_Session;
                            Faculte_candidats_2eme_Session += Classe_candidats_2eme_Session;


                            string sq10 = "SELECT COUNT(DISTINCT deliberation.id_etudiant)" +
                                " FROM (deliberation INNER JOIN deliberation_condition ON deliberation.id_decision = deliberation_condition.id_decision) INNER JOIN deliberation_finalite ON deliberation_condition.id_finalite = deliberation_finalite.id_finalite" +
                                " WHERE deliberation.id_annee=@id_annee AND deliberation.id_faculte=@id_faculte AND deliberation.id_departement=@id_departement AND deliberation.id_classe=@id_classe AND deliberation.id_session=@id_session AND deliberation_finalite.droit_avancement=@droit_avancement";
                            MySqlCommand cmd10 = new MySqlCommand(sq10, conn);
                            cmd10.Parameters.AddWithValue("@id_departement", Convert.ToInt32(Departement_ID[dptmnt]));
                            cmd10.Parameters.AddWithValue("@id_classe", Convert.ToInt32(Classe_ID[classe]));
                            cmd10.Parameters.AddWithValue("@id_annee", id_annee);
                            cmd10.Parameters.AddWithValue("@id_faculte", id_faculte);
                            cmd10.Parameters.AddWithValue("@id_session", 2);
                            cmd10.Parameters.AddWithValue("@droit_avancement", "Oui");

                            Classe_reussites_2eme_Session = Convert.ToInt32(cmd10.ExecuteScalar());
                            Departement_reussites_2eme_Session += Classe_reussites_2eme_Session;// Etudiant reussis en 1ere session
                            Faculte_reussites_2eme_Session += Classe_reussites_2eme_Session;

                            Classe_reussite += Classe_reussites_2eme_Session;
                            Departement_reussite += Classe_reussites_2eme_Session;
                            Faculte_reussite += Classe_reussites_2eme_Session;





                            string sq12 = "SELECT COUNT(DISTINCT deliberation.id_etudiant)" +
                                " FROM (deliberation INNER JOIN deliberation_condition ON deliberation.id_decision = deliberation_condition.id_decision) INNER JOIN deliberation_finalite ON deliberation_condition.id_finalite = deliberation_finalite.id_finalite" +
                                " WHERE deliberation.id_annee=@id_annee AND deliberation.id_faculte=@id_faculte AND deliberation.id_departement=@id_departement AND deliberation.id_classe=@id_classe AND deliberation_finalite.id_finalite>@id_finalite";
                            MySqlCommand cmd12 = new MySqlCommand(sq12, conn);
                            cmd12.Parameters.AddWithValue("@id_departement", Convert.ToInt32(Departement_ID[dptmnt]));
                            cmd12.Parameters.AddWithValue("@id_classe", Convert.ToInt32(Classe_ID[classe]));
                            cmd12.Parameters.AddWithValue("@id_annee", id_annee);
                            cmd12.Parameters.AddWithValue("@id_faculte", id_faculte);
                            cmd12.Parameters.AddWithValue("@id_finalite", 3);
                            Classe_eclusion = Convert.ToInt32(cmd12.ExecuteScalar());

                            Departement_eclusion += Classe_eclusion;
                            Faculte_eclusion += Classe_eclusion;


                            cell = new PdfPCell(new Phrase(Classe_candidats_1ereSession.ToString(), font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            table.AddCell(cell);

                            cell = new PdfPCell(new Phrase(Classe_reussites_1ereSession.ToString(), font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);

                            if (Classe_candidats_1ereSession == 0)
                            {
                                cell = new PdfPCell(new Phrase("0", font_normal_7));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                table.AddCell(cell);
                            }
                            else
                            {
                                if (Classe_reussites_1ereSession == 0)
                                {
                                    cell = new PdfPCell(new Phrase("0", font_normal_7));
                                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                    //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                    table.AddCell(cell);
                                }
                                else
                                {
                                    cell = new PdfPCell(new Phrase((Classe_reussites_1ereSession * 1000 * 0.1 / Classe_candidats_1ereSession).ToString("#.##"), font_normal_7));
                                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                    //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                    table.AddCell(cell);
                                }
                            }

                            cell = new PdfPCell(new Phrase(Classe_candidats_2eme_Session.ToString(), font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);

                            cell = new PdfPCell(new Phrase(Classe_reussites_2eme_Session.ToString(), font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);

                            if (Classe_candidats_2eme_Session == 0)
                            {
                                cell = new PdfPCell(new Phrase("0", font_normal_7));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                table.AddCell(cell);
                            }
                            else
                            {
                                if (Classe_reussites_2eme_Session == 0)
                                {
                                    cell = new PdfPCell(new Phrase("0", font_normal_7));
                                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                    //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                    table.AddCell(cell);
                                }
                                else
                                {
                                    cell = new PdfPCell(new Phrase((Classe_reussites_2eme_Session * 1000 * 0.1 / Classe_candidats_2eme_Session).ToString("#.##"), font_normal_7));
                                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                    //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                    table.AddCell(cell);
                                }

                            }

                            cell = new PdfPCell(new Phrase(Classe_reussite.ToString(), font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);

                            if (Classe_candidats_1ereSession == 0)
                            {
                                cell = new PdfPCell(new Phrase("0", font_normal_7));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                table.AddCell(cell);
                            }
                            else
                            {
                                if (Classe_reussite == 0)
                                {
                                    cell = new PdfPCell(new Phrase("0", font_normal_7));
                                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                    table.AddCell(cell);
                                }
                                else
                                {
                                    cell = new PdfPCell(new Phrase((Classe_reussite * 1000 * 0.1 / Classe_candidats_1ereSession).ToString("#.##"), font_normal_7));
                                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                    table.AddCell(cell);
                                }
                            }

                            cell = new PdfPCell(new Phrase("-", font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            table.AddCell(cell);

                            cell = new PdfPCell(new Phrase("-", font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            table.AddCell(cell);


                            cell = new PdfPCell(new Phrase(Classe_ajournes.ToString(), font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);

                            if (Classe_ajournes == 0)
                            {
                                cell = new PdfPCell(new Phrase("0", font_normal_7));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                table.AddCell(cell);
                            }
                            else
                            {
                                cell = new PdfPCell(new Phrase((Classe_ajournes * 1000 * 0.1 / Classe_candidats_1ereSession).ToString("#.##"), font_normal_7));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                table.AddCell(cell);
                            }

                            cell = new PdfPCell(new Phrase(Classe_eclusion.ToString(), font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);

                            if (Classe_eclusion == 0)
                            {
                                cell = new PdfPCell(new Phrase("0", font_normal_7));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                table.AddCell(cell);
                            }
                            else
                            {
                                cell = new PdfPCell(new Phrase((Classe_eclusion * 1000 * 0.1 / Classe_candidats_1ereSession).ToString("#.##"), font_normal_7));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                table.AddCell(cell);
                            }
                        }

                        cell = new PdfPCell(new Phrase("Statistiques par departement ", font_bold_7));
                        cell.HorizontalAlignment = Element.ALIGN_LEFT;
                        cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        cell.Colspan = 2;
                        table.AddCell(cell);

                        cell = new PdfPCell(new Phrase(Departement_candidats_1ereSession.ToString(), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        table.AddCell(cell);

                        cell = new PdfPCell(new Phrase(Departement_reussites_1ereSession.ToString(), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        table.AddCell(cell);

                        if (Departement_candidats_1ereSession == 0)
                        {
                            cell = new PdfPCell(new Phrase("0", font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);
                        }
                        else
                        {
                            if (Departement_reussites_1ereSession == 0)
                            {
                                cell = new PdfPCell(new Phrase("0", font_normal_7));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                table.AddCell(cell);
                            }
                            else
                            {
                                cell = new PdfPCell(new Phrase((Departement_reussites_1ereSession * 1000 * 0.1 / Departement_candidats_1ereSession).ToString("#.##"), font_normal_7));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                table.AddCell(cell);
                            }
                        }

                        cell = new PdfPCell(new Phrase(Departement_candidats_2eme_Session.ToString(), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        table.AddCell(cell);

                        cell = new PdfPCell(new Phrase(Departement_reussites_2eme_Session.ToString(), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        table.AddCell(cell);

                        if (Departement_candidats_2eme_Session == 0)
                        {
                            cell = new PdfPCell(new Phrase("0", font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);
                        }
                        else
                        {

                            if (Departement_reussites_2eme_Session == 0)
                            {
                                cell = new PdfPCell(new Phrase("0", font_normal_7));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                table.AddCell(cell);
                            }
                            else
                            {
                                cell = new PdfPCell(new Phrase((Departement_reussites_2eme_Session * 1000 * 0.1 / Departement_candidats_2eme_Session).ToString("#.##"), font_normal_7));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                table.AddCell(cell);
                            }
                        }

                        cell = new PdfPCell(new Phrase(Departement_reussite.ToString(), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        table.AddCell(cell);

                        if (Departement_candidats_1ereSession == 0)
                        {
                            cell = new PdfPCell(new Phrase("0", font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);
                        }
                        else
                        {
                            if (Departement_reussite == 0)
                            {
                                cell = new PdfPCell(new Phrase("0", font_normal_7));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                table.AddCell(cell);
                            }
                            else
                            {
                                cell = new PdfPCell(new Phrase((Departement_reussite * 1000 * 0.1 / Departement_candidats_1ereSession).ToString("#.##"), font_normal_7));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                table.AddCell(cell);
                            }
                        }

                        cell = new PdfPCell(new Phrase("-", font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        table.AddCell(cell);

                        cell = new PdfPCell(new Phrase("-", font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        table.AddCell(cell);

                        cell = new PdfPCell(new Phrase(Departement_ajournes.ToString(), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        table.AddCell(cell);

                        if (Departement_ajournes == 0)
                        {
                            cell = new PdfPCell(new Phrase("0", font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);
                        }
                        else
                        {
                            cell = new PdfPCell(new Phrase((Departement_ajournes * 1000 * 0.1 / Departement_candidats_1ereSession).ToString("#.##"), font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);
                        }

                        cell = new PdfPCell(new Phrase(Departement_eclusion.ToString(), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        table.AddCell(cell);

                        if (Departement_eclusion == 0)
                        {
                            cell = new PdfPCell(new Phrase("0", font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);
                        }
                        else
                        {
                            cell = new PdfPCell(new Phrase((Departement_eclusion * 1000 * 0.1 / Departement_candidats_1ereSession).ToString("#.##"), font_normal_7));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);
                        }
                    }

                }
                cell = new PdfPCell(new Phrase("Statistique par FACULTE ", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BackgroundColor = BaseColor.GRAY;
                cell.Colspan = 2;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(Faculte_candidats_1ereSession.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(Faculte_reussites_1ereSession.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.GRAY;
                table.AddCell(cell);

                if (Faculte_candidats_1ereSession == 0)
                {
                    cell = new PdfPCell(new Phrase("0", font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.GRAY;
                    table.AddCell(cell);
                }
                else
                {
                    if (Faculte_reussites_1ereSession == 0)
                    {
                        cell = new PdfPCell(new Phrase("0", font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.GRAY;
                        table.AddCell(cell);
                    }
                    else
                    {
                        cell = new PdfPCell(new Phrase((Faculte_reussites_1ereSession * 1000 * 0.1 / Faculte_candidats_1ereSession).ToString("#.##"), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.GRAY;
                        table.AddCell(cell);
                    }
                }

                cell = new PdfPCell(new Phrase(Faculte_candidats_2eme_Session.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(Faculte_reussites_2eme_Session.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.GRAY;
                table.AddCell(cell);

                if (Faculte_candidats_2eme_Session == 0)
                {
                    cell = new PdfPCell(new Phrase("0", font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.GRAY;
                    table.AddCell(cell);
                }
                else
                {

                    if (Faculte_reussites_2eme_Session == 0)
                    {
                        cell = new PdfPCell(new Phrase("0", font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.GRAY;
                        table.AddCell(cell);
                    }
                    else
                    {
                        cell = new PdfPCell(new Phrase((Faculte_reussites_2eme_Session * 1000 * 0.1 / Faculte_candidats_2eme_Session).ToString("#.##"), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.GRAY;
                        table.AddCell(cell);
                    }
                }

                cell = new PdfPCell(new Phrase(Faculte_reussite.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.GRAY;
                table.AddCell(cell);

                if (Faculte_candidats_1ereSession == 0)
                {
                    cell = new PdfPCell(new Phrase("0", font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.GRAY;
                    table.AddCell(cell);
                }
                else
                {
                    if (Faculte_reussite == 0)
                    {
                        cell = new PdfPCell(new Phrase("0", font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.GRAY;
                        table.AddCell(cell);
                    }
                    else
                    {
                        cell = new PdfPCell(new Phrase((Faculte_reussite * 1000 * 0.1 / Faculte_candidats_1ereSession).ToString("#.##"), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.GRAY;
                        table.AddCell(cell);
                    }
                }

                cell = new PdfPCell(new Phrase("-", font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("-", font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(Faculte_ajournes.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.GRAY;
                table.AddCell(cell);
                if (Faculte_ajournes == 0)
                {
                    cell = new PdfPCell(new Phrase("0", font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.GRAY;
                    table.AddCell(cell);
                }
                else
                {
                    cell = new PdfPCell(new Phrase((Faculte_ajournes * 1000 * 0.1 / Faculte_candidats_1ereSession).ToString("#.##"), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    cell.BackgroundColor = BaseColor.GRAY;
                    table.AddCell(cell);
                }

                cell = new PdfPCell(new Phrase(Faculte_eclusion.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.GRAY;
                //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                if (Faculte_eclusion == 0)
                {
                    cell = new PdfPCell(new Phrase("0", font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.GRAY;
                    //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    table.AddCell(cell);
                }
                else
                {
                    cell = new PdfPCell(new Phrase((Faculte_eclusion * 1000 * 0.1 / Faculte_candidats_1ereSession).ToString("#.##"), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.GRAY;
                    //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    table.AddCell(cell);
                }

            }
            catch (Exception ex)
            {

            }
            conn.Close();
            doc.Add(table);

            PdfPTable tVisa = new PdfPTable(5);
            float[] colwithv = { 7f, 7f, 7f, 7f, 12f };
            tVisa.SetWidths(colwithv);


            cell = new PdfPCell(new Phrase("", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 5;
            tVisa.AddCell(cell);

            cell = new PdfPCell(new Phrase("", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 5;
            tVisa.AddCell(cell);

            cell = new PdfPCell(new Phrase("", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 5;
            tVisa.AddCell(cell);

            cell = new PdfPCell(new Phrase(" ", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 2;
            tVisa.AddCell(cell);

            cell = new PdfPCell(new Phrase("", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 2;
            tVisa.AddCell(cell);

            string dat = "Fait à " + siege + " ,le " + DateTime.Today.Date.ToShortDateString();
            string nom_rect = "La Direction";

            //cell = new PdfPCell(new Phrase(dat + "\n\n" + nom_rect, font_bold_8));
            cell = new PdfPCell(new Phrase(dat + " ", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            tVisa.AddCell(cell);

            Paragraph pVisa = new Paragraph();
            //parf.IndentationLeft = 240;
            pVisa.Alignment = Element.ALIGN_CENTER;
            pVisa.SpacingAfter = 10;
            pVisa.SpacingBefore = 10;
            pVisa.Add(tVisa);

            doc.Add(pVisa);

            wri.PageEvent = new Foot();
            doc.Close();
            System.Diagnostics.Process.Start(outputFile);
        }
        public void Etudiants_Statistiques_par_Annee_1(int idan, string ann, int id_fac, string fac)
        {
            Create_Folder();
            int id_annee = idan;
            string annee = ann;

            int id_faculte = id_fac;
            string faculte = fac;

            DateTime dt = DateTime.Now;
            int ans = dt.Year;
            int mois = dt.Month;
            int jour = dt.Day;
            int heure = dt.Hour;
            int min = dt.Minute;
            int sec = dt.Month;
            string date = jour + "-" + mois + "-" + ans + "_à_" + heure + "h" + min + "min" + sec + "sec";

            iTextSharp.text.Document doc = new iTextSharp.text.Document(iTextSharp.text.PageSize.A4, 0, 0, 50, 10);
            string docname = "Stat_type_4_  " + date + ".pdf";
            string outputFile = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.Desktop), @"BMDSys", docname);
            FileStream fs = new FileStream(outputFile, FileMode.Create, FileAccess.Write, FileShare.None);
            PdfWriter wri = PdfWriter.GetInstance(doc, fs);
            doc.Open();

            string[] Faculte_ID, Faculte_Nom, Departement_ID, Departement_Nom, Classe_ID, Classe_Nom, Etudiant_ID;
            int classe_masculin = 0, classe_feminin = 0, classe_total = 0, classe_bu = 0, classe_rwa = 0, classe_tz = 0, classe_ke = 0, classe_oug = 0, classe_rdc = 0, classe_soud = 0, classe_autre = 0;
            int departement_masculin = 0, departement_feminin = 0, departement_total = 0, departement_bu = 0, departement_rwa = 0, departement_tz = 0, departement_ke = 0, departement_oug = 0, departement_rdc = 0, departement_soud = 0, departement_autre = 0;
            int faculte_masculin = 0, faculte_feminin = 0, faculte_total = 0, faculte_bu = 0, faculte_rwa = 0, faculte_tz = 0, faculte_ke = 0, faculte_oug = 0, faculte_rdc = 0, faculte_soud = 0, faculte_autre = 0;
            int annee_masculin = 0, annee_feminin = 0, annee_total = 0, annee_bu = 0, annee_rwa = 0, annee_tz = 0, annee_ke = 0, annee_oug = 0, annee_rdc = 0, annee_soud = 0, annee_autre = 0;





            conn = new MySqlConnection(Authentification.MyString);
            conn.Open();

            string universite = Load_Institution(conn);
            string coordonee = Load_Adress(conn);
            string value = coordonee;
            string[] op = value.Split('-');
            site = op[0];
            siege = op[1];
            telephone = op[2];
            b_postale = op[3];


            PdfPCell cell = new PdfPCell(new Phrase("", font_bold_10));
            PdfPTable table1 = first_header(conn, universite, ref cell, faculte);
            doc.Add(table1);



            iTextSharp.text.Paragraph txt_t = new iTextSharp.text.Paragraph(" ", font_bold_7);
            txt_t.Alignment = Element.ALIGN_CENTER;
            txt_t.SpacingBefore = 10;
            txt_t.SpacingAfter = 10;
            doc.Add(txt_t);

            Paragraph parf = new Paragraph();
            string ta = "STATISTIQUES GLOBALES DES ETUDIANTS PAR ANNEE ACADEMIQUE: A.A " + annee;
            parf.Add(new Phrase(ta, font_normal_underlined_8));
            parf.Alignment = Element.ALIGN_CENTER;

            parf.SpacingBefore = 5;
            parf.SpacingAfter = 15;
            doc.Add(parf);



            //CORPS DU RAPPORT 
            PdfPTable table = new PdfPTable(14);
            table.HorizontalAlignment = Element.ALIGN_CENTER;
            float[] colwiths = { 70f, 100f, 30f, 20f, 20f, 25f, 20f, 20f, 20f, 20f, 25f, 25f, 25f, 25f };
            table.SetWidths(colwiths);//appliquer ces dimenstions a l atable


            cell = new PdfPCell(new Phrase("FAC/INSTITUT", font_normal_6));
            cell.Rowspan = 2;
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("DEPARTEMENT", font_normal_6));
            cell.Rowspan = 2;
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("ClASSE", font_normal_6));
            cell.Rowspan = 2;
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("SEXE", font_normal_6));
            cell.Colspan = 2;
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("TOTAL", font_normal_6));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("NATIONALITE", font_normal_6));
            cell.Colspan = 8;
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("M", font_normal_6));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("F", font_normal_6));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("M+F", font_normal_6));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("BU", font_normal_6));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("RWA", font_normal_6));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("RDC", font_normal_6));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("TZ", font_normal_6));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("OUG", font_normal_6));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("KEN", font_normal_6));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("SOUD", font_normal_6));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("AUTR", font_normal_6));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            try
            {
                //Trouver le nombre de departements
                string sql0 = "SELECT COUNT(DISTINCT id_faculte) FROM faculte_par_annee WHERE id_annee=@id_annee";
                MySqlCommand cmd0 = new MySqlCommand(sql0, conn);
                cmd0.Parameters.AddWithValue("@id_annee", id_annee);
                int nbre_faculte = Convert.ToInt32(cmd0.ExecuteScalar());

                if (nbre_faculte == 0)
                {

                }
                else
                {
                    Faculte_ID = new string[nbre_faculte];
                    Faculte_Nom = new string[nbre_faculte];

                    string sql1 = "SELECT faculte_par_annee.id_faculte, faculte.faculte" +
                        " FROM faculte INNER JOIN faculte_par_annee ON faculte.id_faculte = faculte_par_annee.id_faculte" +
                        " WHERE faculte_par_annee.id_annee=@id_annee";
                    MySqlCommand cmd1 = new MySqlCommand(sql1, conn);
                    cmd1.Parameters.AddWithValue("@id_annee", id_annee);
                    MySqlDataReader dr1 = cmd1.ExecuteReader();
                    int j = 0;
                    while (dr1.Read())
                    {
                        Faculte_ID[j] = string.Format("{0}", dr1.GetInt32(0).ToString());
                        Faculte_Nom[j] = string.Format("{0}", dr1.GetString(1));
                        ////MessageBox.Show(Faculte_ID[j] + "-"+Faculte_Nom[j]);
                        j++;
                    }
                    dr1.Close();

                    int n_departement;
                    for (int a = 0; a < nbre_faculte; a++)
                    {
                        faculte_masculin = 0;
                        faculte_feminin = 0;
                        faculte_total = 0;
                        faculte_bu = 0;
                        faculte_rwa = 0;
                        faculte_tz = 0;
                        faculte_ke = 0;
                        faculte_oug = 0;
                        faculte_rdc = 0;
                        faculte_soud = 0;
                        faculte_autre = 0;

                        string sma = "SELECT COUNT(id_classe) FROM classe_par_departement WHERE id_faculte=@id_faculte AND id_annee=@id_annee";
                        MySqlCommand cmdx = new MySqlCommand(sma, conn);
                        cmdx.Parameters.AddWithValue("@id_faculte", Convert.ToInt32(Faculte_ID[a]));
                        cmdx.Parameters.AddWithValue("@id_annee", id_annee);
                        int classe_par_faculte = Convert.ToInt32(cmdx.ExecuteScalar());
                        if (classe_par_faculte == 0)
                        {
                            /*cell = new PdfPCell(new Phrase(Faculte_Nom[a], main_texte));
                            cell.HorizontalAlignment = Element.ALIGN_LEFT;
                            table.AddCell(cell);

                            cell = new PdfPCell(new Phrase("", main_texte));
                            cell.HorizontalAlignment = Element.ALIGN_LEFT;
                            cell.Colspan = 13;
                            table.AddCell(cell);*/
                        }
                        else
                        {
                            string sqld = "SELECT COUNT(DISTINCT id_departement) FROM  departement_par_faculte WHERE id_faculte=@id_faculte AND id_annee=@id_annee";
                            MySqlCommand cmdd = new MySqlCommand(sqld, conn);
                            cmdd.Parameters.AddWithValue("@id_annee", id_annee);
                            cmdd.Parameters.AddWithValue("@id_faculte", Convert.ToInt32(Faculte_ID[a]));
                            n_departement = Convert.ToInt32(cmdd.ExecuteScalar());

                            Departement_ID = new string[n_departement];
                            Departement_Nom = new string[n_departement];

                            cell = new PdfPCell(new Phrase(Faculte_Nom[a], font_normal_8));
                            cell.HorizontalAlignment = Element.ALIGN_LEFT;
                            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
                            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            cell.Rowspan = classe_par_faculte + n_departement;
                            //cell.Rotation = 90;
                            cell.BorderWidth = 0;
                            cell.BorderWidthLeft = 1;
                            table.AddCell(cell);

                            string sqld1 = "SELECT DISTINCT departement_par_faculte.id_departement, departement.departement" +
                                " FROM departement_par_faculte INNER JOIN departement ON departement_par_faculte.id_departement = departement.id_departement" +
                                " WHERE departement_par_faculte.id_faculte=@id_faculte AND departement_par_faculte.id_annee=@id_annee";
                            MySqlCommand cmdd1 = new MySqlCommand(sqld1, conn);
                            cmdd1.Parameters.AddWithValue("@id_annee", id_annee);
                            cmdd1.Parameters.AddWithValue("@id_faculte", Convert.ToInt32(Faculte_ID[a]));
                            MySqlDataReader ddr1 = cmdd1.ExecuteReader();
                            int jd = 0;
                            while (ddr1.Read())
                            {
                                Departement_ID[jd] = string.Format("{0}", ddr1.GetInt32(0).ToString());
                                Departement_Nom[jd] = string.Format("{0}", ddr1.GetString(1));
                                jd++;
                            }
                            ddr1.Close();

                            int classe_par_departement;
                            for (int dk = 0; dk < n_departement; dk++)
                            {
                                departement_masculin = 0;
                                departement_feminin = 0;
                                departement_total = 0;

                                departement_bu = 0;
                                departement_rwa = 0;
                                departement_tz = 0;
                                departement_ke = 0;
                                departement_oug = 0;
                                departement_rdc = 0;
                                departement_soud = 0;
                                departement_autre = 0;

                                string sq2 = "SELECT COUNT(DISTINCT id_classe) FROM classe_par_departement WHERE id_departement=@id_departement AND id_faculte=@id_faculte AND id_annee=@id_annee";
                                MySqlCommand cmd2 = new MySqlCommand(sq2, conn);
                                cmd2.Parameters.AddWithValue("@id_departement", Convert.ToInt32(Departement_ID[dk]));
                                cmd2.Parameters.AddWithValue("@id_faculte", Convert.ToInt32(Faculte_ID[a]));
                                cmd2.Parameters.AddWithValue("@id_annee", id_annee);
                                classe_par_departement = Convert.ToInt32(cmd2.ExecuteScalar());

                                if (classe_par_departement == 0)
                                {
                                    cell = new PdfPCell(new Phrase(Departement_Nom[dk], font_normal_6));
                                    cell.HorizontalAlignment = Element.ALIGN_LEFT;
                                    cell.VerticalAlignment = Element.ALIGN_MIDDLE;
                                    cell.Colspan = 2;
                                    //cell.BorderWidthBottom = 0;
                                    table.AddCell(cell);

                                    //cell = new PdfPCell(new Phrase(" ", font_normal_6));
                                    //cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                    //table.AddCell(cell);

                                    for (int ka = 0; ka < 11; ka++)
                                    {
                                        cell = new PdfPCell(new Phrase("-", font_normal_6));
                                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                        table.AddCell(cell);
                                    }
                                }
                                else
                                {
                                    cell = new PdfPCell(new Phrase(Departement_Nom[dk], font_normal_6));
                                    cell.Rowspan = classe_par_departement;
                                    cell.HorizontalAlignment = Element.ALIGN_LEFT;
                                    cell.VerticalAlignment = Element.ALIGN_MIDDLE;
                                    //cell.BorderWidthLeft = 0;
                                    table.AddCell(cell);


                                    Classe_ID = new string[classe_par_departement];
                                    Classe_Nom = new string[classe_par_departement];

                                    string sq3 = "SELECT DISTINCT classe_par_departement.id_classe, classe.classe " +
                                        " FROM classe INNER JOIN classe_par_departement ON classe.id_classe = classe_par_departement.id_classe" +
                                        " WHERE classe_par_departement.id_departement=@id_departement AND classe_par_departement.id_faculte=@id_faculte AND classe_par_departement.id_annee=@id_annee";
                                    MySqlCommand cmd3 = new MySqlCommand(sq3, conn);
                                    cmd3.Parameters.AddWithValue("@id_departement", Convert.ToInt32(Departement_ID[dk]));
                                    cmd3.Parameters.AddWithValue("@id_faculte", Convert.ToInt32(Faculte_ID[a]));
                                    cmd3.Parameters.AddWithValue("@id_annee", id_annee);
                                    MySqlDataReader dr2 = cmd3.ExecuteReader();
                                    int bc = 0;
                                    while (dr2.Read())
                                    {
                                        Classe_ID[bc] = string.Format("{0}", dr2.GetInt32(0).ToString());
                                        Classe_Nom[bc] = string.Format("{0}", dr2.GetString(1));
                                        bc++;
                                    }
                                    dr2.Close();


                                    for (int mt = 0; mt < classe_par_departement; mt++)
                                    {
                                        classe_masculin = 0;
                                        classe_feminin = 0;
                                        classe_total = 0;
                                        classe_bu = 0;
                                        classe_rwa = 0;
                                        classe_tz = 0;
                                        classe_ke = 0;
                                        classe_oug = 0;
                                        classe_rdc = 0;
                                        classe_soud = 0;
                                        classe_autre = 0;

                                        string sq4 = "SELECT COUNT(DISTINCT id_etudiant) FROM etudiant_inscription WHERE id_classe=@id_classe AND id_annee=@id_annee AND id_faculte=@id_faculte AND id_departement=@id_departement";
                                        MySqlCommand cmd4 = new MySqlCommand(sq4, conn);
                                        cmd4.Parameters.AddWithValue("@id_classe", Convert.ToInt32(Classe_ID[mt]));
                                        cmd4.Parameters.AddWithValue("@id_departement", Convert.ToInt32(Departement_ID[dk]));
                                        cmd4.Parameters.AddWithValue("@id_faculte", Convert.ToInt32(Faculte_ID[a]));
                                        cmd4.Parameters.AddWithValue("@id_annee", id_annee);
                                        int nbre_etudiant = Convert.ToInt32(cmd4.ExecuteScalar());

                                        Etudiant_ID = new string[nbre_etudiant];

                                        for (int ne = 0; ne < nbre_etudiant; ne++)
                                        {
                                            string sq5 = "SELECT DISTINCT id_etudiant FROM etudiant_inscription WHERE id_classe=@id_classe AND id_annee=@id_annee AND id_faculte=@id_faculte AND id_departement=@id_departement";
                                            MySqlCommand cmd5 = new MySqlCommand(sq5, conn);
                                            cmd5.Parameters.AddWithValue("@id_classe", Convert.ToInt32(Classe_ID[mt]));
                                            cmd5.Parameters.AddWithValue("@id_departement", Convert.ToInt32(Departement_ID[dk]));
                                            cmd5.Parameters.AddWithValue("@id_faculte", Convert.ToInt32(Faculte_ID[a]));
                                            cmd5.Parameters.AddWithValue("@id_annee", id_annee);
                                            MySqlDataReader dr5 = cmd5.ExecuteReader();
                                            int na = 0;
                                            while (dr5.Read())
                                            {
                                                Etudiant_ID[na] = string.Format("{0}", dr5.GetInt32(0).ToString());
                                                na++;
                                            }
                                            dr5.Close();
                                        }
                                        int nf;
                                        for (nf = 0; nf < nbre_etudiant; nf++)
                                        {
                                            string sqm = "SELECT naissance_pays,genre FROM etudiant WHERE id_etudiant=@idet";
                                            MySqlCommand cmdm = new MySqlCommand(sqm, conn);
                                            cmdm.Parameters.AddWithValue("@idet", Convert.ToInt32(Etudiant_ID[nf]));
                                            MySqlDataReader drm = cmdm.ExecuteReader();
                                            while (drm.Read())
                                            {
                                                string pays = drm.GetString(0);
                                                string genre = drm.GetString(1);

                                                switch (pays)
                                                {
                                                    case "Burundi":
                                                        if (genre == "F")
                                                        {
                                                            classe_feminin++;
                                                            classe_total++;
                                                            classe_bu++;

                                                            departement_feminin++;
                                                            departement_total++;
                                                            departement_bu++;


                                                            faculte_feminin++;
                                                            faculte_total++;
                                                            faculte_bu++;

                                                            annee_feminin++;
                                                            annee_total++;
                                                            annee_bu++;
                                                        }
                                                        else
                                                        {
                                                            classe_masculin++;
                                                            classe_total++;
                                                            classe_bu++;


                                                            departement_masculin++;
                                                            departement_total++;
                                                            departement_bu++;


                                                            faculte_masculin++;
                                                            faculte_total++;
                                                            faculte_bu++;

                                                            annee_masculin++;
                                                            annee_total++;
                                                            annee_bu++;
                                                        }
                                                        break;
                                                    case "RDC":
                                                        if (genre == "F")
                                                        {
                                                            classe_feminin++;
                                                            classe_total++;
                                                            classe_rdc++;

                                                            departement_feminin++;
                                                            departement_total++;
                                                            departement_rdc++;


                                                            faculte_feminin++;
                                                            faculte_total++;
                                                            faculte_rdc++;

                                                            annee_feminin++;
                                                            annee_total++;
                                                            annee_rdc++;
                                                        }
                                                        else
                                                        {
                                                            classe_masculin++;
                                                            classe_total++;
                                                            classe_rdc++;


                                                            departement_masculin++;
                                                            departement_total++;
                                                            departement_rdc++;


                                                            faculte_masculin++;
                                                            faculte_total++;
                                                            faculte_rdc++;

                                                            annee_masculin++;
                                                            annee_total++;
                                                            annee_rdc++;
                                                        }
                                                        break;
                                                    case "Rwanda":
                                                        if (genre == "F")
                                                        {
                                                            classe_feminin++;
                                                            classe_total++;
                                                            classe_rwa++;

                                                            departement_feminin++;
                                                            departement_total++;
                                                            departement_rwa++;


                                                            faculte_feminin++;
                                                            faculte_total++;
                                                            faculte_rwa++;

                                                            annee_feminin++;
                                                            annee_total++;
                                                            annee_rwa++;
                                                        }
                                                        else
                                                        {
                                                            classe_masculin++;
                                                            classe_total++;
                                                            classe_rwa++;


                                                            departement_masculin++;
                                                            departement_total++;
                                                            departement_rwa++;


                                                            faculte_masculin++;
                                                            faculte_total++;
                                                            faculte_rwa++;

                                                            annee_masculin++;
                                                            annee_total++;
                                                            annee_rwa++;
                                                        }
                                                        break;
                                                    case "Tanzanie":
                                                        if (genre == "F")
                                                        {
                                                            classe_feminin++;
                                                            classe_total++;
                                                            classe_tz++;

                                                            departement_feminin++;
                                                            departement_total++;
                                                            departement_tz++;


                                                            faculte_feminin++;
                                                            faculte_total++;
                                                            faculte_tz++;

                                                            annee_feminin++;
                                                            annee_total++;
                                                            annee_tz++;
                                                        }
                                                        else
                                                        {
                                                            classe_masculin++;
                                                            classe_total++;
                                                            classe_tz++;


                                                            departement_masculin++;
                                                            departement_total++;
                                                            departement_tz++;


                                                            faculte_masculin++;
                                                            faculte_total++;
                                                            faculte_tz++;

                                                            annee_masculin++;
                                                            annee_total++;
                                                            annee_tz++;
                                                        }
                                                        break;
                                                    case "Kenya":
                                                        if (genre == "F")
                                                        {
                                                            classe_feminin++;
                                                            classe_total++;
                                                            classe_ke++;

                                                            departement_feminin++;
                                                            departement_total++;
                                                            departement_ke++;


                                                            faculte_feminin++;
                                                            faculte_total++;
                                                            faculte_ke++;

                                                            annee_feminin++;
                                                            annee_total++;
                                                            annee_ke++;
                                                        }
                                                        else
                                                        {
                                                            classe_masculin++;
                                                            classe_total++;
                                                            classe_ke++;


                                                            departement_masculin++;
                                                            departement_total++;
                                                            departement_ke++;


                                                            faculte_masculin++;
                                                            faculte_total++;
                                                            faculte_ke++;

                                                            annee_masculin++;
                                                            annee_total++;
                                                            annee_ke++;
                                                        }
                                                        break;
                                                    case "Ouganda":
                                                        if (genre == "F")
                                                        {
                                                            classe_feminin++;
                                                            classe_total++;
                                                            classe_oug++;

                                                            departement_feminin++;
                                                            departement_total++;
                                                            departement_oug++;


                                                            faculte_feminin++;
                                                            faculte_total++;
                                                            faculte_oug++;

                                                            annee_feminin++;
                                                            annee_total++;
                                                            annee_oug++;
                                                        }
                                                        else
                                                        {
                                                            classe_masculin++;
                                                            classe_total++;
                                                            classe_oug++;


                                                            departement_masculin++;
                                                            departement_total++;
                                                            departement_oug++;


                                                            faculte_masculin++;
                                                            faculte_total++;
                                                            faculte_oug++;

                                                            annee_masculin++;
                                                            annee_total++;
                                                            annee_oug++;
                                                        }
                                                        break;
                                                    case "Soudan du Sud":
                                                        if (genre == "F")
                                                        {
                                                            classe_feminin++;
                                                            classe_total++;
                                                            classe_soud++;

                                                            departement_feminin++;
                                                            departement_total++;
                                                            departement_soud++;


                                                            faculte_feminin++;
                                                            faculte_total++;
                                                            faculte_soud++;

                                                            annee_feminin++;
                                                            annee_total++;
                                                            annee_soud++;
                                                        }
                                                        else
                                                        {
                                                            classe_masculin++;
                                                            classe_total++;
                                                            classe_soud++;


                                                            departement_masculin++;
                                                            departement_total++;
                                                            departement_soud++;


                                                            faculte_masculin++;
                                                            faculte_total++;
                                                            faculte_soud++;

                                                            annee_masculin++;
                                                            annee_total++;
                                                            annee_soud++;
                                                        }
                                                        break;
                                                    default:
                                                        if (genre == "F")
                                                        {
                                                            classe_feminin++;
                                                            classe_total++;
                                                            classe_autre++;

                                                            departement_feminin++;
                                                            departement_total++;
                                                            departement_autre++;


                                                            faculte_feminin++;
                                                            faculte_total++;
                                                            faculte_autre++;

                                                            annee_feminin++;
                                                            annee_total++;
                                                            annee_autre++;
                                                        }
                                                        else
                                                        {
                                                            classe_masculin++;
                                                            classe_total++;
                                                            classe_autre++;


                                                            departement_masculin++;
                                                            departement_total++;
                                                            departement_autre++;


                                                            faculte_masculin++;
                                                            faculte_total++;
                                                            faculte_autre++;

                                                            annee_masculin++;
                                                            annee_total++;
                                                            annee_autre++;
                                                        }
                                                        break;
                                                }
                                            }
                                            drm.Close();
                                        }
                                        cell = new PdfPCell(new Phrase(Classe_Nom[mt], font_normal_6));
                                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                        table.AddCell(cell);

                                        cell = new PdfPCell(new Phrase(classe_masculin.ToString(), font_normal_6));
                                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                        table.AddCell(cell);

                                        cell = new PdfPCell(new Phrase(classe_feminin.ToString(), font_normal_6));
                                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                        table.AddCell(cell);

                                        cell = new PdfPCell(new Phrase(classe_total.ToString(), font_normal_6));
                                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                        table.AddCell(cell);

                                        cell = new PdfPCell(new Phrase(classe_bu.ToString(), font_normal_6));
                                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                        table.AddCell(cell);

                                        cell = new PdfPCell(new Phrase(classe_rwa.ToString(), font_normal_6));
                                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                        table.AddCell(cell);

                                        cell = new PdfPCell(new Phrase(classe_rdc.ToString(), font_normal_6));
                                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                        table.AddCell(cell);

                                        cell = new PdfPCell(new Phrase(classe_tz.ToString(), font_normal_6));
                                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                        table.AddCell(cell);

                                        cell = new PdfPCell(new Phrase(classe_oug.ToString(), font_normal_6));
                                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                        table.AddCell(cell);

                                        cell = new PdfPCell(new Phrase(classe_ke.ToString(), font_normal_6));
                                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                        table.AddCell(cell);

                                        cell = new PdfPCell(new Phrase(classe_soud.ToString(), font_normal_6));
                                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                        table.AddCell(cell);

                                        cell = new PdfPCell(new Phrase(classe_autre.ToString(), font_normal_6));
                                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                        table.AddCell(cell);
                                    }
                                    cell = new PdfPCell(new Phrase("", font_normal_6));
                                    cell.Colspan = 2;
                                    cell.BorderWidth = 0;
                                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                    table.AddCell(cell);

                                    cell = new PdfPCell(new Phrase(departement_masculin.ToString(), font_normal_6));
                                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                    table.AddCell(cell);

                                    cell = new PdfPCell(new Phrase(departement_feminin.ToString(), font_normal_6));
                                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                    table.AddCell(cell);

                                    cell = new PdfPCell(new Phrase(departement_total.ToString(), font_normal_6));
                                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                    table.AddCell(cell);

                                    cell = new PdfPCell(new Phrase(departement_bu.ToString(), font_normal_6));
                                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                    table.AddCell(cell);

                                    cell = new PdfPCell(new Phrase(departement_rwa.ToString(), font_normal_6));
                                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                    table.AddCell(cell);

                                    cell = new PdfPCell(new Phrase(departement_rdc.ToString(), font_normal_6));
                                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                    table.AddCell(cell);

                                    cell = new PdfPCell(new Phrase(departement_tz.ToString(), font_normal_6));
                                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                    table.AddCell(cell);

                                    cell = new PdfPCell(new Phrase(departement_oug.ToString(), font_normal_6));
                                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                    table.AddCell(cell);

                                    cell = new PdfPCell(new Phrase(departement_ke.ToString(), font_normal_6));
                                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                    table.AddCell(cell);

                                    cell = new PdfPCell(new Phrase(departement_soud.ToString(), font_normal_6));
                                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                    table.AddCell(cell);

                                    cell = new PdfPCell(new Phrase(departement_autre.ToString(), font_normal_6));
                                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                    table.AddCell(cell);
                                }

                            }
                            cell = new PdfPCell(new Phrase("", font_normal_6));
                            cell.BorderWidth = 0;

                            //cell.BackgroundColor = BaseColor.GRAY;
                            cell.Colspan = 3;
                            table.AddCell(cell);

                            cell = new PdfPCell(new Phrase(faculte_masculin.ToString(), font_normal_6));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.GRAY;
                            table.AddCell(cell);

                            cell = new PdfPCell(new Phrase(faculte_feminin.ToString(), font_normal_6));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.GRAY;
                            table.AddCell(cell);

                            cell = new PdfPCell(new Phrase(faculte_total.ToString(), font_normal_6));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.GRAY;
                            table.AddCell(cell);

                            cell = new PdfPCell(new Phrase(faculte_bu.ToString(), font_normal_6));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.GRAY;
                            table.AddCell(cell);

                            cell = new PdfPCell(new Phrase(faculte_rwa.ToString(), font_normal_6));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.GRAY;
                            table.AddCell(cell);

                            cell = new PdfPCell(new Phrase(faculte_rdc.ToString(), font_normal_6));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.GRAY;
                            table.AddCell(cell);

                            cell = new PdfPCell(new Phrase(faculte_tz.ToString(), font_normal_6));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.GRAY;
                            table.AddCell(cell);

                            cell = new PdfPCell(new Phrase(faculte_oug.ToString(), font_normal_6));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.GRAY;
                            table.AddCell(cell);

                            cell = new PdfPCell(new Phrase(faculte_ke.ToString(), font_normal_6));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.GRAY;
                            table.AddCell(cell);

                            cell = new PdfPCell(new Phrase(faculte_soud.ToString(), font_normal_6));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.GRAY;
                            table.AddCell(cell);

                            cell = new PdfPCell(new Phrase(faculte_autre.ToString(), font_normal_6));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.GRAY;
                            table.AddCell(cell);
                        }
                    }
                    cell = new PdfPCell(new Phrase("STATISTIQUES GLOBALES ANNUELLES", font_normal_6));
                    cell.Colspan = 3;
                    cell.HorizontalAlignment = Element.ALIGN_LEFT;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(annee_masculin.ToString(), font_normal_6));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(annee_feminin.ToString(), font_normal_6));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(annee_total.ToString(), font_normal_6));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(annee_bu.ToString(), font_normal_6));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(annee_rwa.ToString(), font_normal_6));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(annee_rdc.ToString(), font_normal_6));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(annee_tz.ToString(), font_normal_6));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(annee_oug.ToString(), font_normal_6));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(annee_ke.ToString(), font_normal_6));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(annee_soud.ToString(), font_normal_6));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(annee_autre.ToString(), font_normal_6));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);
                }
                conn.Close();
            }
            catch (Exception ex)
            {
                //MessageBox.Show(ex.Message);
            }
            //ajouter la table
            doc.Add(table);

            PdfPTable tVisa = new PdfPTable(5);
            float[] colwithv = { 7f, 7f, 7f, 7f, 12f };
            tVisa.SetWidths(colwithv);


            cell = new PdfPCell(new Phrase("", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 5;
            tVisa.AddCell(cell);

            cell = new PdfPCell(new Phrase("", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 5;
            tVisa.AddCell(cell);

            cell = new PdfPCell(new Phrase("", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 5;
            tVisa.AddCell(cell);

            cell = new PdfPCell(new Phrase(" ", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 2;
            tVisa.AddCell(cell);

            cell = new PdfPCell(new Phrase("", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 2;
            tVisa.AddCell(cell);

            string dat = "Fait à " + siege + " ,le " + DateTime.Today.Date.ToShortDateString();
            string nom_rect = "La Direction";

            //cell = new PdfPCell(new Phrase(dat + "\n\n" + nom_rect, font_bold_8));
            cell = new PdfPCell(new Phrase(dat + " ", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            tVisa.AddCell(cell);

            Paragraph pVisa = new Paragraph();
            //parf.IndentationLeft = 240;
            pVisa.Alignment = Element.ALIGN_CENTER;
            pVisa.SpacingAfter = 10;
            pVisa.SpacingBefore = 10;
            pVisa.Add(tVisa);

            doc.Add(pVisa);

            wri.PageEvent = new Foot();
            doc.Close();
            System.Diagnostics.Process.Start(outputFile);
        }
        public void Etudiants_Statistiques_par_Annee_2(int idan, string ann, int id_fac, string fac)
        {
            Create_Folder();
            int id_annee = idan;
            string annee = ann;
            int id_faculte = id_fac;
            string faculte = fac;

            DateTime dt = DateTime.Now;
            int ans = dt.Year;
            int mois = dt.Month;
            int jour = dt.Day;
            int heure = dt.Hour;
            int min = dt.Minute;
            int sec = dt.Month;
            string date = jour + "-" + mois + "-" + ans + "_à_" + heure + "h" + min + "min" + sec + "sec";

            iTextSharp.text.Document doc = new iTextSharp.text.Document(iTextSharp.text.PageSize.A4, 0, 0, 50, 10);
            string docname = "Stat_type_1_  " + date + ".pdf";
            string outputFile = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.Desktop), @"BMDSys", docname);
            FileStream fs = new FileStream(outputFile, FileMode.Create, FileAccess.Write, FileShare.None);
            PdfWriter wri = PdfWriter.GetInstance(doc, fs);
            doc.Open();

            string[] Faculte_ID, Faculte_Nom, Departement_ID, Departement_Nom, Classe_ID, Classe_Nom, Etudiant_ID;


            int d_total = 0, d_total_f = 0, d_total_m = 0, c_total = 0, c_total_f = 0, c_total_m = 0;
            int d_etranger = 0, d_etranger_f = 0, d_etanger_m = 0, c_etranger = 0, c_etranger_f = 0, c_etranger_m = 0;
            int d_redoublant = 0, d_redoublant_f = 0, d_redoublant_m = 0, c_redoublant = 0, c_redoublant_f = 0, c_redoublant_m = 0;
            int d_boursier = 0, d_boursier_f = 0, d_boursier_m = 0, c_boursier = 0, c_boursier_f = 0, c_boursier_m = 0;
            int d_loge = 0, d_loge_f = 0, d_loge_m = 0, c_loge = 0, c_loge_f = 0, c_loge_m = 0;
            int d_abandon = 0, d_abandon_f = 0, d_abandon_m = 0, c_abandon = 0, c_abandon_f = 0, c_abandon_m = 0;

            conn = new MySqlConnection(Authentification.MyString);
            conn.Open();
            string universite = Load_Institution(conn);
            string coordonee = Load_Adress(conn);
            string value = coordonee;
            string[] op = value.Split('-');
            site = op[0];
            siege = op[1];
            telephone = op[2];
            b_postale = op[3];


            PdfPCell cell = new PdfPCell(new Phrase("", font_bold_10));
            PdfPTable table1 = first_header(conn, universite, ref cell, faculte);
            doc.Add(table1);


            iTextSharp.text.Paragraph txt_t = new iTextSharp.text.Paragraph(" ", font_bold_7);
            txt_t.Alignment = Element.ALIGN_CENTER;
            txt_t.SpacingBefore = 10;
            txt_t.SpacingAfter = 10;
            doc.Add(txt_t);

            Paragraph parf = new Paragraph();
            string ta = "STATISTIQUES DES ETUDIANTS PAR ANNEE ACADEMIQUE: A.A " + annee;
            parf.Add(new Phrase(ta, font_normal_underlined_8));
            parf.Alignment = Element.ALIGN_CENTER;

            parf.SpacingBefore = 5;
            parf.SpacingAfter = 15;
            doc.Add(parf);



            //CORPS DU RAPPORT 
            PdfPTable table = new PdfPTable(20);
            table.HorizontalAlignment = Element.ALIGN_CENTER;
            float[] colwiths = { 100f, 30f, 20f, 20f, 20f, 20f, 20f, 20f, 20f, 20f, 20f, 20f, 20f, 20f, 20f, 20f, 20f, 20f, 20f, 20f };
            table.SetWidths(colwiths);//appliquer ces dimenstions a l atable


            cell = new PdfPCell(new Phrase("DEPARTEMENT", font_normal_6));
            cell.Rowspan = 2;
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("ClASSE", font_normal_6));
            cell.Rowspan = 2;
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("TOTAL ETUDIANTS", font_normal_6));
            cell.Colspan = 3;
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("ETRANGERS", font_normal_6));
            cell.Colspan = 3;
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("BOURSIERS", font_normal_6));
            cell.Colspan = 3;
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("LOGES", font_normal_6));
            cell.Colspan = 3;
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("REDOUBLANTS", font_normal_6));
            cell.Colspan = 3;
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("ABANDON AP", font_normal_6));
            cell.Colspan = 3;
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            table.AddCell(cell);



            cell = new PdfPCell(new Phrase("F", font_normal_6));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("M", font_normal_6));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("TOT", font_normal_6));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("F", font_normal_6));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("M", font_normal_6));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("TOT", font_normal_6));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("F", font_normal_6));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("M", font_normal_6));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("TOT", font_normal_6));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("F", font_normal_6));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("M", font_normal_6));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("TOT", font_normal_6));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("F", font_normal_6));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("M", font_normal_6));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("TOT", font_normal_6));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("F", font_normal_6));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("M", font_normal_6));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("TOT", font_normal_6));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            table.AddCell(cell);

            int nbre_departement, nbre_classe;
            try
            {
                string sqld = "SELECT COUNT(DISTINCT id_departement) FROM  departement_par_faculte WHERE  id_annee=@id_annee";
                MySqlCommand cmdd = new MySqlCommand(sqld, conn);
                cmdd.Parameters.AddWithValue("@id_annee", id_annee);
                nbre_departement = Convert.ToInt32(cmdd.ExecuteScalar());

                if (nbre_departement == 0)
                {
                }
                else
                {
                    Departement_ID = new string[nbre_departement];
                    Departement_Nom = new string[nbre_departement];

                    string sqld1 = "SELECT DISTINCT departement_par_faculte.id_departement, departement.departement" +
                    " FROM departement_par_faculte INNER JOIN departement ON departement_par_faculte.id_departement = departement.id_departement" +
                    " WHERE departement_par_faculte.id_annee=@id_annee";
                    MySqlCommand cmdd1 = new MySqlCommand(sqld1, conn);
                    cmdd1.Parameters.AddWithValue("@id_annee", id_annee);
                    MySqlDataReader ddr1 = cmdd1.ExecuteReader();
                    int jd = 0;
                    while (ddr1.Read())
                    {
                        Departement_ID[jd] = string.Format("{0}", ddr1.GetInt32(0).ToString());
                        Departement_Nom[jd] = string.Format("{0}", ddr1.GetString(1));
                        jd++;
                    }
                    ddr1.Close();

                    for (int dpt = 0; dpt < nbre_departement; dpt++)
                    {
                        d_total = 0; d_total_f = 0; d_total_m = 0;

                        d_etranger = 0; d_etranger_f = 0; d_etanger_m = 0;

                        d_redoublant = 0; d_redoublant_f = 0; d_redoublant_m = 0;

                        d_boursier = 0; d_boursier_f = 0; d_boursier_m = 0;

                        d_loge = 0; d_loge_f = 0; d_loge_m = 0;

                        d_abandon = 0; d_abandon_f = 0; d_abandon_m = 0;


                        string sq2 = "SELECT COUNT(DISTINCT id_classe) FROM classe_par_departement WHERE id_departement=@id_departement AND  id_annee=@id_annee";
                        MySqlCommand cmd2 = new MySqlCommand(sq2, conn);
                        cmd2.Parameters.AddWithValue("@id_departement", Convert.ToInt32(Departement_ID[dpt]));
                        cmd2.Parameters.AddWithValue("@id_annee", id_annee);
                        nbre_classe = Convert.ToInt32(cmd2.ExecuteScalar());

                        if (nbre_classe == 0)
                        {

                            cell = new PdfPCell(new Phrase(Departement_Nom[dpt], font_normal_6));
                            cell.HorizontalAlignment = Element.ALIGN_LEFT;
                            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
                            cell.Colspan = 2;
                            table.AddCell(cell);

                            cell = new PdfPCell(new Phrase(" ", font_normal_6));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            table.AddCell(cell);

                            for (int ka = 0; ka < 18; ka++)
                            {
                                cell = new PdfPCell(new Phrase("-", font_normal_6));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                table.AddCell(cell);
                            }
                        }
                        else
                        {
                            cell = new PdfPCell(new Phrase(Departement_Nom[dpt], font_normal_6));
                            cell.HorizontalAlignment = Element.ALIGN_LEFT;
                            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
                            cell.Rowspan = nbre_classe;
                            table.AddCell(cell);

                            Classe_ID = new string[nbre_classe];
                            Classe_Nom = new string[nbre_classe];

                            string sq3 = "SELECT DISTINCT classe_par_departement.id_classe, classe.classe " +
                            " FROM classe INNER JOIN classe_par_departement ON classe.id_classe = classe_par_departement.id_classe" +
                            " WHERE classe_par_departement.id_departement=@id_departement AND  classe_par_departement.id_annee=@id_annee";
                            MySqlCommand cmd3 = new MySqlCommand(sq3, conn);
                            cmd3.Parameters.AddWithValue("@id_departement", Convert.ToInt32(Departement_ID[dpt]));
                            cmd3.Parameters.AddWithValue("@id_annee", id_annee);
                            MySqlDataReader dr2 = cmd3.ExecuteReader();
                            int bc = 0;
                            while (dr2.Read())
                            {
                                Classe_ID[bc] = string.Format("{0}", dr2.GetInt32(0).ToString());
                                Classe_Nom[bc] = string.Format("{0}", dr2.GetString(1));
                                bc++;
                            }
                            dr2.Close();

                            for (int cla = 0; cla < nbre_classe; cla++)
                            {
                                c_total = 0; c_total_f = 0; c_total_m = 0;
                                c_etranger = 0; c_etranger_f = 0; c_etranger_m = 0;
                                c_redoublant = 0; c_redoublant_f = 0; c_redoublant_m = 0;
                                c_boursier = 0; c_boursier_f = 0; c_boursier_m = 0;
                                c_loge = 0; c_loge_f = 0; c_loge_m = 0;
                                c_abandon = 0; c_abandon_f = 0; c_abandon_m = 0;

                                cell = new PdfPCell(new Phrase(Classe_Nom[cla], font_normal_6));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                table.AddCell(cell);

                                string sq4 = "SELECT COUNT(DISTINCT id_etudiant) FROM etudiant_inscription WHERE id_classe=@id_classe AND id_annee=@id_annee  AND id_departement=@id_departement";
                                MySqlCommand cmd4 = new MySqlCommand(sq4, conn);
                                cmd4.Parameters.AddWithValue("@id_classe", Convert.ToInt32(Classe_ID[cla]));
                                cmd4.Parameters.AddWithValue("@id_departement", Convert.ToInt32(Departement_ID[dpt]));
                                cmd4.Parameters.AddWithValue("@id_annee", id_annee);

                                c_total = Convert.ToInt32(cmd4.ExecuteScalar());
                                d_total += c_total;


                                string sq5 = "SELECT COUNT(DISTINCT etudiant_inscription.id_etudiant)" +
                                    " FROM etudiant INNER JOIN etudiant_inscription ON etudiant.id_etudiant = etudiant_inscription.id_etudiant" +
                                    " WHERE etudiant.genre=@genre AND etudiant_inscription.id_classe=@id_classe AND  etudiant_inscription.id_departement=@id_departement AND  etudiant_inscription.id_annee=@id_annee";
                                MySqlCommand cmd5 = new MySqlCommand(sq5, conn);
                                cmd5.Parameters.AddWithValue("@id_classe", Convert.ToInt32(Classe_ID[cla]));
                                cmd5.Parameters.AddWithValue("@genre", "F");
                                cmd5.Parameters.AddWithValue("@id_departement", Convert.ToInt32(Departement_ID[dpt]));
                                cmd5.Parameters.AddWithValue("@id_annee", id_annee);
                                c_total_f = Convert.ToInt32(cmd5.ExecuteScalar());
                                d_total_f += c_total_f;



                                string sq6 = "SELECT COUNT(DISTINCT etudiant_inscription.id_etudiant)" +
                                    " FROM etudiant INNER JOIN etudiant_inscription ON etudiant.id_etudiant = etudiant_inscription.id_etudiant" +
                                    " WHERE etudiant.genre=@genre AND etudiant_inscription.id_classe=@id_classe AND  etudiant_inscription.id_departement=@id_departement AND  etudiant_inscription.id_annee=@id_annee";
                                MySqlCommand cmd6 = new MySqlCommand(sq6, conn);
                                cmd6.Parameters.AddWithValue("@id_classe", Convert.ToInt32(Classe_ID[cla]));
                                cmd6.Parameters.AddWithValue("@genre", "M");
                                cmd6.Parameters.AddWithValue("@id_departement", Convert.ToInt32(Departement_ID[dpt]));
                                cmd6.Parameters.AddWithValue("@id_annee", id_annee);

                                c_total_m = Convert.ToInt32(cmd6.ExecuteScalar());
                                d_total_m += c_total_m;

                                string sq11 = "SELECT COUNT(DISTINCT etudiant_inscription.id_etudiant)" +
                                    " FROM etudiant INNER JOIN etudiant_inscription ON etudiant.id_etudiant = etudiant_inscription.id_etudiant" +
                                    " WHERE etudiant.genre=@genre AND etudiant.naissance_pays!=@naissance_pays AND etudiant_inscription.id_classe=@id_classe AND  etudiant_inscription.id_departement=@id_departement AND  etudiant_inscription.id_annee=@id_annee";
                                MySqlCommand cmd11 = new MySqlCommand(sq11, conn);
                                cmd11.Parameters.AddWithValue("@id_classe", Convert.ToInt32(Classe_ID[cla]));
                                cmd11.Parameters.AddWithValue("@genre", "F");
                                cmd11.Parameters.AddWithValue("@naissance_pays", "Burundi");
                                cmd11.Parameters.AddWithValue("@id_departement", Convert.ToInt32(Departement_ID[dpt]));
                                cmd11.Parameters.AddWithValue("@id_annee", id_annee);

                                c_etranger_f = Convert.ToInt32(cmd11.ExecuteScalar());

                                d_etranger_f += c_etranger_f;
                                d_etranger += c_etranger_f;



                                string sq12 = "SELECT COUNT(DISTINCT etudiant_inscription.id_etudiant)" +
                                    " FROM etudiant INNER JOIN etudiant_inscription ON etudiant.id_etudiant = etudiant_inscription.id_etudiant" +
                                    " WHERE etudiant.genre=@genre AND etudiant.naissance_pays!=@naissance_pays AND etudiant_inscription.id_classe=@id_classe AND  etudiant_inscription.id_departement=@id_departement AND  etudiant_inscription.id_annee=@id_annee";
                                MySqlCommand cmd12 = new MySqlCommand(sq12, conn);
                                cmd12.Parameters.AddWithValue("@id_classe", Convert.ToInt32(Classe_ID[cla]));
                                cmd12.Parameters.AddWithValue("@genre", "M");
                                cmd12.Parameters.AddWithValue("@naissance_pays", "Burundi");
                                cmd12.Parameters.AddWithValue("@id_departement", Convert.ToInt32(Departement_ID[dpt]));
                                cmd12.Parameters.AddWithValue("@id_annee", id_annee);

                                c_etranger_m = Convert.ToInt32(cmd12.ExecuteScalar());
                                c_etranger = c_etranger_f + c_etranger_m;

                                d_etanger_m += c_etranger_m;
                                d_etranger += c_etranger_m;




                                string sq7 = "SELECT COUNT(DISTINCT etudiant_inscription.id_etudiant)" +
                                    " FROM etudiant INNER JOIN etudiant_inscription ON etudiant.id_etudiant = etudiant_inscription.id_etudiant" +
                                    " WHERE etudiant.genre=@genre AND etudiant.boursier=@boursier AND etudiant_inscription.id_classe=@id_classe AND  etudiant_inscription.id_departement=@id_departement AND  etudiant_inscription.id_annee=@id_annee";
                                MySqlCommand cmd7 = new MySqlCommand(sq7, conn);
                                cmd7.Parameters.AddWithValue("@id_classe", Convert.ToInt32(Classe_ID[cla]));
                                cmd7.Parameters.AddWithValue("@genre", "F");
                                cmd7.Parameters.AddWithValue("@boursier", "Oui");
                                cmd7.Parameters.AddWithValue("@id_departement", Convert.ToInt32(Departement_ID[dpt]));
                                cmd7.Parameters.AddWithValue("@id_annee", id_annee);

                                c_boursier_f = Convert.ToInt32(cmd7.ExecuteScalar());


                                d_boursier_f += c_boursier_f;
                                d_boursier += c_boursier_f;

                                string sq8 = "SELECT COUNT(DISTINCT etudiant_inscription.id_etudiant)" +
                                    " FROM etudiant INNER JOIN etudiant_inscription ON etudiant.id_etudiant = etudiant_inscription.id_etudiant" +
                                    " WHERE etudiant.genre=@genre AND etudiant.boursier=@boursier AND etudiant_inscription.id_classe=@id_classe AND  etudiant_inscription.id_departement=@id_departement AND  etudiant_inscription.id_annee=@id_annee";
                                MySqlCommand cmd8 = new MySqlCommand(sq8, conn);
                                cmd8.Parameters.AddWithValue("@id_classe", Convert.ToInt32(Classe_ID[cla]));
                                cmd8.Parameters.AddWithValue("@genre", "M");
                                cmd8.Parameters.AddWithValue("@boursier", "Oui");
                                cmd8.Parameters.AddWithValue("@id_departement", Convert.ToInt32(Departement_ID[dpt]));
                                cmd8.Parameters.AddWithValue("@id_annee", id_annee);

                                c_boursier_m = Convert.ToInt32(cmd8.ExecuteScalar());

                                c_boursier = c_boursier_f + c_boursier_m;

                                d_boursier_m += c_boursier_m;
                                d_boursier += c_boursier_m;




                                string sq9 = "SELECT COUNT(DISTINCT etudiant_inscription.id_etudiant)" +
                                    " FROM etudiant INNER JOIN etudiant_inscription ON etudiant.id_etudiant = etudiant_inscription.id_etudiant" +
                                    " WHERE etudiant.genre=@genre AND etudiant.hebergement=@logement AND etudiant_inscription.id_classe=@id_classe AND  etudiant_inscription.id_departement=@id_departement AND  etudiant_inscription.id_annee=@id_annee";
                                MySqlCommand cmd9 = new MySqlCommand(sq9, conn);
                                cmd9.Parameters.AddWithValue("@id_classe", Convert.ToInt32(Classe_ID[cla]));
                                cmd9.Parameters.AddWithValue("@genre", "F");
                                cmd9.Parameters.AddWithValue("@logement", 1);
                                cmd9.Parameters.AddWithValue("@id_departement", Convert.ToInt32(Departement_ID[dpt]));
                                cmd9.Parameters.AddWithValue("@id_annee", id_annee);

                                c_loge_f = Convert.ToInt32(cmd9.ExecuteScalar());
                                d_loge_f += c_loge_f;
                                d_loge += c_loge_f;



                                string sq10 = "SELECT COUNT(DISTINCT etudiant_inscription.id_etudiant)" +
                                    " FROM etudiant INNER JOIN etudiant_inscription ON etudiant.id_etudiant = etudiant_inscription.id_etudiant" +
                                    " WHERE etudiant.genre=@genre AND etudiant.hebergement=@logement AND etudiant_inscription.id_classe=@id_classe AND  etudiant_inscription.id_departement=@id_departement AND  etudiant_inscription.id_annee=@id_annee";
                                MySqlCommand cmd10 = new MySqlCommand(sq10, conn);
                                cmd10.Parameters.AddWithValue("@id_classe", Convert.ToInt32(Classe_ID[cla]));
                                cmd10.Parameters.AddWithValue("@genre", "M");
                                cmd10.Parameters.AddWithValue("@logement", 1);
                                cmd10.Parameters.AddWithValue("@id_departement", Convert.ToInt32(Departement_ID[dpt]));
                                cmd10.Parameters.AddWithValue("@id_annee", id_annee);

                                c_loge_m = Convert.ToInt32(cmd10.ExecuteScalar());
                                c_loge = c_loge_f + c_loge_m;
                                d_loge_m += c_loge_m;
                                d_loge += c_loge_m;






                                cell = new PdfPCell(new Phrase(c_total_f.ToString(), font_normal_6));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                table.AddCell(cell);

                                cell = new PdfPCell(new Phrase(c_total_m.ToString(), font_normal_6));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                table.AddCell(cell);

                                cell = new PdfPCell(new Phrase(c_total.ToString(), font_normal_6));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                table.AddCell(cell);


                                cell = new PdfPCell(new Phrase(c_etranger_f.ToString(), font_normal_6));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                table.AddCell(cell);

                                cell = new PdfPCell(new Phrase(c_etranger_m.ToString(), font_normal_6));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                table.AddCell(cell);

                                cell = new PdfPCell(new Phrase(c_etranger.ToString(), font_normal_6));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                table.AddCell(cell);

                                cell = new PdfPCell(new Phrase(c_boursier_f.ToString(), font_normal_6));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                table.AddCell(cell);

                                cell = new PdfPCell(new Phrase(c_boursier_m.ToString(), font_normal_6));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                table.AddCell(cell);

                                cell = new PdfPCell(new Phrase(c_boursier.ToString(), font_normal_6));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                table.AddCell(cell);



                                cell = new PdfPCell(new Phrase(c_loge_f.ToString(), font_normal_6));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                table.AddCell(cell);

                                cell = new PdfPCell(new Phrase(c_loge_m.ToString(), font_normal_6));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                table.AddCell(cell);

                                cell = new PdfPCell(new Phrase(c_loge.ToString(), font_normal_6));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                table.AddCell(cell);


                                cell = new PdfPCell(new Phrase(c_redoublant_f.ToString(), font_normal_6));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                table.AddCell(cell);

                                cell = new PdfPCell(new Phrase(c_redoublant_m.ToString(), font_normal_6));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                table.AddCell(cell);

                                cell = new PdfPCell(new Phrase(c_redoublant.ToString(), font_normal_6));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                table.AddCell(cell);



                                cell = new PdfPCell(new Phrase(c_abandon_f.ToString(), font_normal_6));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                table.AddCell(cell);

                                cell = new PdfPCell(new Phrase(c_abandon_m.ToString(), font_normal_6));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                table.AddCell(cell);

                                cell = new PdfPCell(new Phrase(c_abandon.ToString(), font_normal_6));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                table.AddCell(cell);
                            }

                            cell = new PdfPCell(new Phrase(" ", font_normal_6));
                            cell.HorizontalAlignment = Element.ALIGN_LEFT;
                            cell.BorderWidth = 0;
                            cell.Colspan = 2;
                            table.AddCell(cell);

                            cell = new PdfPCell(new Phrase(d_total_f.ToString(), font_normal_6));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);

                            cell = new PdfPCell(new Phrase(d_total_m.ToString(), font_normal_6));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);

                            cell = new PdfPCell(new Phrase(d_total.ToString(), font_normal_6));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);


                            cell = new PdfPCell(new Phrase(d_etranger_f.ToString(), font_normal_6));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);

                            cell = new PdfPCell(new Phrase(d_etanger_m.ToString(), font_normal_6));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);

                            cell = new PdfPCell(new Phrase(d_etranger.ToString(), font_normal_6));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);

                            cell = new PdfPCell(new Phrase(d_boursier_f.ToString(), font_normal_6));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);

                            cell = new PdfPCell(new Phrase(d_boursier_m.ToString(), font_normal_6));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);

                            cell = new PdfPCell(new Phrase(d_boursier.ToString(), font_normal_6));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);


                            cell = new PdfPCell(new Phrase(d_loge_f.ToString(), font_normal_6));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);

                            cell = new PdfPCell(new Phrase(d_loge_m.ToString(), font_normal_6));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);

                            cell = new PdfPCell(new Phrase(d_loge.ToString(), font_normal_6));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);


                            cell = new PdfPCell(new Phrase(d_redoublant_f.ToString(), font_normal_6));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);

                            cell = new PdfPCell(new Phrase(d_redoublant_m.ToString(), font_normal_6));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);

                            cell = new PdfPCell(new Phrase(d_redoublant.ToString(), font_normal_6));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);



                            cell = new PdfPCell(new Phrase(d_abandon_f.ToString(), font_normal_6));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);

                            cell = new PdfPCell(new Phrase(d_abandon_m.ToString(), font_normal_6));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);

                            cell = new PdfPCell(new Phrase(d_abandon.ToString(), font_normal_6));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            table.AddCell(cell);
                        }
                    }
                }
                conn.Close();
            }
            catch (Exception ex)
            {
                //MessageBox.Show(ex.Message);
            }

            doc.Add(table);

            PdfPTable tVisa = new PdfPTable(5);
            float[] colwithv = { 7f, 7f, 7f, 7f, 12f };
            tVisa.SetWidths(colwithv);


            cell = new PdfPCell(new Phrase("", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 5;
            tVisa.AddCell(cell);

            cell = new PdfPCell(new Phrase("", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 5;
            tVisa.AddCell(cell);

            cell = new PdfPCell(new Phrase("", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 5;
            tVisa.AddCell(cell);

            cell = new PdfPCell(new Phrase(" ", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 2;
            tVisa.AddCell(cell);

            cell = new PdfPCell(new Phrase("", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 2;
            tVisa.AddCell(cell);

            string dat = "Fait à " + siege + " ,le " + DateTime.Today.Date.ToShortDateString();
            string nom_rect = "La Direction";

            //cell = new PdfPCell(new Phrase(dat + "\n\n" + nom_rect, font_bold_8));
            cell = new PdfPCell(new Phrase(dat + " ", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            tVisa.AddCell(cell);

            Paragraph pVisa = new Paragraph();
            //parf.IndentationLeft = 240;
            pVisa.Alignment = Element.ALIGN_CENTER;
            pVisa.SpacingAfter = 10;
            pVisa.SpacingBefore = 10;
            pVisa.Add(tVisa);

            doc.Add(pVisa);

            wri.PageEvent = new Foot();
            doc.Close();
            System.Diagnostics.Process.Start(outputFile);
        }
        public void Etudiants_Statistiques_Par_Categorie_Age(int id_an, string ann, int id_fac, string fac)
        {
            Create_Folder();
            int id_annee = id_an;
            string annee = ann;
            int id_faculte = id_fac;
            string faculte = fac;

            DateTime dt = DateTime.Now;
            int ans = dt.Year;
            int mois = dt.Month;
            int jour = dt.Day;
            int heure = dt.Hour;
            int min = dt.Minute;
            int sec = dt.Month;
            string date = jour + "-" + mois + "-" + ans + "_à_" + heure + "h" + min + "min" + sec + "sec";

            iTextSharp.text.Document doc = new iTextSharp.text.Document(iTextSharp.text.PageSize.A4, 0, 0, 50, 10);
            string docname = "Stat_type_5_" + date + ".pdf";
            string outputFile = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.Desktop), @"BMDSys", docname);
            FileStream fs = new FileStream(outputFile, FileMode.Create, FileAccess.Write, FileShare.None);
            PdfWriter wri = PdfWriter.GetInstance(doc, fs);
            doc.Open();


            string[] Deptmnt_ID = new string[10000];
            string[] Deptmnt_Nom = new string[10000];
            string[] Etudiant_ID = new string[10000];

            conn = new MySqlConnection(Authentification.MyString);
            conn.Open();
            string universite = Load_Institution(conn);
            string coordonee = Load_Adress(conn);
            string value = coordonee;
            string[] op = value.Split('-');
            site = op[0];
            siege = op[1];
            telephone = op[2];
            b_postale = op[3];


            PdfPCell cell = new PdfPCell(new Phrase("", font_bold_10));
            PdfPTable table1 = first_header(conn, universite, ref cell, faculte);
            doc.Add(table1);



            iTextSharp.text.Paragraph txt_t = new iTextSharp.text.Paragraph(" ", font_bold_7);
            txt_t.Alignment = Element.ALIGN_CENTER;
            txt_t.SpacingBefore = 10;
            txt_t.SpacingAfter = 10;
            doc.Add(txt_t);

            Paragraph parf = new Paragraph();
            string ta = "STATISTIQUES GLOBALES DES ETUDIANTS PAR CATEGORIES D'AGES: A.A " + annee;
            parf.Add(new Phrase(ta, font_normal_underlined_8));
            parf.Alignment = Element.ALIGN_CENTER;

            parf.SpacingBefore = 5;
            parf.SpacingAfter = 15;
            doc.Add(parf);





            //CORPS DU RAPPORT 
            PdfPTable table = new PdfPTable(16);
            table.HorizontalAlignment = Element.ALIGN_CENTER;
            float[] colwiths = { 60f, 30f, 28f, 25f, 25f, 25f, 25f, 25f, 25f, 25f, 25f, 25f, 25f, 25f, 25f, 28f };
            table.SetWidths(colwiths);//appliquer ces dimenstions a l atable


            cell = new PdfPCell(new Phrase("DEPARTEMENT", font_normal_7));
            cell.Rowspan = 2;
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("GENRE", font_normal_7));
            cell.Rowspan = 2;
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("CATEGORIES D'AGES", font_normal_7));
            cell.Colspan = 14;
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            table.AddCell(cell);

            //PdfPCell cell_lic = new PdfPCell(new Phrase(""));
            cell = new PdfPCell(new Phrase("<19ans", font_normal_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("19ans", font_normal_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("20ans", font_normal_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("21ans", font_normal_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);


            cell = new PdfPCell(new Phrase("22ans", font_normal_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("23ans", font_normal_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("24ans", font_normal_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("25ans", font_normal_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("26ans", font_normal_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("27ans", font_normal_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("28ans", font_normal_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("29ans", font_normal_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("30ans", font_normal_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase(">30ans", font_normal_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);
            try
            {

                //Trouver le nombre de departements
                string sql0 = "SELECT COUNT(DISTINCT id_departement)FROM departement_par_faculte WHERE id_annee=@idaa";
                MySqlCommand cmd0 = new MySqlCommand(sql0, conn);
                cmd0.Parameters.AddWithValue("@idaa", id_annee);
                int nbre_departement = Convert.ToInt32(cmd0.ExecuteScalar());
                Deptmnt_ID = new string[nbre_departement];
                Deptmnt_Nom = new string[nbre_departement];

                ////MessageBox.Show(nbre_departement.ToString());
                string sql1 = "SELECT DISTINCT departement_par_faculte.id_departement, departement.departement" +
                    " FROM departement_par_faculte INNER JOIN departement ON departement_par_faculte.id_departement = departement.id_departement" +
                    " WHERE departement_par_faculte.id_annee=@idaa";
                MySqlCommand cmd1 = new MySqlCommand(sql1, conn);
                cmd1.Parameters.AddWithValue("@idaa", id_annee);
                MySqlDataReader dr1 = cmd1.ExecuteReader();
                int j = 0;
                while (dr1.Read())
                {
                    Deptmnt_ID[j] = string.Format("{0}", dr1.GetInt32(0).ToString());
                    Deptmnt_Nom[j] = string.Format("{0}", dr1.GetString(1));
                    ////MessageBox.Show(Deptmnt_ID[j] + "-" + Deptmnt_Nom[j]);
                    j++;
                }
                dr1.Close();

                int cpt = 0;
                int s_moins_19 = 0, s_moins_19_F = 0, s_19 = 0, s_19_F = 0, s_20 = 0, s_20_F = 0, s_21 = 0, s_21_F = 0, s_22 = 0, s_22_F = 0, s_23 = 0, s_23_F = 0, s_24 = 0, s_24_F = 0, s_25 = 0, s_25_F = 0, s_26 = 0, s_26_F = 0, s_27 = 0, s_27_F = 0, s_28 = 0, s_28_F = 0, s_29 = 0, s_29_F = 0, s_30 = 0, s_30_F = 0, s_plus_30 = 0, s_plus_30_F = 0;
                int t_moins_19 = 0, t_19 = 0, t_20 = 0, t_21 = 0, t_22 = 0, t_23 = 0, t_24 = 0, t_25 = 0, t_26 = 0, t_27 = 0, t_28 = 0, t_29 = 0, t_30 = 0, t_plus_30 = 0;
                for (int a = 0; a < nbre_departement; a++)
                {
                    cell = new PdfPCell(new Phrase(Deptmnt_Nom[a], font_normal_7));
                    cell.Rowspan = 3;
                    cell.HorizontalAlignment = Element.ALIGN_LEFT;
                    cell.VerticalAlignment = Element.ALIGN_MIDDLE;
                    cell.BorderWidthRight = 0;
                    table.AddCell(cell);

                    string sq2 = "SELECT COUNT(DISTINCT etudiant_inscription.id_etudiant)" +
                        " FROM (etudiant_inscription INNER JOIN departement ON etudiant_inscription.id_departement = departement.id_departement) INNER JOIN departement_par_faculte ON departement.id_departement = departement_par_faculte.id_departement" +
                        " WHERE etudiant_inscription.id_departement=@idep";
                    MySqlCommand cmd2 = new MySqlCommand(sq2, conn);
                    cmd2.Parameters.AddWithValue("@idep", Convert.ToInt32(Deptmnt_ID[a]));
                    int totl_etudiant = Convert.ToInt32(cmd2.ExecuteScalar());

                    Etudiant_ID = new string[totl_etudiant];
                    string sq3 = "SELECT DISTINCT etudiant_inscription.id_etudiant" +
                        " FROM (etudiant_inscription INNER JOIN departement ON etudiant_inscription.id_departement = departement.id_departement) INNER JOIN departement_par_faculte ON departement.id_departement = departement_par_faculte.id_departement" +
                        " WHERE etudiant_inscription.id_departement=@idep";
                    MySqlCommand cmd3 = new MySqlCommand(sq3, conn);
                    cmd3.Parameters.AddWithValue("@idep", Convert.ToInt32(Deptmnt_ID[a]));
                    MySqlDataReader dr2 = cmd3.ExecuteReader();
                    int b = 0;
                    while (dr2.Read())
                    {
                        Etudiant_ID[b] = string.Format("{0}", dr2.GetInt32(0).ToString());
                        b++;
                    }
                    dr2.Close();
                    for (int c = 0; c < totl_etudiant; c++)
                    {
                        string sq4 = "SELECT genre,naissance_date FROM etudiant WHERE id_etudiant=@idet";
                        MySqlCommand cmd4 = new MySqlCommand(sq4, conn);
                        cmd4.Parameters.AddWithValue("@idet", Convert.ToInt32(Etudiant_ID[c]));
                        MySqlDataReader dr3 = cmd4.ExecuteReader();
                        while (dr3.Read())
                        {

                            string genre = dr3.GetString(0);

                            string date_naissance = dr3.GetString(1);
                            string[] years = date_naissance.Split('/');
                            int annee_naissance = Convert.ToInt32(years[2]);
                            int current_year = Convert.ToInt32(DateTime.Now.Year);


                            /*DateTime dt = Convert.ToDateTime(date_naissance);
                            int annee_naissance = Convert.ToInt16(dt.Year);*/

                            //int age = e_statistique.annee_precise - annee_naissance;
                            int age = current_year - annee_naissance;
                            ////MessageBox.Show(age + "");
                            if (age < 19)
                            {
                                if (genre == "F")
                                {
                                    s_moins_19_F++;
                                    s_moins_19++;
                                }
                                else
                                {
                                    s_moins_19++;
                                }
                                t_moins_19++;
                            }
                            else if (age > 30)
                            {
                                if (genre == "F")
                                {
                                    s_plus_30_F++;
                                    s_plus_30++;
                                }
                                else
                                {
                                    s_plus_30++;
                                }
                                t_plus_30++;
                            }
                            else
                            {
                                switch (age)
                                {
                                    case 19:
                                        if (genre == "F")
                                        {
                                            s_19_F++;
                                            s_19++;
                                        }
                                        else
                                        {
                                            s_19++;
                                        }
                                        t_19++;
                                        break;
                                    case 20:
                                        if (genre == "F")
                                        {
                                            s_20_F++;
                                            s_20++;
                                        }
                                        else
                                        {
                                            s_20++;
                                        }
                                        t_20++;
                                        break;
                                    case 21:
                                        if (genre == "F")
                                        {
                                            s_21_F++;
                                            s_21++;
                                        }
                                        else
                                        {
                                            s_21++;
                                        }
                                        t_21++;
                                        break;
                                    case 22:
                                        if (genre == "F")
                                        {
                                            s_22_F++;
                                            s_22++;
                                        }
                                        else
                                        {
                                            s_22++;
                                        }
                                        t_22++;
                                        break;
                                    case 23:
                                        if (genre == "F")
                                        {
                                            s_23_F++;
                                            s_23++;
                                        }
                                        else
                                        {
                                            s_23++;
                                        }
                                        t_23++;
                                        break;
                                    case 24:
                                        if (genre == "F")
                                        {
                                            s_24_F++;
                                            s_24++;
                                        }
                                        else
                                        {
                                            s_24++;
                                        }
                                        t_24++;
                                        break;
                                    case 25:
                                        if (genre == "F")
                                        {
                                            s_25_F++;
                                            s_25++;
                                        }
                                        else
                                        {
                                            s_25++;
                                        }
                                        t_25++;
                                        break;
                                    case 26:
                                        if (genre == "F")
                                        {
                                            s_26_F++;
                                            s_26++;
                                        }
                                        else
                                        {
                                            s_26++;
                                        }
                                        t_26++;
                                        break;
                                    case 27:
                                        if (genre == "F")
                                        {
                                            s_27_F++;
                                            s_27++;
                                        }
                                        else
                                        {
                                            s_27++;
                                        }
                                        t_27++;
                                        break;
                                    case 28:
                                        if (genre == "F")
                                        {
                                            s_28_F++;
                                            s_28++;
                                        }
                                        else
                                        {
                                            s_28++;
                                        }
                                        t_28++;
                                        break;
                                    case 29:
                                        if (genre == "F")
                                        {
                                            s_29_F++;
                                            s_29++;
                                        }
                                        else
                                        {
                                            s_29++;
                                        }
                                        t_29++;
                                        break;
                                    case 30:
                                        if (genre == "F")
                                        {
                                            s_30_F++;
                                            s_30++;
                                        }
                                        else
                                        {
                                            s_30++;
                                        }
                                        t_30++;
                                        break;

                                    default:
                                        break;
                                }
                            }

                        }
                        dr3.Close();
                    }
                    cell = new PdfPCell(new Phrase("F", font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    //cell.BorderWidth = 1;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(s_moins_19_F.ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(s_19_F.ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(s_20_F.ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(s_21_F.ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);
                    cell = new PdfPCell(new Phrase(s_22_F.ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(s_23_F.ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(s_24_F.ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(s_25_F.ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(s_26_F.ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(s_27_F.ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(s_28_F.ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(s_29_F.ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(s_30_F.ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);


                    cell = new PdfPCell(new Phrase(s_plus_30_F.ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase("M", font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    //cell.BorderWidth = 1;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase((s_moins_19 - s_moins_19_F).ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase((s_19 - s_19_F).ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase((s_20 - s_20_F).ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase((s_21 - s_21_F).ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase((s_22 - s_22_F).ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase((s_23 - s_23_F).ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase((s_24 - s_24_F).ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase((s_25 - s_25_F).ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase((s_26 - s_26_F).ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase((s_27 - s_27_F).ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase((s_28 - s_28_F).ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase((s_29 - s_29_F).ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase((s_30 - s_30_F).ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase((s_plus_30 - s_plus_30_F).ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);








                    cell = new PdfPCell(new Phrase(" ", font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BorderWidth = 0;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(s_moins_19.ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(s_19.ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(s_20.ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(s_21.ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(s_22.ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(s_23.ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(s_24.ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(s_25.ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(s_26.ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(s_27.ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(s_28.ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(s_29.ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(s_30.ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(s_plus_30.ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    table.AddCell(cell);

                    cpt = 0;
                    s_moins_19 = 0;
                    s_moins_19_F = 0;
                    s_19 = 0;
                    s_19_F = 0;
                    s_20 = 0;
                    s_20_F = 0;
                    s_21 = 0;
                    s_21_F = 0;
                    s_22 = 0;
                    s_22_F = 0;
                    s_23 = 0;
                    s_23_F = 0;
                    s_24 = 0;
                    s_24_F = 0;
                    s_25 = 0;
                    s_25_F = 0;
                    s_26 = 0;
                    s_26_F = 0;
                    s_27 = 0;
                    s_27_F = 0;
                    s_28 = 0;
                    s_28_F = 0;
                    s_29 = 0;
                    s_29_F = 0;
                    s_30 = 0;
                    s_30_F = 0;
                    s_plus_30 = 0;
                    s_plus_30_F = 0;
                }
                cell = new PdfPCell(new Phrase("STATISTIQUES GLOBALES", font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.Colspan = 2;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(t_moins_19.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(t_19.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(t_20.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(t_21.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(t_22.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(t_23.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(t_24.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(t_25.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(t_26.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(t_27.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(t_28.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(t_29.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(t_30.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(t_plus_30.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);
                conn.Close();
            }
            catch (Exception ex)
            {
                //MessageBox.Show(ex.Message);
            }
            //ajouter la table
            doc.Add(table);

            PdfPTable tVisa = new PdfPTable(5);
            float[] colwithv = { 7f, 7f, 7f, 7f, 12f };
            tVisa.SetWidths(colwithv);


            cell = new PdfPCell(new Phrase("", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 5;
            tVisa.AddCell(cell);

            cell = new PdfPCell(new Phrase("", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 5;
            tVisa.AddCell(cell);

            cell = new PdfPCell(new Phrase("", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 5;
            tVisa.AddCell(cell);

            cell = new PdfPCell(new Phrase(" ", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 2;
            tVisa.AddCell(cell);

            cell = new PdfPCell(new Phrase("", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 2;
            tVisa.AddCell(cell);

            string dat = "Fait à " + siege + " ,le " + DateTime.Today.Date.ToShortDateString();
            string nom_rect = "La Direction";

            //cell = new PdfPCell(new Phrase(dat + "\n\n" + nom_rect, font_bold_8));
            cell = new PdfPCell(new Phrase(dat + " ", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            tVisa.AddCell(cell);

            Paragraph pVisa = new Paragraph();
            //parf.IndentationLeft = 240;
            pVisa.Alignment = Element.ALIGN_CENTER;
            pVisa.SpacingAfter = 10;
            pVisa.SpacingBefore = 10;
            pVisa.Add(tVisa);

            doc.Add(pVisa);

            wri.PageEvent = new Foot();
            doc.Close();
            System.Diagnostics.Process.Start(outputFile);
        }
        public void Etudiants_Etrangers_par_faculté_et_pays_origine(int idan, string ann, int id_fac, string fac)
        {
            int id_annee = idan;
            string annee = ann;
            int id_faculte = id_fac;
            string faculte = fac;

            Create_Folder();

            string[] Faculte_ID, Faculte_Nom, Etudiant_ID;

            DateTime dt = DateTime.Now;
            int ans = dt.Year;
            int mois = dt.Month;
            int jour = dt.Day;
            int heure = dt.Hour;
            int min = dt.Minute;
            int sec = dt.Month;
            string date = jour + "-" + mois + "-" + ans + "_à_" + heure + "h" + min + "min" + sec + "sec";

            iTextSharp.text.Document doc = new iTextSharp.text.Document(iTextSharp.text.PageSize.A4, 0, 0, 50, 10);
            string docname = "Stat_type_6_ " + date + ".pdf";
            string outputFile = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.Desktop), @"BMDSys", docname);
            FileStream fs = new FileStream(outputFile, FileMode.Create, FileAccess.Write, FileShare.None);
            PdfWriter wri = PdfWriter.GetInstance(doc, fs);
            doc.Open();

            conn = new MySqlConnection(Authentification.MyString);
            conn.Open();


            string universite = Load_Institution(conn);
            string coordonee = Load_Adress(conn);
            string value = coordonee;
            string[] op = value.Split('-');
            site = op[0];
            siege = op[1];
            telephone = op[2];
            b_postale = op[3];


            PdfPCell cell = new PdfPCell(new Phrase("", font_bold_10));
            PdfPTable table1 = first_header(conn, universite, ref cell, faculte);
            doc.Add(table1);



            iTextSharp.text.Paragraph txt_t = new iTextSharp.text.Paragraph(" ", font_bold_7);
            txt_t.Alignment = Element.ALIGN_CENTER;
            txt_t.SpacingBefore = 10;
            txt_t.SpacingAfter = 10;
            doc.Add(txt_t);

            Paragraph parf = new Paragraph();
            string header_titre = "REPARTITION DES ETUDIANTS ETRANGERS PAR PAYS D'ORIGINE: A.A " + annee;
            parf.Add(new Phrase(header_titre, font_normal_underlined_8));
            parf.Alignment = Element.ALIGN_CENTER;

            parf.SpacingBefore = 5;
            parf.SpacingAfter = 15;
            doc.Add(parf);






            //CORPS DU RAPPORT 
            PdfPTable table = new PdfPTable(9);
            table.HorizontalAlignment = Element.ALIGN_CENTER;
            float[] colwiths = { 100f, 30f, 25f, 30f, 35f, 20f, 30f, 20f, 20f };
            table.SetWidths(colwiths);//appliquer ces dimenstions a l atable

            cell = new PdfPCell(new Phrase("Faculte/Institut", font_normal_8));
            cell.Colspan = 1;
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Sexe", font_normal_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            cell.Colspan = 1;
            table.AddCell(cell);


            cell = new PdfPCell(new Phrase("RDC", font_normal_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            cell.Colspan = 1;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Rwanda", font_normal_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            cell.Colspan = 1;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Tanzanie", font_normal_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            cell.Colspan = 1;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Kenya", font_normal_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            cell.Colspan = 1;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Ouganda", font_normal_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            cell.Colspan = 1;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Autre", font_normal_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            cell.Colspan = 1;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Total", font_normal_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            cell.Colspan = 1;
            table.AddCell(cell);

            try
            {

                int rdc = 0, rdc_F = 0, rwa = 0, rwa_F = 0, ta = 0, ta_F = 0, ke = 0, ke_F = 0, uga = 0, uga_F = 0, autre = 0, autre_F = 0, Total = 0, Total_F = 0;
                int global_rdc = 0, global_rwa = 0, global_ta = 0, global_ke = 0, global_uga = 0, global_autre = 0, global_total = 0;

                string sql0 = "SELECT COUNT(DISTINCT id_faculte) FROM faculte_par_annee  WHERE id_annee=@id_annee";
                MySqlCommand cmd0 = new MySqlCommand(sql0, conn);
                cmd0.Parameters.AddWithValue("@id_annee", id_annee);
                int nbre_faculte = Convert.ToInt32(cmd0.ExecuteScalar());
                Faculte_ID = new string[nbre_faculte];
                Faculte_Nom = new string[nbre_faculte];

                string sql1 = "SELECT DISTINCT faculte_par_annee.id_faculte, faculte.faculte" +
                    " FROM faculte_par_annee INNER JOIN faculte ON faculte_par_annee.id_faculte = faculte.id_faculte" +
                    " WHERE faculte_par_annee.id_annee=@id_annee";
                MySqlCommand cmd1 = new MySqlCommand(sql1, conn);
                cmd1.Parameters.AddWithValue("@id_annee", id_annee);
                MySqlDataReader dr1 = cmd1.ExecuteReader();
                int j = 0;
                while (dr1.Read())
                {
                    Faculte_ID[j] = string.Format("{0}", dr1.GetInt32(0).ToString());
                    Faculte_Nom[j] = string.Format("{0}", dr1.GetString(1));
                    j++;
                }
                dr1.Close();

                int cpt = 0;

                for (int a = 0; a < nbre_faculte; a++)
                {
                    cpt = 0;
                    rdc = 0;
                    rdc_F = 0;
                    rwa = 0;
                    rwa_F = 0;
                    ta = 0;
                    ta_F = 0;
                    ke = 0;
                    ke_F = 0;
                    uga = 0;
                    uga_F = 0;
                    autre = 0;
                    autre_F = 0;
                    Total = 0;
                    Total_F = 0;


                    cell = new PdfPCell(new Phrase(Faculte_Nom[a], font_normal_8));
                    cell.Rowspan = 3;
                    cell.HorizontalAlignment = Element.ALIGN_LEFT;
                    cell.VerticalAlignment = Element.ALIGN_MIDDLE;
                    cell.BorderWidthRight = 0;
                    cell.BorderWidthLeft = 1;
                    table.AddCell(cell);

                    string sq2 = "SELECT COUNT(DISTINCT id_etudiant) FROM etudiant_inscription  WHERE id_faculte=@id_faculte AND id_annee=@id_annee";
                    MySqlCommand cmd2 = new MySqlCommand(sq2, conn);
                    cmd2.Parameters.AddWithValue("@id_faculte", Convert.ToInt32(Faculte_ID[a]));
                    cmd2.Parameters.AddWithValue("@id_annee", id_annee);
                    int totl_etudiant = Convert.ToInt32(cmd2.ExecuteScalar());
                    Etudiant_ID = new string[totl_etudiant];

                    string sq3 = "SELECT DISTINCT id_etudiant FROM etudiant_inscription  WHERE id_faculte=@id_faculte AND id_annee=@id_annee";
                    MySqlCommand cmd3 = new MySqlCommand(sq3, conn);
                    cmd3.Parameters.AddWithValue("@id_faculte", Convert.ToInt32(Faculte_ID[a]));
                    cmd3.Parameters.AddWithValue("@id_annee", id_annee);
                    MySqlDataReader dr2 = cmd3.ExecuteReader();
                    int b = 0;
                    while (dr2.Read())
                    {
                        Etudiant_ID[b] = string.Format("{0}", dr2.GetInt32(0).ToString());
                        b++;
                    }
                    dr2.Close();

                    //Il faudra verifier si ca se passe bien sinon utiliser b au lieu de totl_personne
                    for (int c = 0; c < totl_etudiant; c++)
                    {
                        string sq4 = "SELECT naissance_pays,genre FROM etudiant WHERE id_etudiant=@idet";
                        MySqlCommand cmd4 = new MySqlCommand(sq4, conn);
                        cmd4.Parameters.AddWithValue("@idet", Convert.ToInt32(Etudiant_ID[c]));
                        MySqlDataReader dr3 = cmd4.ExecuteReader();
                        while (dr3.Read())
                        {
                            string genre = dr3.GetString(1);
                            string pays = dr3.GetString(0);
                            switch (pays)
                            {
                                case "Burundi":
                                    break;
                                case "RDC":
                                    if (genre == "F")
                                    {
                                        rdc_F++;
                                        rdc++;
                                        Total_F++;
                                        Total++;
                                    }
                                    else
                                    {
                                        rdc++;
                                        Total++;
                                    }
                                    global_rdc++;
                                    global_total++; ;
                                    break;
                                case "Rwanda":
                                    if (genre == "F")
                                    {
                                        rwa_F++;
                                        rwa++;
                                        Total_F++;
                                        Total++;
                                    }
                                    else
                                    {
                                        rwa++;
                                        Total++;
                                    }
                                    global_rwa++;
                                    global_total++;
                                    break;
                                case "Tanzanie":
                                    if (genre == "F")
                                    {
                                        ta_F++;
                                        ta++;
                                        Total_F++;
                                        Total++;
                                    }
                                    else
                                    {
                                        ta++;
                                        Total++;
                                    }
                                    global_ta++;
                                    global_total++;
                                    break;
                                case "Kenya":
                                    if (genre == "F")
                                    {
                                        ke_F++;
                                        ke++;
                                        Total_F++;
                                        Total++;
                                    }
                                    else
                                    {
                                        ke++;
                                        Total++;
                                    }
                                    global_ke++;
                                    global_total++;
                                    break;
                                case "Ouganda":
                                    if (genre == "F")
                                    {
                                        uga_F++;
                                        uga++;
                                        Total_F++;
                                        Total++;
                                    }
                                    else
                                    {
                                        uga++;
                                        Total++;
                                    }
                                    global_uga++;
                                    global_total++;
                                    break;
                                default:
                                    if (genre == "F")
                                    {
                                        autre_F++;
                                        autre++;
                                        Total_F++;
                                        Total++;
                                    }
                                    else
                                    {
                                        autre++;
                                        Total++;
                                    }
                                    global_autre++;
                                    global_total++;
                                    break;
                            }
                        }
                        dr3.Close();
                    }
                    cell = new PdfPCell(new Phrase("F", font_normal_8));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(rdc_F.ToString(), font_normal_8));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(rwa_F.ToString(), font_normal_8));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(ta_F.ToString(), font_normal_8));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(ke_F.ToString(), font_normal_8));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(uga_F.ToString(), font_normal_8));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(autre_F.ToString(), font_normal_8));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(Total_F.ToString(), font_normal_8));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase("M", font_normal_8));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase((rdc - rdc_F).ToString(), font_normal_8));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase((rwa - rwa_F).ToString(), font_normal_8));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase((ta - ta_F).ToString(), font_normal_8));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase((ke - ke_F).ToString(), font_normal_8));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase((uga - uga_F).ToString(), font_normal_8));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase((autre - autre_F).ToString(), font_normal_8));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase((Total - Total_F).ToString(), font_normal_8));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase("", font_normal_8));
                    cell.BorderWidth = 0;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(rdc.ToString(), font_normal_8));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(rwa.ToString(), font_normal_8));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(ta.ToString(), font_normal_8));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(ke.ToString(), font_normal_8));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(uga.ToString(), font_normal_8));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(autre.ToString(), font_normal_8));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(Total.ToString(), font_normal_8));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    table.AddCell(cell);
                }
                cell = new PdfPCell(new Phrase("STATISTIQUES GLOBALES PAR PAYS", font_normal_8));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BackgroundColor = BaseColor.GRAY;
                cell.Colspan = 2;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(global_rdc.ToString(), font_normal_8));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(global_rwa.ToString(), font_normal_8));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(global_ta.ToString(), font_normal_8));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(global_ke.ToString(), font_normal_8));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(global_uga.ToString(), font_normal_8));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(global_autre.ToString(), font_normal_8));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(global_total.ToString(), font_normal_8));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.GRAY;
                table.AddCell(cell);

                /*global_rdc = 0;
                global_ke = 0;
                global_rwa = 0;
                global_ta = 0;
                global_total = 0;
                global_autre = 0;*/

                conn.Close();
            }
            catch (Exception ex)
            {
                //MessageBox.Show(ex.Message);
            }
            //ajouter la table
            doc.Add(table);

            PdfPTable tVisa = new PdfPTable(5);
            float[] colwithv = { 7f, 7f, 7f, 7f, 12f };
            tVisa.SetWidths(colwithv);


            cell = new PdfPCell(new Phrase("", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 5;
            tVisa.AddCell(cell);

            cell = new PdfPCell(new Phrase("", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 5;
            tVisa.AddCell(cell);

            cell = new PdfPCell(new Phrase("", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 5;
            tVisa.AddCell(cell);

            cell = new PdfPCell(new Phrase(" ", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 2;
            tVisa.AddCell(cell);

            cell = new PdfPCell(new Phrase("", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 2;
            tVisa.AddCell(cell);

            string dat = "Fait à " + siege + " ,le " + DateTime.Today.Date.ToShortDateString();
            string nom_rect = "La Direction";

            //cell = new PdfPCell(new Phrase(dat + "\n\n" + nom_rect, font_bold_8));
            cell = new PdfPCell(new Phrase(dat + " ", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            tVisa.AddCell(cell);

            Paragraph pVisa = new Paragraph();
            //parf.IndentationLeft = 240;
            pVisa.Alignment = Element.ALIGN_CENTER;
            pVisa.SpacingAfter = 10;
            pVisa.SpacingBefore = 10;
            pVisa.Add(tVisa);

            doc.Add(pVisa);

            wri.PageEvent = new Foot();
            doc.Close();
            System.Diagnostics.Process.Start(outputFile);
        }

        public void Personnel_Ensegnant_par_Nationalite_Vacation_Genre_Grade(int id_ann, string an)
        {

            int id_annee = id_ann;
            string annee = an;

            Create_Folder();

            string[] Vacation_ID = new string[100];
            string[] Vacation_Nom = new string[100];
            string[] Personnel_ID = new string[10000];

            DateTime dt = DateTime.Now;
            int ans = dt.Year;
            int mois = dt.Month;
            int jour = dt.Day;
            int heure = dt.Hour;
            int min = dt.Minute;
            int sec = dt.Month;
            string date = jour + "-" + mois + "-" + ans + "_à_" + heure + "h" + min + "min" + sec + "sec";

            iTextSharp.text.Document doc = new iTextSharp.text.Document(iTextSharp.text.PageSize.A4.Rotate(), 0, 0, 50, 10);
            string docname = "Stat_type_7_ " + date + ".pdf";
            string outputFile = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.Desktop), @"BMDSys", docname);
            FileStream fs = new FileStream(outputFile, FileMode.Create, FileAccess.Write, FileShare.None);
            PdfWriter wri = PdfWriter.GetInstance(doc, fs);
            doc.Open();

            conn = new MySqlConnection(Authentification.MyString);
            conn.Open();


            string universite = Load_Institution(conn);
            string coordonee = Load_Adress(conn);
            string value = coordonee;
            string[] op = value.Split('-');
            site = op[0];
            siege = op[1];
            telephone = op[2];
            b_postale = op[3];


            PdfPCell cell = new PdfPCell(new Phrase("", font_bold_10));
            PdfPTable table1 = first_header(conn, universite, ref cell, "");
            doc.Add(table1);



            iTextSharp.text.Paragraph txt_t = new iTextSharp.text.Paragraph(" ", font_bold_7);
            txt_t.Alignment = Element.ALIGN_CENTER;
            txt_t.SpacingBefore = 10;
            txt_t.SpacingAfter = 10;
            doc.Add(txt_t);

            Paragraph parf = new Paragraph();
            string header_titre = "REPARTITION DES ENSEIGNANTS PAR FACULTE, GRADE ET GENRE: A.A " + annee;
            parf.Add(new Phrase(header_titre, font_normal_underlined_8));
            parf.Alignment = Element.ALIGN_CENTER;

            parf.SpacingBefore = 5;
            parf.SpacingAfter = 15;
            doc.Add(parf);




            PdfPTable tLegenge = new PdfPTable(5);
            float[] legwidths = { 2f, 7f, 15f, 15f, 10f };
            tLegenge.SetWidths(legwidths);

            cell = new PdfPCell(new Phrase("LEGENDE", font_normal_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BackgroundColor = BaseColor.GRAY;
            cell.Colspan = 2;
            tLegenge.AddCell(cell);

            cell = new PdfPCell(new Phrase(" ", font_normal_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.Colspan = 3;
            cell.BorderWidth = 0;
            tLegenge.AddCell(cell);

            cell = new PdfPCell(new Phrase("AL", font_normal_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            tLegenge.AddCell(cell);

            cell = new PdfPCell(new Phrase("Assistant Licencié", font_normal_7));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            tLegenge.AddCell(cell);

            cell = new PdfPCell(new Phrase(" ", font_normal_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.Colspan = 3;
            cell.BorderWidth = 0;
            tLegenge.AddCell(cell);

            cell = new PdfPCell(new Phrase("AIr", font_normal_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            tLegenge.AddCell(cell);

            cell = new PdfPCell(new Phrase("Assistant Ingénieur", font_normal_7));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            tLegenge.AddCell(cell);

            cell = new PdfPCell(new Phrase(" ", font_normal_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.Colspan = 3;
            cell.BorderWidth = 0;
            tLegenge.AddCell(cell);

            cell = new PdfPCell(new Phrase("AL", font_normal_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            tLegenge.AddCell(cell);

            cell = new PdfPCell(new Phrase("Maitre-Assistant", font_normal_7));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            tLegenge.AddCell(cell);

            cell = new PdfPCell(new Phrase(" ", font_normal_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.Colspan = 3;
            cell.BorderWidth = 0;
            tLegenge.AddCell(cell);

            cell = new PdfPCell(new Phrase("CE", font_normal_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            tLegenge.AddCell(cell);

            cell = new PdfPCell(new Phrase("Chargé d'Enseignement", font_normal_7));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            tLegenge.AddCell(cell);

            cell = new PdfPCell(new Phrase(" ", font_normal_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.Colspan = 3;
            cell.BorderWidth = 0;
            tLegenge.AddCell(cell);

            cell = new PdfPCell(new Phrase("CC", font_normal_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            tLegenge.AddCell(cell);

            cell = new PdfPCell(new Phrase("Chargé des Cours", font_normal_7));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            tLegenge.AddCell(cell);

            cell = new PdfPCell(new Phrase(" ", font_normal_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.Colspan = 3;
            cell.BorderWidth = 0;
            tLegenge.AddCell(cell);

            cell = new PdfPCell(new Phrase("PA", font_normal_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            tLegenge.AddCell(cell);

            cell = new PdfPCell(new Phrase("Professeur Associé", font_normal_7));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            tLegenge.AddCell(cell);

            cell = new PdfPCell(new Phrase(" ", font_normal_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.Colspan = 3;
            cell.BorderWidth = 0;
            tLegenge.AddCell(cell);

            cell = new PdfPCell(new Phrase("PO", font_normal_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            tLegenge.AddCell(cell);

            cell = new PdfPCell(new Phrase("Professeur Ordinaire", font_normal_7));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            tLegenge.AddCell(cell);

            cell = new PdfPCell(new Phrase(" ", font_normal_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.Colspan = 3;
            cell.BorderWidth = 0;
            tLegenge.AddCell(cell);

            cell = new PdfPCell(new Phrase("PC", font_normal_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            tLegenge.AddCell(cell);

            cell = new PdfPCell(new Phrase("Professeur Chercheur", font_normal_7));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            tLegenge.AddCell(cell);

            cell = new PdfPCell(new Phrase(" ", font_normal_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.Colspan = 3;
            cell.BorderWidth = 0;
            tLegenge.AddCell(cell);
            doc.Add(tLegenge);

            iTextSharp.text.Paragraph txt_ta = new iTextSharp.text.Paragraph(" ", font_bold_7);
            txt_ta.Alignment = Element.ALIGN_CENTER;
            txt_ta.SpacingBefore = 10;
            txt_ta.SpacingAfter = 10;
            doc.Add(txt_ta);






            //CORPS DU RAPPORT 
            PdfPTable table = new PdfPTable(29);
            table.HorizontalAlignment = Element.ALIGN_CENTER;
            float[] colwiths = { 12, 7, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 };
            table.SetWidths(colwiths);

            try
            {

                cell = new PdfPCell(new Phrase("", font_normal_7));
                cell.Colspan = 2;
                cell.Rowspan = 2;
                cell.BorderWidth = 0;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("AL", font_normal_7));
                cell.Colspan = 3;
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.GRAY;
                table.AddCell(cell);


                cell = new PdfPCell(new Phrase("AIr", font_normal_7));
                cell.Colspan = 3;
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("MA", font_normal_7));
                cell.Colspan = 3;
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("CE", font_normal_7));
                cell.Colspan = 3;
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("CC", font_normal_7));
                cell.Colspan = 3;
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.GRAY;
                table.AddCell(cell);


                cell = new PdfPCell(new Phrase("PA", font_normal_7));
                cell.Colspan = 3;
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.GRAY;
                table.AddCell(cell);


                cell = new PdfPCell(new Phrase("PO", font_normal_7));
                cell.Colspan = 3;
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.GRAY;
                table.AddCell(cell);


                cell = new PdfPCell(new Phrase("PC", font_normal_7));
                cell.Colspan = 3;
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.GRAY;
                table.AddCell(cell);


                cell = new PdfPCell(new Phrase("TOT", font_normal_7));
                cell.Colspan = 3;
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("F", font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);


                cell = new PdfPCell(new Phrase("M", font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("TOT", font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("F", font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);
                cell = new PdfPCell(new Phrase("M", font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);
                cell = new PdfPCell(new Phrase("TOT", font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("F", font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);
                cell = new PdfPCell(new Phrase("M", font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);
                cell = new PdfPCell(new Phrase("TOT", font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);


                cell = new PdfPCell(new Phrase("F", font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);
                cell = new PdfPCell(new Phrase("M", font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);
                cell = new PdfPCell(new Phrase("TOT", font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);


                cell = new PdfPCell(new Phrase("F", font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);
                cell = new PdfPCell(new Phrase("M", font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);
                cell = new PdfPCell(new Phrase("TOT", font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);


                cell = new PdfPCell(new Phrase("F", font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);
                cell = new PdfPCell(new Phrase("M", font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);
                cell = new PdfPCell(new Phrase("TOT", font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);


                cell = new PdfPCell(new Phrase("F", font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);
                cell = new PdfPCell(new Phrase("M", font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);
                cell = new PdfPCell(new Phrase("TOT", font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);


                cell = new PdfPCell(new Phrase("F", font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);
                cell = new PdfPCell(new Phrase("M", font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);
                cell = new PdfPCell(new Phrase("TOT", font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);


                cell = new PdfPCell(new Phrase("F", font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);
                cell = new PdfPCell(new Phrase("M", font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);
                cell = new PdfPCell(new Phrase("TOT", font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);



                int cpt = 0;
                string nom_a_ecrire = "";


                string sqlv = "SELECT COUNT( DISTINCT id_vacation) FROM personnel_vacation";
                MySqlCommand cmdv = new MySqlCommand(sqlv, conn);
                int nbre_vacation = Convert.ToInt32(cmdv.ExecuteScalar());

                string sqlvv = "SELECT DISTINCT id_vacation,vacation FROM personnel_vacation";
                MySqlCommand cmdvv = new MySqlCommand(sqlvv, conn);
                MySqlDataReader drvv = cmdvv.ExecuteReader();
                int j = 0;
                while (drvv.Read())
                {
                    Vacation_ID[j] = string.Format("{0}", drvv.GetInt32(0).ToString());
                    Vacation_Nom[j] = string.Format("{0}", drvv.GetString(1));
                    j++;
                }
                drvv.Close();

                int Li, Li_F, Ir, Ir_F, MA, MA_F, CE, CE_F, CC, CC_F, PA, PA_F, PO, PO_F, PC, PC_F, Total, Total_F;
                int aLi = 0, aLi_F = 0, aIr = 0, aIr_F = 0, aMA = 0, aMA_F = 0, aCE = 0, aCE_F = 0, aCC = 0, aCC_F = 0, aPA = 0, aPA_F = 0, aPO = 0, aPO_F = 0, aPC = 0, aPC_F = 0, aTotal = 0, aTotal_F = 0;

                for (cpt = 0; cpt < 3; cpt++)
                {
                    switch (cpt)
                    {
                        case 0: nom_a_ecrire = "Nationaux";
                            break;
                        case 1: nom_a_ecrire = "Etrangers originaire de l'EAC";
                            break;
                        case 2: nom_a_ecrire = "Etrangers \nHors EAC";
                            break;
                    }

                    cell = new PdfPCell(new Phrase(nom_a_ecrire, font_normal_8));
                    cell.Rowspan = nbre_vacation;
                    cell.HorizontalAlignment = Element.ALIGN_LEFT;
                    cell.VerticalAlignment = Element.ALIGN_MIDDLE;
                    cell.BackgroundColor = BaseColor.GRAY;
                    table.AddCell(cell);

                    for (int a = 0; a < nbre_vacation; a++)
                    {
                        //Vacation
                        cell = new PdfPCell(new Phrase(Vacation_Nom[a], font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_LEFT;
                        cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        table.AddCell(cell);

                        Li = 0; Li_F = 0; Ir = 0; Ir_F = 0; MA = 0; MA_F = 0; CE = 0; CE_F = 0; CC = 0; CC_F = 0; PA = 0; PA_F = 0; PO = 0; PO_F = 0; PC = 0; PC_F = 0; Total = 0; Total_F = 0;
                        //aLi = 0; aLi_F = 0; aIr = 0; aIr_F = 0; aMA = 0; aMA_F = 0; aCE = 0; aCE_F = 0; aCC = 0; aCC_F = 0; aPA = 0; aPA_F = 0; aPO = 0; aPO_F = 0; aPC = 0; aPC_F = 0; aTotal = 0; aTotal_F = 0;
                        int nbre_prs = 0;

                        if (cpt == 0)
                        {
                            string sql0 = "SELECT COUNT( DISTINCT personnel_carriere.id_personnel)" +
                       " FROM personnel_vacation INNER JOIN (personnel_carriere INNER JOIN personnel ON personnel_carriere.id_personnel = personnel.id_personnel) ON personnel_vacation.id_vacation = personnel.id_vacation" +
                        " WHERE personnel_vacation.id_vacation=@idva and personnel_carriere.id_annee=@idaa and personnel.region=@region";
                            MySqlCommand cmd0 = new MySqlCommand(sql0, conn);
                            cmd0.Parameters.AddWithValue("@idaa", id_annee);
                            cmd0.Parameters.AddWithValue("@idva", Convert.ToInt32(Vacation_ID[a]));
                            cmd0.Parameters.AddWithValue("@region", "EAC-Burundi");
                            nbre_prs = Convert.ToInt32(cmd0.ExecuteScalar());
                            Personnel_ID = new string[nbre_prs];

                            string sql1 = "SELECT DISTINCT personnel_carriere.id_personnel" +
                                " FROM personnel_vacation INNER JOIN (personnel_carriere INNER JOIN personnel ON personnel_carriere.id_personnel = personnel.id_personnel) ON personnel_vacation.id_vacation = personnel.id_vacation" +
                                " WHERE personnel_vacation.id_vacation=@idva and personnel_carriere.id_annee=@idaa and personnel.region=@region";
                            MySqlCommand cmd1 = new MySqlCommand(sql1, conn);
                            cmd1.Parameters.AddWithValue("@idaa", id_annee);
                            cmd1.Parameters.AddWithValue("@idva", Convert.ToInt32(Vacation_ID[a]));
                            cmd1.Parameters.AddWithValue("@region", "EAC-Burundi");
                            MySqlDataReader dr1 = cmd1.ExecuteReader();
                            int d = 0;
                            while (dr1.Read())
                            {
                                Personnel_ID[d] = string.Format("{0}", dr1.GetInt32(0).ToString());
                                d++;
                            }
                            dr1.Close();
                        }
                        else if (cpt == 1)
                        {
                            string sql0 = "SELECT COUNT( DISTINCT personnel_carriere.id_personnel)" +
                       " FROM personnel_vacation INNER JOIN (personnel_carriere INNER JOIN personnel ON personnel_carriere.id_personnel = personnel.id_personnel) ON personnel_vacation.id_vacation = personnel.id_vacation" +
                        " WHERE personnel_vacation.id_vacation=@idva and personnel_carriere.id_annee=@idaa and personnel.region!=@region AND personnel.region!=@region1";
                            MySqlCommand cmd0 = new MySqlCommand(sql0, conn);
                            cmd0.Parameters.AddWithValue("@idaa", id_annee);
                            cmd0.Parameters.AddWithValue("@idva", Convert.ToInt32(Vacation_ID[a]));
                            cmd0.Parameters.AddWithValue("@region", "EAC-Burundi");
                            cmd0.Parameters.AddWithValue("@region1", "Autre");
                            nbre_prs = Convert.ToInt32(cmd0.ExecuteScalar());
                            Personnel_ID = new string[nbre_prs];

                            string sql1 = "SELECT DISTINCT personnel_carriere.id_personnel" +
                                " FROM personnel_vacation INNER JOIN (personnel_carriere INNER JOIN personnel ON personnel_carriere.id_personnel = personnel.id_personnel) ON personnel_vacation.id_vacation = personnel.id_vacation" +
                                " WHERE personnel_vacation.id_vacation=@idva and personnel_carriere.id_annee=@idaa and personnel.region!=@region AND personnel.region!=@region1";
                            MySqlCommand cmd1 = new MySqlCommand(sql1, conn);
                            cmd1.Parameters.AddWithValue("@idaa", id_annee);
                            cmd1.Parameters.AddWithValue("@idva", Convert.ToInt32(Vacation_ID[a]));
                            cmd1.Parameters.AddWithValue("@region", "EAC-Burundi");
                            cmd1.Parameters.AddWithValue("@region1", "Autre");
                            MySqlDataReader dr1 = cmd1.ExecuteReader();
                            int d = 0;
                            while (dr1.Read())
                            {
                                Personnel_ID[d] = string.Format("{0}", dr1.GetInt32(0).ToString());
                                d++;
                            }
                            dr1.Close();
                        }
                        else if (cpt == 2)
                        {
                            string sql0 = "SELECT COUNT( DISTINCT personnel_carriere.id_personnel)" +
                       " FROM personnel_vacation INNER JOIN (personnel_carriere INNER JOIN personnel ON personnel_carriere.id_personnel = personnel.id_personnel) ON personnel_vacation.id_vacation = personnel.id_vacation" +
                        " WHERE personnel_vacation.id_vacation=@idva and personnel_carriere.id_annee=@idaa and personnel.region=@region";
                            MySqlCommand cmd0 = new MySqlCommand(sql0, conn);
                            cmd0.Parameters.AddWithValue("@idaa", id_annee);
                            cmd0.Parameters.AddWithValue("@idva", Convert.ToInt32(Vacation_ID[a]));
                            cmd0.Parameters.AddWithValue("@region", "Autre");
                            nbre_prs = Convert.ToInt32(cmd0.ExecuteScalar());
                            Personnel_ID = new string[nbre_prs];

                            string sql1 = "SELECT DISTINCT personnel_carriere.id_personnel" +
                                " FROM personnel_vacation INNER JOIN (personnel_carriere INNER JOIN personnel ON personnel_carriere.id_personnel = personnel.id_personnel) ON personnel_vacation.id_vacation = personnel.id_vacation" +
                                " WHERE personnel_vacation.id_vacation=@idva and personnel_carriere.id_annee=@idaa and personnel.region=@region";
                            MySqlCommand cmd1 = new MySqlCommand(sql1, conn);
                            cmd1.Parameters.AddWithValue("@idaa", id_annee);
                            cmd1.Parameters.AddWithValue("@idva", Convert.ToInt32(Vacation_ID[a]));
                            cmd1.Parameters.AddWithValue("@region", "Autre");
                            MySqlDataReader dr1 = cmd1.ExecuteReader();
                            int d = 0;
                            while (dr1.Read())
                            {
                                Personnel_ID[d] = string.Format("{0}", dr1.GetInt32(0).ToString());
                                d++;
                            }
                            dr1.Close();
                        }

                        for (int prs = 0; prs < nbre_prs; prs++)
                        {
                            string sq4 = "SELECT personnel.genre, personnel_grade.sigle" +
                            " FROM personnel INNER JOIN personnel_grade ON personnel.id_grade = personnel_grade.id_grade" +
                            " WHERE personnel.id_personnel=@idp";
                            MySqlCommand cmd4 = new MySqlCommand(sq4, conn);
                            cmd4.Parameters.AddWithValue("@idp", Convert.ToInt32(Personnel_ID[prs]));
                            MySqlDataReader dr3 = cmd4.ExecuteReader();
                            while (dr3.Read())
                            {
                                string genre = dr3.GetString(0);
                                string diplo = dr3.GetString(1);
                                switch (diplo)
                                {
                                    case "L":
                                        if (genre == "F")
                                        {
                                            Li_F++;
                                            Li++;
                                            Total_F++;
                                            Total++;

                                            aLi_F++;
                                            aLi++;
                                            aTotal_F++;
                                            aTotal++;
                                        }
                                        else
                                        {
                                            Li++;
                                            Total++;
                                            aLi++;
                                            aTotal++;
                                        }
                                        break;
                                    case "Ir":
                                        if (genre == "F")
                                        {
                                            Ir_F++;
                                            Ir++;
                                            Total_F++;
                                            Total++;

                                            aIr_F++;
                                            aIr++;
                                            aTotal_F++;
                                            aTotal++;

                                        }
                                        else
                                        {
                                            Ir++;
                                            Total++;
                                            aIr++;
                                            aTotal++;
                                        }
                                        break;
                                    case "MA":
                                        if (genre == "F")
                                        {
                                            MA_F++;
                                            MA++;
                                            Total_F++;
                                            Total++;

                                            aMA_F++;
                                            aMA++;
                                            aTotal_F++;
                                            aTotal++;
                                        }
                                        else
                                        {
                                            MA++;
                                            Total++;
                                            aMA++;
                                            aTotal++;
                                        }
                                        break;
                                    case "CE":
                                        if (genre == "F")
                                        {
                                            CE_F++;
                                            CE++;
                                            Total_F++;
                                            Total++;
                                            aCE_F++;
                                            aCE++;
                                            aTotal_F++;
                                            aTotal++;
                                        }
                                        else
                                        {
                                            CE++;
                                            Total++;
                                            aCE++;
                                            aTotal++;
                                        }
                                        break;
                                    case "CC":
                                        if (genre == "F")
                                        {
                                            CC_F++;
                                            CC++;
                                            Total_F++;
                                            Total++;
                                            aCC_F++;
                                            aCC++;
                                            aTotal_F++;
                                            aTotal++;
                                        }
                                        else
                                        {
                                            CC++;
                                            Total++;
                                            aCC++;
                                            aTotal++;
                                        }
                                        break;
                                    case "PA":
                                        if (genre == "F")
                                        {
                                            PA_F++;
                                            PA++;
                                            Total_F++;
                                            Total++;

                                            aPA_F++;
                                            aPA++;
                                            aTotal_F++;
                                            aTotal++;
                                        }
                                        else
                                        {
                                            PA++;
                                            Total++;

                                            aPA++;
                                            aTotal++;
                                        }
                                        break;
                                    case "PO":
                                        if (genre == "F")
                                        {
                                            PO_F++;
                                            PO++;
                                            Total_F++;
                                            Total++;

                                            aPO_F++;
                                            aPO++;
                                            aTotal_F++;
                                            aTotal++;
                                        }
                                        else
                                        {
                                            PO++;
                                            Total++;
                                            aPO++;
                                            aTotal++;
                                        }
                                        break;
                                    case "PC":
                                        if (genre == "F")
                                        {
                                            PC_F++;
                                            PC++;
                                            Total_F++;
                                            Total++;
                                            aPC_F++;
                                            aPC++;
                                            aTotal_F++;
                                            aTotal++;
                                        }
                                        else
                                        {
                                            PC++;
                                            Total++;

                                            aPC++;
                                            aTotal++;
                                        }
                                        break;
                                    default:
                                        break;
                                }
                            }
                            dr3.Close();
                        }

                        cell = new PdfPCell(new Phrase(Li_F.ToString(), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        table.AddCell(cell);

                        cell = new PdfPCell(new Phrase((Li - Li_F).ToString(), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        table.AddCell(cell);

                        cell = new PdfPCell(new Phrase(Li.ToString(), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        table.AddCell(cell);


                        cell = new PdfPCell(new Phrase(Ir_F.ToString(), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        table.AddCell(cell);

                        cell = new PdfPCell(new Phrase((Ir - Ir_F).ToString(), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        table.AddCell(cell);

                        cell = new PdfPCell(new Phrase(Ir.ToString(), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        table.AddCell(cell);


                        cell = new PdfPCell(new Phrase(MA_F.ToString(), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        table.AddCell(cell);

                        cell = new PdfPCell(new Phrase((MA - MA_F).ToString(), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        table.AddCell(cell);

                        cell = new PdfPCell(new Phrase(MA.ToString(), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        table.AddCell(cell);


                        cell = new PdfPCell(new Phrase(CE_F.ToString(), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        table.AddCell(cell);

                        cell = new PdfPCell(new Phrase((CE - CE_F).ToString(), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        table.AddCell(cell);

                        cell = new PdfPCell(new Phrase(CE.ToString(), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        table.AddCell(cell);

                        cell = new PdfPCell(new Phrase(CC_F.ToString(), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        table.AddCell(cell);

                        cell = new PdfPCell(new Phrase((CC - CC_F).ToString(), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        table.AddCell(cell);

                        cell = new PdfPCell(new Phrase(CC.ToString(), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        table.AddCell(cell);

                        cell = new PdfPCell(new Phrase(PA_F.ToString(), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        table.AddCell(cell);

                        cell = new PdfPCell(new Phrase((PA - PA_F).ToString(), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        table.AddCell(cell);

                        cell = new PdfPCell(new Phrase(PA.ToString(), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        table.AddCell(cell);

                        cell = new PdfPCell(new Phrase(PO_F.ToString(), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        table.AddCell(cell);

                        cell = new PdfPCell(new Phrase((PO - PO_F).ToString(), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        table.AddCell(cell);

                        cell = new PdfPCell(new Phrase(PO.ToString(), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        table.AddCell(cell);

                        cell = new PdfPCell(new Phrase(PC_F.ToString(), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        table.AddCell(cell);

                        cell = new PdfPCell(new Phrase((PC - PC_F).ToString(), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        table.AddCell(cell);

                        cell = new PdfPCell(new Phrase(PC.ToString(), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        table.AddCell(cell);

                        cell = new PdfPCell(new Phrase(Total_F.ToString(), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        table.AddCell(cell);

                        cell = new PdfPCell(new Phrase((Total - Total_F).ToString(), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        table.AddCell(cell);

                        cell = new PdfPCell(new Phrase(Total.ToString(), font_normal_7));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        table.AddCell(cell);
                    }


                }

                cell = new PdfPCell(new Phrase("STATISTIQUES GLOBALES", font_normal_7));
                cell.Colspan = 2;
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BackgroundColor = BaseColor.GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(aLi_F.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase((aLi - aLi_F).ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(aLi.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.GRAY;
                table.AddCell(cell);




                cell = new PdfPCell(new Phrase(aIr_F.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase((aIr - aIr_F).ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(aIr.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.GRAY;
                table.AddCell(cell);


                cell = new PdfPCell(new Phrase(aMA_F.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase((aMA - aMA_F).ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(aMA.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.GRAY;
                table.AddCell(cell);


                cell = new PdfPCell(new Phrase(aCE_F.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase((aCE - aCE_F).ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(aCE.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(aCC_F.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase((aCC - aCC_F).ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(aCC.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(aPA_F.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase((aPA - aPA_F).ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(aPA.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(aPO_F.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase((aPO - aPO_F).ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(aPO.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(aPC_F.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase((aPC - aPC_F).ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(aPC.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(aTotal_F.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase((aTotal - aTotal_F).ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(aTotal.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.GRAY;
                table.AddCell(cell);
                conn.Close();
            }
            catch (Exception ex)
            {
                //MessageBox.Show(ex.Message);
            }
            //ajouter la table
            doc.Add(table);

            PdfPTable tVisa = new PdfPTable(5);
            float[] colwithv = { 7f, 7f, 7f, 7f, 12f };
            tVisa.SetWidths(colwithv);


            cell = new PdfPCell(new Phrase("", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 5;
            tVisa.AddCell(cell);

            cell = new PdfPCell(new Phrase("", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 5;
            tVisa.AddCell(cell);

            cell = new PdfPCell(new Phrase("", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 5;
            tVisa.AddCell(cell);

            cell = new PdfPCell(new Phrase(" ", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 2;
            tVisa.AddCell(cell);

            cell = new PdfPCell(new Phrase("", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 2;
            tVisa.AddCell(cell);

            string dat = "Fait à " + siege + " ,le " + DateTime.Today.Date.ToShortDateString();
            string nom_rect = "La Direction";

            //cell = new PdfPCell(new Phrase(dat + "\n\n" + nom_rect, font_bold_8));
            cell = new PdfPCell(new Phrase(dat + " ", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            tVisa.AddCell(cell);

            Paragraph pVisa = new Paragraph();
            //parf.IndentationLeft = 240;
            pVisa.Alignment = Element.ALIGN_CENTER;
            pVisa.SpacingAfter = 10;
            pVisa.SpacingBefore = 10;
            pVisa.Add(tVisa);

            doc.Add(pVisa);

            wri.PageEvent = new Foot();
            doc.Close();
            System.Diagnostics.Process.Start(outputFile);
        }
        public void Personnel_Non_Ensegnant_par_Categorie(int id_ann, string an)
        {

            int id_annee = id_ann;
            string annee = an;

            Create_Folder();

            string[] Vacation_ID = new string[100];
            string[] Vacation_Nom = new string[100];
            string[] Personnel_ID = new string[10000];

            DateTime dt = DateTime.Now;
            int ans = dt.Year;
            int mois = dt.Month;
            int jour = dt.Day;
            int heure = dt.Hour;
            int min = dt.Minute;
            int sec = dt.Month;
            string date = jour + "-" + mois + "-" + ans + "_à_" + heure + "h" + min + "min" + sec + "sec";

            iTextSharp.text.Document doc = new iTextSharp.text.Document(iTextSharp.text.PageSize.A4, 0, 0, 50, 10);
            string docname = "Stat_type_7_ " + date + ".pdf";
            string outputFile = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.Desktop), @"BMDSys", docname);
            FileStream fs = new FileStream(outputFile, FileMode.Create, FileAccess.Write, FileShare.None);
            PdfWriter wri = PdfWriter.GetInstance(doc, fs);
            doc.Open();

            conn = new MySqlConnection(Authentification.MyString);
            conn.Open();



            string universite = Load_Institution(conn);
            string coordonee = Load_Adress(conn);
            string value = coordonee;
            string[] op = value.Split('-');
            site = op[0];
            siege = op[1];
            telephone = op[2];
            b_postale = op[3];


            PdfPCell cell = new PdfPCell(new Phrase("", font_bold_10));
            PdfPTable table1 = first_header(conn, universite, ref cell, "");
            doc.Add(table1);



            iTextSharp.text.Paragraph txt_t = new iTextSharp.text.Paragraph(" ", font_bold_7);
            txt_t.Alignment = Element.ALIGN_CENTER;
            txt_t.SpacingBefore = 10;
            txt_t.SpacingAfter = 10;
            doc.Add(txt_t);

            Paragraph parf = new Paragraph();
            string header_titre = "REPARTITION DU PERSONNEL D'APPUI PAR CATEGORIE: A.A " + annee;
            parf.Add(new Phrase(header_titre, font_normal_underlined_8));
            parf.Alignment = Element.ALIGN_CENTER;
            parf.SpacingBefore = 15;
            parf.SpacingAfter = 15;
            doc.Add(parf);


            //CORPS DU RAPPORT 
            PdfPTable table = new PdfPTable(13);
            table.HorizontalAlignment = Element.ALIGN_CENTER;
            float[] colwiths = { 12, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 };
            table.SetWidths(colwiths);
            try
            {

                cell = new PdfPCell(new Phrase("", font_normal_7));
                cell.Rowspan = 3;
                cell.BorderWidth = 0;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("Catégorie", font_normal_7));
                cell.Colspan = 9;
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.VerticalAlignment = Element.ALIGN_MIDDLE;
                cell.BackgroundColor = BaseColor.GRAY;
                table.AddCell(cell);


                cell = new PdfPCell(new Phrase("TOTAUX", font_normal_7));
                cell.Colspan = 3;
                cell.Rowspan = 2;
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.VerticalAlignment = Element.ALIGN_MIDDLE;
                cell.BackgroundColor = BaseColor.GRAY;
                table.AddCell(cell);


                cell = new PdfPCell(new Phrase("Direction", font_normal_7));
                cell.Colspan = 3;
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.VerticalAlignment = Element.ALIGN_MIDDLE;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("Collaboration", font_normal_7));
                cell.Colspan = 3;
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.VerticalAlignment = Element.ALIGN_MIDDLE;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("Exécution", font_normal_7));
                cell.Colspan = 3;
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.VerticalAlignment = Element.ALIGN_MIDDLE;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);


                cell = new PdfPCell(new Phrase("F", font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("M", font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("TOT", font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("F", font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("M", font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("TOT", font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("F", font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("M", font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("TOT", font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("F", font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("M", font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("TOT", font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);




                int total_Direction_F = 0, total_Direction_M = 0, total_Direction = 0;
                int total_Collaboration_F = 0, total_Collaboration_M = 0, total_Collaboration = 0;
                int total_Execution_F = 0, total_Execution_M = 0, total_Execution = 0;


                int Direction_F = 0, Direction_M = 0, Direction = 0;
                int Collaboration_F = 0, Collaboration_M = 0, Collaboration = 0;
                int Execution_F = 0, Execution_M = 0, Execution = 0;
                int total_F = 0, total_M = 0, total = 0;



                //============================APPUI A LA RECHERCHE========================

                cell = new PdfPCell(new Phrase("Appui à la Recherche", font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.VerticalAlignment = Element.ALIGN_MIDDLE;
                table.AddCell(cell);

                string sq1 = "SELECT COUNT( DISTINCT personnel_carriere.id_personnel)" +
                             " FROM personnel_categorie, (personnel INNER JOIN personnel_carriere ON personnel.id_personnel = personnel_carriere.id_personnel) INNER JOIN personnel_type ON personnel.id_personnel_type = personnel_type.id_personnel_type" +
                             " WHERE personnel_carriere.id_annee=id_annee AND personnel_type.sigle=@sigle AND personnel_categorie.categorie=@categorie AND personnel.genre=@genre";
                MySqlCommand cmd1 = new MySqlCommand(sq1, conn);
                cmd1.Parameters.AddWithValue("@id_annee", id_annee);
                cmd1.Parameters.AddWithValue("@sigle", "AR");
                cmd1.Parameters.AddWithValue("@categorie", "Direction");
                cmd1.Parameters.AddWithValue("@genre", "F");
                Direction_F = Convert.ToInt32(cmd1.ExecuteScalar());
                Direction += Direction_F;
                total_F += Direction_F;

                total_Direction_F += Direction_F;
                total_Direction += Direction_F;

                string sq2 = "SELECT COUNT( DISTINCT personnel_carriere.id_personnel)" +
                             " FROM personnel_categorie, (personnel INNER JOIN personnel_carriere ON personnel.id_personnel = personnel_carriere.id_personnel) INNER JOIN personnel_type ON personnel.id_personnel_type = personnel_type.id_personnel_type" +
                             " WHERE personnel_carriere.id_annee=id_annee AND personnel_type.sigle=@sigle AND personnel_categorie.categorie=@categorie AND personnel.genre=@genre";
                MySqlCommand cmd2 = new MySqlCommand(sq2, conn);
                cmd2.Parameters.AddWithValue("@id_annee", id_annee);
                cmd2.Parameters.AddWithValue("@sigle", "AR");
                cmd2.Parameters.AddWithValue("@categorie", "Direction");
                cmd2.Parameters.AddWithValue("@genre", "M");
                Direction_M = Convert.ToInt32(cmd2.ExecuteScalar());
                Direction += Direction_M;
                total_Direction_M += Direction_M;
                total_Direction += Direction_M;
                total_M += Direction_M;

                string sq3 = "SELECT COUNT( DISTINCT personnel_carriere.id_personnel)" +
                             " FROM personnel_categorie, (personnel INNER JOIN personnel_carriere ON personnel.id_personnel = personnel_carriere.id_personnel) INNER JOIN personnel_type ON personnel.id_personnel_type = personnel_type.id_personnel_type" +
                             " WHERE personnel_carriere.id_annee=id_annee AND personnel_type.sigle=@sigle AND personnel_categorie.categorie=@categorie AND personnel.genre=@genre";
                MySqlCommand cmd3 = new MySqlCommand(sq3, conn);
                cmd3.Parameters.AddWithValue("@id_annee", id_annee);
                cmd3.Parameters.AddWithValue("@sigle", "AR");
                cmd3.Parameters.AddWithValue("@categorie", "Collaboration");
                cmd3.Parameters.AddWithValue("@genre", "F");
                Collaboration_F = Convert.ToInt32(cmd3.ExecuteScalar());
                Collaboration += Collaboration_F;
                total_F += Collaboration_F;

                total_Collaboration_F += Collaboration_F;
                total_Collaboration += Collaboration_F;

                string sq4 = "SELECT COUNT( DISTINCT personnel_carriere.id_personnel)" +
                             " FROM personnel_categorie, (personnel INNER JOIN personnel_carriere ON personnel.id_personnel = personnel_carriere.id_personnel) INNER JOIN personnel_type ON personnel.id_personnel_type = personnel_type.id_personnel_type" +
                             " WHERE personnel_carriere.id_annee=id_annee AND personnel_type.sigle=@sigle AND personnel_categorie.categorie=@categorie AND personnel.genre=@genre";
                MySqlCommand cmd4 = new MySqlCommand(sq4, conn);
                cmd4.Parameters.AddWithValue("@id_annee", id_annee);
                cmd4.Parameters.AddWithValue("@sigle", "AR");
                cmd4.Parameters.AddWithValue("@categorie", "Collaboration");
                cmd4.Parameters.AddWithValue("@genre", "M");
                Collaboration_M = Convert.ToInt32(cmd4.ExecuteScalar());
                Collaboration += Collaboration_M;
                total_M += Collaboration_M;


                total_Collaboration_M += Collaboration_M;
                total_Collaboration += Collaboration_M;


                string sq5 = "SELECT COUNT( DISTINCT personnel_carriere.id_personnel)" +
                             " FROM personnel_categorie, (personnel INNER JOIN personnel_carriere ON personnel.id_personnel = personnel_carriere.id_personnel) INNER JOIN personnel_type ON personnel.id_personnel_type = personnel_type.id_personnel_type" +
                             " WHERE personnel_carriere.id_annee=id_annee AND personnel_type.sigle=@sigle AND personnel_categorie.categorie=@categorie AND personnel.genre=@genre";
                MySqlCommand cmd5 = new MySqlCommand(sq5, conn);
                cmd5.Parameters.AddWithValue("@id_annee", id_annee);
                cmd5.Parameters.AddWithValue("@sigle", "AR");
                cmd5.Parameters.AddWithValue("@categorie", "Execution");
                cmd5.Parameters.AddWithValue("@genre", "F");
                Execution_F = Convert.ToInt32(cmd5.ExecuteScalar());
                Execution += Execution_F;
                total_F += Execution_F;

                total_Execution_F += Execution_F;
                total_Execution += Execution_F;


                string sq6 = "SELECT COUNT( DISTINCT personnel_carriere.id_personnel)" +
                             " FROM personnel_categorie, (personnel INNER JOIN personnel_carriere ON personnel.id_personnel = personnel_carriere.id_personnel) INNER JOIN personnel_type ON personnel.id_personnel_type = personnel_type.id_personnel_type" +
                             " WHERE personnel_carriere.id_annee=id_annee AND personnel_type.sigle=@sigle AND personnel_categorie.categorie=@categorie AND personnel.genre=@genre";
                MySqlCommand cmd6 = new MySqlCommand(sq6, conn);
                cmd6.Parameters.AddWithValue("@id_annee", id_annee);
                cmd6.Parameters.AddWithValue("@sigle", "AR");
                cmd6.Parameters.AddWithValue("@categorie", "Execution");
                cmd6.Parameters.AddWithValue("@genre", "M");
                Execution_M = Convert.ToInt32(cmd6.ExecuteScalar());
                Execution += Execution_M;
                total_M += Execution_M;

                total = total_F + total_M;

                total_Execution_M += Execution_M;
                total_Execution += Execution_M;

                cell = new PdfPCell(new Phrase(Direction_F.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(Direction_M.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(Direction.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(Collaboration_F.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(Collaboration_M.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(Collaboration.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);


                cell = new PdfPCell(new Phrase(Execution_F.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(Execution_M.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(Execution.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(total_F.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(total_M.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(total.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);







                Direction_F = 0; Direction_M = 0; Direction = 0;
                Collaboration_F = 0; Collaboration_M = 0; Collaboration = 0;
                Execution_F = 0; Execution_M = 0; Execution = 0;
                total_F = 0; total_M = 0; total = 0;
                //============================APPUI A L'ACADEMIQUE========================

                cell = new PdfPCell(new Phrase("Appui à l'Academie", font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.VerticalAlignment = Element.ALIGN_MIDDLE;
                table.AddCell(cell);

                string sq11 = "SELECT COUNT( DISTINCT personnel_carriere.id_personnel)" +
                             " FROM personnel_categorie, (personnel INNER JOIN personnel_carriere ON personnel.id_personnel = personnel_carriere.id_personnel) INNER JOIN personnel_type ON personnel.id_personnel_type = personnel_type.id_personnel_type" +
                             " WHERE personnel_carriere.id_annee=id_annee AND personnel_type.sigle=@sigle AND personnel_categorie.categorie=@categorie AND personnel.genre=@genre";
                MySqlCommand cmd11 = new MySqlCommand(sq11, conn);
                cmd11.Parameters.AddWithValue("@id_annee", id_annee);
                cmd11.Parameters.AddWithValue("@sigle", "AA");
                cmd11.Parameters.AddWithValue("@categorie", "Direction");
                cmd11.Parameters.AddWithValue("@genre", "F");
                Direction_F = Convert.ToInt32(cmd11.ExecuteScalar());
                Direction += Direction_F;
                total_F += Direction_F;

                total_Direction_F += Direction_F;
                total_Direction += Direction_F;

                string sq21 = "SELECT COUNT( DISTINCT personnel_carriere.id_personnel)" +
                             " FROM personnel_categorie, (personnel INNER JOIN personnel_carriere ON personnel.id_personnel = personnel_carriere.id_personnel) INNER JOIN personnel_type ON personnel.id_personnel_type = personnel_type.id_personnel_type" +
                             " WHERE personnel_carriere.id_annee=id_annee AND personnel_type.sigle=@sigle AND personnel_categorie.categorie=@categorie AND personnel.genre=@genre";
                MySqlCommand cmd21 = new MySqlCommand(sq21, conn);
                cmd21.Parameters.AddWithValue("@id_annee", id_annee);
                cmd21.Parameters.AddWithValue("@sigle", "AA");
                cmd21.Parameters.AddWithValue("@categorie", "Direction");
                cmd21.Parameters.AddWithValue("@genre", "M");
                Direction_M = Convert.ToInt32(cmd21.ExecuteScalar());
                Direction += Direction_M;
                total_M += Direction_M;

                total_Direction_M += Direction_M;
                total_Direction += Direction_M;

                string sq31 = "SELECT COUNT( DISTINCT personnel_carriere.id_personnel)" +
                             " FROM personnel_categorie, (personnel INNER JOIN personnel_carriere ON personnel.id_personnel = personnel_carriere.id_personnel) INNER JOIN personnel_type ON personnel.id_personnel_type = personnel_type.id_personnel_type" +
                             " WHERE personnel_carriere.id_annee=id_annee AND personnel_type.sigle=@sigle AND personnel_categorie.categorie=@categorie AND personnel.genre=@genre";
                MySqlCommand cmd31 = new MySqlCommand(sq31, conn);
                cmd31.Parameters.AddWithValue("@id_annee", id_annee);
                cmd31.Parameters.AddWithValue("@sigle", "AA");
                cmd31.Parameters.AddWithValue("@categorie", "Collaboration");
                cmd31.Parameters.AddWithValue("@genre", "F");
                Collaboration_F = Convert.ToInt32(cmd31.ExecuteScalar());
                Collaboration += Collaboration_F;
                total_F += Collaboration_F;

                total_Collaboration_F += Collaboration_F;
                total_Collaboration += Collaboration_F;


                string sq41 = "SELECT COUNT( DISTINCT personnel_carriere.id_personnel)" +
                             " FROM personnel_categorie, (personnel INNER JOIN personnel_carriere ON personnel.id_personnel = personnel_carriere.id_personnel) INNER JOIN personnel_type ON personnel.id_personnel_type = personnel_type.id_personnel_type" +
                             " WHERE personnel_carriere.id_annee=id_annee AND personnel_type.sigle=@sigle AND personnel_categorie.categorie=@categorie AND personnel.genre=@genre";
                MySqlCommand cmd41 = new MySqlCommand(sq41, conn);
                cmd41.Parameters.AddWithValue("@id_annee", id_annee);
                cmd41.Parameters.AddWithValue("@sigle", "AA");
                cmd41.Parameters.AddWithValue("@categorie", "Collaboration");
                cmd41.Parameters.AddWithValue("@genre", "M");
                Collaboration_M = Convert.ToInt32(cmd41.ExecuteScalar());
                Collaboration += Collaboration_M;
                total_M += Collaboration_M;

                total_Collaboration_M += Collaboration_M;
                total_Collaboration += Collaboration_M;


                string sq51 = "SELECT COUNT( DISTINCT personnel_carriere.id_personnel)" +
                             " FROM personnel_categorie, (personnel INNER JOIN personnel_carriere ON personnel.id_personnel = personnel_carriere.id_personnel) INNER JOIN personnel_type ON personnel.id_personnel_type = personnel_type.id_personnel_type" +
                             " WHERE personnel_carriere.id_annee=id_annee AND personnel_type.sigle=@sigle AND personnel_categorie.categorie=@categorie AND personnel.genre=@genre";
                MySqlCommand cmd51 = new MySqlCommand(sq51, conn);
                cmd51.Parameters.AddWithValue("@id_annee", id_annee);
                cmd51.Parameters.AddWithValue("@sigle", "AA");
                cmd51.Parameters.AddWithValue("@categorie", "Execution");
                cmd51.Parameters.AddWithValue("@genre", "F");
                Execution_F = Convert.ToInt32(cmd51.ExecuteScalar());
                Execution += Execution_F;
                total_F += Execution_F;

                total_Execution_F += Execution_F;
                total_Execution += Execution_F;

                string sq61 = "SELECT COUNT( DISTINCT personnel_carriere.id_personnel)" +
                             " FROM personnel_categorie, (personnel INNER JOIN personnel_carriere ON personnel.id_personnel = personnel_carriere.id_personnel) INNER JOIN personnel_type ON personnel.id_personnel_type = personnel_type.id_personnel_type" +
                             " WHERE personnel_carriere.id_annee=id_annee AND personnel_type.sigle=@sigle AND personnel_categorie.categorie=@categorie AND personnel.genre=@genre";
                MySqlCommand cmd61 = new MySqlCommand(sq61, conn);
                cmd61.Parameters.AddWithValue("@id_annee", id_annee);
                cmd61.Parameters.AddWithValue("@sigle", "AA");
                cmd61.Parameters.AddWithValue("@categorie", "Execution");
                cmd61.Parameters.AddWithValue("@genre", "M");
                Execution_M = Convert.ToInt32(cmd61.ExecuteScalar());
                Execution += Execution_M;
                total_M += Execution_M;

                total = total_F + total_M;

                total_Execution_M += Execution_M;
                total_Execution += Execution_M;

                cell = new PdfPCell(new Phrase(Direction_F.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(Direction_M.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(Direction.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(Collaboration_F.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(Collaboration_M.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(Collaboration.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);


                cell = new PdfPCell(new Phrase(Execution_F.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(Execution_M.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(Execution.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(total_F.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(total_M.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(total.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);






                Direction_F = 0; Direction_M = 0; Direction = 0;
                Collaboration_F = 0; Collaboration_M = 0; Collaboration = 0;
                Execution_F = 0; Execution_M = 0; Execution = 0;
                total_F = 0; total_M = 0; total = 0;
                //============================APPUI AU SOCIAL========================

                cell = new PdfPCell(new Phrase("Appui au Social", font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.VerticalAlignment = Element.ALIGN_MIDDLE;
                table.AddCell(cell);

                string sq12 = "SELECT COUNT( DISTINCT personnel_carriere.id_personnel)" +
                             " FROM personnel_categorie, (personnel INNER JOIN personnel_carriere ON personnel.id_personnel = personnel_carriere.id_personnel) INNER JOIN personnel_type ON personnel.id_personnel_type = personnel_type.id_personnel_type" +
                             " WHERE personnel_carriere.id_annee=id_annee AND personnel_type.sigle=@sigle AND personnel_categorie.categorie=@categorie AND personnel.genre=@genre";
                MySqlCommand cmd12 = new MySqlCommand(sq12, conn);
                cmd12.Parameters.AddWithValue("@id_annee", id_annee);
                cmd12.Parameters.AddWithValue("@sigle", "AS");
                cmd12.Parameters.AddWithValue("@categorie", "Direction");
                cmd12.Parameters.AddWithValue("@genre", "F");
                Direction_F = Convert.ToInt32(cmd12.ExecuteScalar());
                Direction += Direction_F;
                total_F += Direction_F;

                total_Direction_F += Direction_F;
                total_Direction += Direction_F;


                string sq22 = "SELECT COUNT( DISTINCT personnel_carriere.id_personnel)" +
                             " FROM personnel_categorie, (personnel INNER JOIN personnel_carriere ON personnel.id_personnel = personnel_carriere.id_personnel) INNER JOIN personnel_type ON personnel.id_personnel_type = personnel_type.id_personnel_type" +
                             " WHERE personnel_carriere.id_annee=id_annee AND personnel_type.sigle=@sigle AND personnel_categorie.categorie=@categorie AND personnel.genre=@genre";
                MySqlCommand cmd22 = new MySqlCommand(sq22, conn);
                cmd22.Parameters.AddWithValue("@id_annee", id_annee);
                cmd22.Parameters.AddWithValue("@sigle", "AS");
                cmd22.Parameters.AddWithValue("@categorie", "Direction");
                cmd22.Parameters.AddWithValue("@genre", "M");
                Direction_M = Convert.ToInt32(cmd22.ExecuteScalar());
                Direction += Direction_M;
                total_M += Direction_M;

                total_Direction_M += Direction_M;
                total_Direction += Direction_M;

                string sq32 = "SELECT COUNT( DISTINCT personnel_carriere.id_personnel)" +
                             " FROM personnel_categorie, (personnel INNER JOIN personnel_carriere ON personnel.id_personnel = personnel_carriere.id_personnel) INNER JOIN personnel_type ON personnel.id_personnel_type = personnel_type.id_personnel_type" +
                             " WHERE personnel_carriere.id_annee=id_annee AND personnel_type.sigle=@sigle AND personnel_categorie.categorie=@categorie AND personnel.genre=@genre";
                MySqlCommand cmd32 = new MySqlCommand(sq32, conn);
                cmd32.Parameters.AddWithValue("@id_annee", id_annee);
                cmd32.Parameters.AddWithValue("@sigle", "AS");
                cmd32.Parameters.AddWithValue("@categorie", "Collaboration");
                cmd32.Parameters.AddWithValue("@genre", "F");
                Collaboration_F = Convert.ToInt32(cmd32.ExecuteScalar());
                Collaboration += Collaboration_F;
                total_F += Collaboration_F;

                total_Collaboration_F += Collaboration_F;
                total_Collaboration += Collaboration_F;


                string sq42 = "SELECT COUNT( DISTINCT personnel_carriere.id_personnel)" +
                             " FROM personnel_categorie, (personnel INNER JOIN personnel_carriere ON personnel.id_personnel = personnel_carriere.id_personnel) INNER JOIN personnel_type ON personnel.id_personnel_type = personnel_type.id_personnel_type" +
                             " WHERE personnel_carriere.id_annee=id_annee AND personnel_type.sigle=@sigle AND personnel_categorie.categorie=@categorie AND personnel.genre=@genre";
                MySqlCommand cmd42 = new MySqlCommand(sq42, conn);
                cmd42.Parameters.AddWithValue("@id_annee", id_annee);
                cmd42.Parameters.AddWithValue("@sigle", "AS");
                cmd42.Parameters.AddWithValue("@categorie", "Collaboration");
                cmd42.Parameters.AddWithValue("@genre", "M");
                Collaboration_M = Convert.ToInt32(cmd42.ExecuteScalar());
                Collaboration += Collaboration_M;
                total_M += Collaboration_M;

                total_Collaboration_M += Collaboration_M;
                total_Collaboration += Collaboration_M;


                string sq52 = "SELECT COUNT( DISTINCT personnel_carriere.id_personnel)" +
                             " FROM personnel_categorie, (personnel INNER JOIN personnel_carriere ON personnel.id_personnel = personnel_carriere.id_personnel) INNER JOIN personnel_type ON personnel.id_personnel_type = personnel_type.id_personnel_type" +
                             " WHERE personnel_carriere.id_annee=id_annee AND personnel_type.sigle=@sigle AND personnel_categorie.categorie=@categorie AND personnel.genre=@genre";
                MySqlCommand cmd52 = new MySqlCommand(sq52, conn);
                cmd52.Parameters.AddWithValue("@id_annee", id_annee);
                cmd52.Parameters.AddWithValue("@sigle", "AS");
                cmd52.Parameters.AddWithValue("@categorie", "Execution");
                cmd52.Parameters.AddWithValue("@genre", "F");
                Execution_F = Convert.ToInt32(cmd52.ExecuteScalar());
                Execution += Execution_F;
                total_F += Execution_F;

                total_Execution_F += Execution_F;
                total_Execution += Execution_F;

                string sq62 = "SELECT COUNT( DISTINCT personnel_carriere.id_personnel)" +
                             " FROM personnel_categorie, (personnel INNER JOIN personnel_carriere ON personnel.id_personnel = personnel_carriere.id_personnel) INNER JOIN personnel_type ON personnel.id_personnel_type = personnel_type.id_personnel_type" +
                             " WHERE personnel_carriere.id_annee=id_annee AND personnel_type.sigle=@sigle AND personnel_categorie.categorie=@categorie AND personnel.genre=@genre";
                MySqlCommand cmd62 = new MySqlCommand(sq62, conn);
                cmd62.Parameters.AddWithValue("@id_annee", id_annee);
                cmd62.Parameters.AddWithValue("@sigle", "AS");
                cmd62.Parameters.AddWithValue("@categorie", "Execution");
                cmd62.Parameters.AddWithValue("@genre", "M");
                Execution_M = Convert.ToInt32(cmd62.ExecuteScalar());
                Execution += Execution_M;
                total_M += Execution_M;

                total = total_F + total_M;
                total_Execution_M += Execution_M;
                total_Execution += Execution_M;

                cell = new PdfPCell(new Phrase(Direction_F.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(Direction_M.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(Direction.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(Collaboration_F.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(Collaboration_M.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(Collaboration.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);


                cell = new PdfPCell(new Phrase(Execution_F.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(Execution_M.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(Execution.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(total_F.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(total_M.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(total.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);




                cell = new PdfPCell(new Phrase("TOTAL", font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(total_Direction_F.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(total_Direction_M.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(total_Direction.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(total_Collaboration_F.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(total_Collaboration_M.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(total_Collaboration.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);


                cell = new PdfPCell(new Phrase(total_Execution_F.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(total_Execution_M.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(total_Execution.ToString(), font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("", font_normal_7));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.Colspan = 3;
                cell.BorderWidth = 0;
                table.AddCell(cell);


                conn.Close();
            }
            catch (Exception ex)
            {
                //MessageBox.Show(ex.Message);
            }
            //ajouter la table
            doc.Add(table);

            PdfPTable tVisa = new PdfPTable(5);
            float[] colwithv = { 7f, 7f, 7f, 7f, 12f };
            tVisa.SetWidths(colwithv);


            cell = new PdfPCell(new Phrase("", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 5;
            tVisa.AddCell(cell);

            cell = new PdfPCell(new Phrase("", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 5;
            tVisa.AddCell(cell);

            cell = new PdfPCell(new Phrase("", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 5;
            tVisa.AddCell(cell);

            cell = new PdfPCell(new Phrase(" ", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 2;
            tVisa.AddCell(cell);

            cell = new PdfPCell(new Phrase("", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 2;
            tVisa.AddCell(cell);

            string dat = "Fait à " + siege + " ,le " + DateTime.Today.Date.ToShortDateString();
            string nom_rect = "La Direction";

            //cell = new PdfPCell(new Phrase(dat + "\n\n" + nom_rect, font_bold_8));
            cell = new PdfPCell(new Phrase(dat + " ", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            tVisa.AddCell(cell);

            Paragraph pVisa = new Paragraph();
            //parf.IndentationLeft = 240;
            pVisa.Alignment = Element.ALIGN_CENTER;
            pVisa.SpacingAfter = 10;
            pVisa.SpacingBefore = 10;
            pVisa.Add(tVisa);

            doc.Add(pVisa);

            wri.PageEvent = new Foot();
            doc.Close();
            System.Diagnostics.Process.Start(outputFile);
        }
        public void Enseignants_Diplome_Departement(int idan, string ann)
        {
            int id_annee = idan;
            string annee = ann;


            Create_Folder();
            string[] Deptmnt_ID, Deptmnt_Nom, Personnel_ID;

            DateTime dt = DateTime.Now;
            int ans = dt.Year;
            int mois = dt.Month;
            int jour = dt.Day;
            int heure = dt.Hour;
            int min = dt.Minute;
            int sec = dt.Month;
            string date = jour + "-" + mois + "-" + ans + "_à_" + heure + "h" + min + "min" + sec + "sec";

            iTextSharp.text.Document doc = new iTextSharp.text.Document(iTextSharp.text.PageSize.A4, 0, 0, 50, 10);
            string docname = "Stat_type_8_" + date + ".pdf";
            string outputFile = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.Desktop), @"BMDSys", docname);
            FileStream fs = new FileStream(outputFile, FileMode.Create, FileAccess.Write, FileShare.None);
            PdfWriter wri = PdfWriter.GetInstance(doc, fs);
            doc.Open();

            conn = new MySqlConnection(Authentification.MyString);
            conn.Open();


            string universite = Load_Institution(conn);
            string coordonee = Load_Adress(conn);
            string value = coordonee;
            string[] op = value.Split('-');
            site = op[0];
            siege = op[1];
            telephone = op[2];
            b_postale = op[3];


            PdfPCell cell = new PdfPCell(new Phrase("", font_bold_10));
            PdfPTable table1 = first_header(conn, universite, ref cell, "");
            doc.Add(table1);



            iTextSharp.text.Paragraph txt_t = new iTextSharp.text.Paragraph(" ", font_bold_7);
            txt_t.Alignment = Element.ALIGN_CENTER;
            txt_t.SpacingBefore = 10;
            txt_t.SpacingAfter = 10;
            doc.Add(txt_t);

            Paragraph parf = new Paragraph();
            string header_titre = "REPARTITION DES ENSEIGNANTS PAR FACULTE, GRADE ET GENRE: A.A " + annee;
            parf.Add(new Phrase(header_titre, font_normal_underlined_8));
            parf.Alignment = Element.ALIGN_CENTER;

            parf.SpacingBefore = 5;
            parf.SpacingAfter = 15;
            doc.Add(parf);

            //CORPS DU RAPPORT 
            PdfPTable table = new PdfPTable(9);
            table.HorizontalAlignment = Element.ALIGN_CENTER;
            float[] colwiths = { 50f, 25f, 25f, 25f, 25f, 25f, 25f, 25f, 25f };
            table.SetWidths(colwiths);//appliquer ces dimenstions a l atable


            cell = new PdfPCell(new Phrase("", font_normal_7));
            cell.Colspan = 2;
            cell.BorderWidth = 0;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Diplômés \nLic/BAC", font_normal_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Diplômés \nDEA", font_normal_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Diplômés \nDESS", font_normal_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Diplômés \nIr", font_normal_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Diplômés \nM.Sc", font_normal_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Diplômés \nDr", font_normal_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Total", font_normal_7));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.VerticalAlignment = Element.ALIGN_MIDDLE;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            table.AddCell(cell);

            try
            {
                string sql0 = "SELECT COUNT(DISTINCT id_departement) FROM departement_par_faculte WHERE id_annee=@idaa";
                MySqlCommand cmd0 = new MySqlCommand(sql0, conn);
                cmd0.Parameters.AddWithValue("@idaa", id_annee);
                int nbre_departement = Convert.ToInt32(cmd0.ExecuteScalar());
                Deptmnt_ID = new string[nbre_departement];
                Deptmnt_Nom = new string[nbre_departement];

                string sql1 = "SELECT departement_par_faculte.id_departement,departement.departement" +
                    " FROM departement_par_faculte INNER JOIN departement ON departement_par_faculte.id_departement = departement.id_departement" +
                    " WHERE departement_par_faculte.id_annee=@idaa";
                MySqlCommand cmd1 = new MySqlCommand(sql1, conn);
                cmd1.Parameters.AddWithValue("@idaa", id_annee);
                MySqlDataReader dr1 = cmd1.ExecuteReader();
                int j = 0;
                while (dr1.Read())
                {
                    Deptmnt_ID[j] = string.Format("{0}", dr1.GetInt32(0).ToString());
                    Deptmnt_Nom[j] = string.Format("{0}", dr1.GetString(1));
                    j++;
                }
                dr1.Close();

                int cpt = 0;
                int Li = 0, Li_F = 0, DEA = 0, DEA_F = 0, DEES = 0, DEES_F = 0, Ir = 0, Ir_F = 0, MA = 0, MA_F = 0, Dr = 0, Dr_F = 0, Total = 0, Total_F = 0;
                for (int dpt = 0; dpt < nbre_departement; dpt++)
                {
                    cell = new PdfPCell(new Phrase(Deptmnt_Nom[dpt], font_normal_7));
                    cell.Rowspan = 2;
                    cell.HorizontalAlignment = Element.ALIGN_LEFT;
                    cell.VerticalAlignment = Element.ALIGN_MIDDLE;
                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    table.AddCell(cell);

                    string sq2 = "SELECT COUNT(DISTINCT attribution_cours.id_personnel)" +
                        " FROM attribution_cours INNER JOIN cours ON attribution_cours.id_cours = cours.id_cours" +
                        " WHERE cours.id_departement=@idep AND cours.id_annee=@id_annee";
                    MySqlCommand cmd2 = new MySqlCommand(sq2, conn);
                    cmd2.Parameters.AddWithValue("@idep", Convert.ToInt32(Deptmnt_ID[dpt]));
                    cmd2.Parameters.AddWithValue("@id_annee", id_annee);
                    int nbre_personne = Convert.ToInt32(cmd2.ExecuteScalar());
                    Personnel_ID = new string[nbre_personne];

                    string sq3 = "SELECT DISTINCT attribution_cours.id_personnel" +
                       " FROM attribution_cours INNER JOIN cours ON attribution_cours.id_cours = cours.id_cours" +
                       " WHERE cours.id_departement=@idep AND cours.id_annee=@id_annee";

                    MySqlCommand cmd3 = new MySqlCommand(sq3, conn);
                    cmd3.Parameters.AddWithValue("@idep", Convert.ToInt32(Deptmnt_ID[dpt]));
                    cmd3.Parameters.AddWithValue("@id_annee", id_annee);
                    MySqlDataReader dr2 = cmd3.ExecuteReader();
                    int b = 0;
                    while (dr2.Read())
                    {
                        Personnel_ID[b] = string.Format("{0}", dr2.GetInt32(0).ToString());
                        b++;
                    }
                    dr2.Close();

                    //Il faudra verifier si ca se passe bien sinon utiliser b au lieu de totl_personne
                    for (int prs = 0; prs < nbre_personne; prs++)
                    {
                        string sq4 = "SELECT personnel.genre, personnel_diplome.sigle" +
                        " FROM personnel_diplome INNER JOIN personnel ON personnel_diplome.id_diplome = personnel.id_diplome" +
                        " WHERE personnel.id_personnel=@idp";
                        MySqlCommand cmd4 = new MySqlCommand(sq4, conn);
                        cmd4.Parameters.AddWithValue("@idp", Convert.ToInt32(Personnel_ID[prs]));
                        MySqlDataReader dr3 = cmd4.ExecuteReader();
                        while (dr3.Read())
                        {
                            string genre = dr3.GetString(0);
                            string diplo = dr3.GetString(1);
                            switch (diplo)
                            {
                                case "L":
                                    if (genre == "F")
                                    {
                                        Li_F++;
                                        Li++;
                                        Total_F++;
                                        Total++;
                                    }
                                    else
                                    {
                                        Li++;
                                        Total++;
                                    }
                                    break;
                                case "DEA":
                                    if (genre == "F")
                                    {
                                        DEA_F++;
                                        DEA++;
                                        Total_F++;
                                        Total++;
                                    }
                                    else
                                    {
                                        DEA++;
                                        Total++;
                                    }
                                    break;
                                case "DEES":
                                    if (genre == "F")
                                    {
                                        DEES_F++;
                                        DEES++;
                                        Total_F++;
                                        Total++;
                                    }
                                    else
                                    {
                                        DEES++;
                                        Total++;
                                    }
                                    break;
                                case "Ir":
                                    if (genre == "F")
                                    {
                                        Ir_F++;
                                        Ir++;
                                        Total_F++;
                                        Total++;
                                    }
                                    else
                                    {
                                        Ir++;
                                        Total++;
                                    }
                                    break;
                                case "MSc":
                                    if (genre == "F")
                                    {
                                        MA_F++;
                                        MA++;
                                        Total_F++;
                                        Total++;
                                    }
                                    else
                                    {
                                        MA++;
                                        Total++;
                                    }
                                    break;
                                case "Dr":
                                    if (genre == "F")
                                    {
                                        Dr_F++;
                                        Dr++;
                                        Total_F++;
                                        Total++;
                                    }
                                    else
                                    {
                                        Dr++;
                                        Total++;
                                    }
                                    break;
                                default:
                                    break;
                            }
                        }
                        dr3.Close();
                    }
                    cell = new PdfPCell(new Phrase("F", font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(Li_F.ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(DEA_F.ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(DEES_F.ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(Ir_F.ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(MA_F.ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(Dr_F.ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(Total_F.ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);



                    cell = new PdfPCell(new Phrase("M", font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase((Li - Li_F).ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase((DEA - DEA_F).ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase((DEES - DEES_F).ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase((Ir - Ir_F).ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase((MA - MA_F).ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase((Dr - Dr_F).ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase((Total - Total_F).ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase("Total par departement", font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_LEFT;
                    //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    cell.Colspan = 2;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(Li.ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(DEA.ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(DEES.ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(Ir.ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(MA.ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(Dr.ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase(Total.ToString(), font_normal_7));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    table.AddCell(cell);
                    cpt = 0;
                    Li = 0;
                    Li_F = 0;
                    DEA = 0;
                    DEA_F = 0;
                    DEES = 0;
                    DEES_F = 0;
                    Ir = 0;
                    Ir_F = 0;
                    MA = 0;
                    MA_F = 0;
                    Dr = 0;
                    Dr_F = 0;
                    Total = 0;
                    Total_F = 0;
                }
                conn.Close();
            }
            catch (Exception ex)
            {
                //MessageBox.Show(ex.Message);
            }
            //ajouter la table
            doc.Add(table);

            PdfPTable tVisa = new PdfPTable(5);
            float[] colwithv = { 7f, 7f, 7f, 7f, 12f };
            tVisa.SetWidths(colwithv);


            cell = new PdfPCell(new Phrase("", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 5;
            tVisa.AddCell(cell);

            cell = new PdfPCell(new Phrase("", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 5;
            tVisa.AddCell(cell);

            cell = new PdfPCell(new Phrase("", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 5;
            tVisa.AddCell(cell);

            cell = new PdfPCell(new Phrase(" ", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 2;
            tVisa.AddCell(cell);

            cell = new PdfPCell(new Phrase("", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 2;
            tVisa.AddCell(cell);

            string dat = "Fait à " + siege + " ,le " + DateTime.Today.Date.ToShortDateString();
            string nom_rect = "La Direction";

            //cell = new PdfPCell(new Phrase(dat + "\n\n" + nom_rect, font_bold_8));
            cell = new PdfPCell(new Phrase(dat + " ", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            tVisa.AddCell(cell);

            Paragraph pVisa = new Paragraph();
            //parf.IndentationLeft = 240;
            pVisa.Alignment = Element.ALIGN_CENTER;
            pVisa.SpacingAfter = 10;
            pVisa.SpacingBefore = 10;
            pVisa.Add(tVisa);

            doc.Add(pVisa);

            wri.PageEvent = new Foot();
            doc.Close();
            System.Diagnostics.Process.Start(outputFile);
        }


        //===================DOCUMENTS POUR ETUDIANTS======================================//
        //public void Bon_Acquitement(string cde)
        //{
        //    string code_paiement = cde;
        //    int id_classe, id_departement, id_faculte, id_annee, id_variable, id_etudiant, id_user, id_paiement;
        //    string classe = "", departement = "", faculte = "", annee = "", variable = "", etudiant = "", matricule = "", user_matricule = "", logged_user = "", logged_user_matricule = "", banque = "", compte = "", bordereau = "", date_paie = "", date_saisie = "";
        //    string type, titre;

        //    int montant_requis = 0, montant_paye = 0, montant_restant;

        //    string[] partie = code_paiement.Split(' ');
        //    type = partie[0];

        //    id_etudiant = Convert.ToInt32(partie[1]);
        //    id_variable = Convert.ToInt32(partie[2]);
        //    id_classe = Convert.ToInt32(partie[3]);
        //    id_departement = Convert.ToInt32(partie[4]);
        //    id_faculte = Convert.ToInt32(partie[5]);
        //    id_annee = Convert.ToInt32(partie[6]);
        //    id_user = Convert.ToInt32(partie[7]);
        //    id_paiement = Convert.ToInt32(partie[8]);
        //    if (type == "A" || type == "B")
        //    {
        //        titre = "BON DE COMMANDE D'UN DOCUMENT";
        //    }
        //    else
        //    {
        //        titre = "BON D'ACQUITTEMENT DES FRAIS";
        //    }


        //    string code_to_print = type + "-" + id_etudiant + "-" + id_variable + "-" + id_classe + "-" + id_departement + "-" + id_faculte + "-" + id_annee + "-" + id_user + "-" + id_paiement;

        //    DateTime dt = DateTime.Now;
        //    int year = dt.Year;
        //    int mois = dt.Month;
        //    int jour = dt.Day;
        //    int heure = dt.Hour;
        //    int min = dt.Minute;
        //    int sec = dt.Month;
        //    string date = jour + "-" + mois + "-" + year + "_à_" + heure + "h" + min + "min" + sec + "sec";

        //    iTextSharp.text.Document doc = new iTextSharp.text.Document(PageSize.A7, 10, 0, 0, 0);
        //    string docname = "AS_" + date + ".pdf";
        //    string outputFile = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.Desktop), @"BMDSys", docname);

        //    FileStream fs = new FileStream(outputFile, FileMode.Create, FileAccess.Write, FileShare.None);
        //    PdfWriter wri = PdfWriter.GetInstance(doc, fs);
        //    doc.Open();


        //    conn = new MySqlConnection(Authentification.MyString);
        //    conn.Open();


        //    string universite = Load_Institution(conn);

        //    string coordonee = Load_Adress(conn);
        //    string value = coordonee;
        //    string[] op = value.Split('-');
        //    site = op[0];
        //    siege = op[1];
        //    telephone = op[2];
        //    b_postale = op[3];

        //    string sq1 = "SELECT annee FROM annee WHERE id_annee=@id_annee";
        //    MySqlCommand cmd1 = new MySqlCommand(sq1, conn);
        //    cmd1.Parameters.AddWithValue("@id_annee", id_annee);
        //    MySqlDataReader dr1 = cmd1.ExecuteReader();
        //    while (dr1.Read())
        //    {
        //        annee = dr1.GetString(0);
        //    }
        //    dr1.Close();

        //    string sq2 = "SELECT faculte FROM faculte WHERE id_faculte=@id_faculte";
        //    MySqlCommand cmd2 = new MySqlCommand(sq2, conn);
        //    cmd2.Parameters.AddWithValue("@id_faculte", id_faculte);
        //    MySqlDataReader dr2 = cmd2.ExecuteReader();
        //    while (dr2.Read())
        //    {
        //        faculte = dr2.GetString(0);
        //    }
        //    dr2.Close();

        //    string sq3 = "SELECT departement FROM departement WHERE id_departement=@id_departement";
        //    MySqlCommand cmd3 = new MySqlCommand(sq3, conn);
        //    cmd3.Parameters.AddWithValue("@id_departement", id_departement);
        //    MySqlDataReader dr3 = cmd3.ExecuteReader();
        //    while (dr3.Read())
        //    {
        //        departement = dr3.GetString(0);
        //    }
        //    dr3.Close();

        //    string sq4 = "SELECT classe FROM classe WHERE id_classe=@id_classe";
        //    MySqlCommand cmd4 = new MySqlCommand(sq4, conn);
        //    cmd4.Parameters.AddWithValue("@id_classe", id_classe);
        //    MySqlDataReader dr4 = cmd4.ExecuteReader();
        //    while (dr4.Read())
        //    {
        //        classe = dr4.GetString(0);
        //    }
        //    dr4.Close();

        //    string sq5 = "SELECT cpte_variable.variable, cpte_variable_par_annee.prix_variable" +
        //        " FROM cpte_variable INNER JOIN cpte_variable_par_annee ON cpte_variable.id_variable = cpte_variable_par_annee.id_variable" +
        //        " WHERE cpte_variable_par_annee.id_variable=@id_variable AND cpte_variable_par_annee.id_annee=@id_annee";
        //    MySqlCommand cmd5 = new MySqlCommand(sq5, conn);
        //    cmd5.Parameters.AddWithValue("@id_annee", id_annee);
        //    cmd5.Parameters.AddWithValue("@id_variable", id_variable);
        //    MySqlDataReader dr5 = cmd5.ExecuteReader();
        //    while (dr5.Read())
        //    {
        //        variable = dr5.GetString(0);
        //        montant_requis = dr5.GetInt32(1);
        //    }
        //    dr5.Close();

        //    string sq6 = "SELECT nom,prenom,matricule FROM etudiant WHERE id_etudiant=@id_etudiant";
        //    MySqlCommand cmd6 = new MySqlCommand(sq6, conn);
        //    cmd6.Parameters.AddWithValue("@id_etudiant", id_etudiant);
        //    MySqlDataReader dr6 = cmd6.ExecuteReader();
        //    while (dr6.Read())
        //    {
        //        etudiant = dr6.GetString(1) + " " + dr6.GetString(0);
        //        matricule = dr6.GetString(2);
        //    }
        //    dr6.Close();

        //    string sq7 = "SELECT matricule FROM personnel WHERE id_personnel=@id_personnel";
        //    MySqlCommand cmd7 = new MySqlCommand(sq7, conn);
        //    cmd7.Parameters.AddWithValue("@id_personnel", id_user);
        //    MySqlDataReader dr7 = cmd7.ExecuteReader();
        //    while (dr7.Read())
        //    {
        //        user_matricule = dr7.GetString(0);
        //    }
        //    dr7.Close();

        //    string sq9 = "SELECT nom,prenom FROM personnel WHERE id_personnel=@id_personnel";
        //    MySqlCommand cmd9 = new MySqlCommand(sq9, conn);
        //    cmd9.Parameters.AddWithValue("@id_personnel", Authentification.id_user);
        //    MySqlDataReader dr9 = cmd9.ExecuteReader();
        //    while (dr9.Read())
        //    {
        //        logged_user = dr9.GetString(1) + " " + dr9.GetString(0);
        //    }
        //    dr9.Close();

        //    string sq8 = "SELECT cpte_banque.banque, cpte_compte.compte, cpte_paiement.bordereau, cpte_paiement.date_paie, cpte_paiement.date_saisie, cpte_paiement.montant" +
        //        " FROM cpte_banque INNER JOIN (cpte_paiement INNER JOIN cpte_compte ON cpte_paiement.id_compte = cpte_compte.id_compte) ON cpte_banque.id_banque = cpte_compte.id_banque" +
        //        " WHERE id_paiement=@id_paiement";
        //    MySqlCommand cmd8 = new MySqlCommand(sq8, conn);
        //    cmd8.Parameters.AddWithValue("@id_paiement", id_paiement);
        //    MySqlDataReader dr8 = cmd8.ExecuteReader();
        //    while (dr8.Read())
        //    {
        //        banque = dr8.GetString(0);
        //        compte = dr8.GetString(1);
        //        bordereau = dr8.GetString(2);
        //        date_paie = dr8.GetString(3);
        //        date_saisie = dr8.GetString(4);
        //        montant_paye = dr8.GetInt32(5);
        //    }
        //    dr8.Close();


        //    //header
        //    PdfPCell cell = new PdfPCell(new Phrase("", font_bold_10));
        //    /*PdfPTable table1 = first_header(conn, universite, ref cell, faculte);
        //    doc.Add(table1);

        //    iTextSharp.text.Paragraph separateur = new iTextSharp.text.Paragraph(" ", font_normal_9);
        //    separateur.Alignment = Element.ALIGN_JUSTIFIED;
        //    separateur.SpacingAfter = 35;
        //    separateur.SpacingAfter = 35;
        //    doc.Add(separateur);*/



        //    //header type
        //    PdfPTable table2 = new PdfPTable(1);
        //    float[] colwith2 = { 20f };
        //    table2.SetWidths(colwith2);

        //    BarcodeQRCode qrcode = new BarcodeQRCode(code_paiement, 60, 80, null);
        //    iTextSharp.text.Image img1 = qrcode.GetImage();
        //    cell = new PdfPCell(img1);
        //    cell.HorizontalAlignment = Element.ALIGN_CENTER;
        //    cell.BorderWidth = 0;
        //    table2.AddCell(cell);

        //    cell = new PdfPCell(new Phrase(titre + "\n\nN° " + code_to_print, font_bold_underlined_8));
        //    cell.HorizontalAlignment = Element.ALIGN_CENTER;
        //    cell.BorderWidth = 0;
        //    table2.AddCell(cell);
        //    doc.Add(table2);

        //    iTextSharp.text.Paragraph separateur1 = new iTextSharp.text.Paragraph(" ", font_normal_6);
        //    separateur1.Alignment = Element.ALIGN_JUSTIFIED;
        //    separateur1.SpacingAfter = 5;
        //    separateur1.SpacingAfter = 5;
        //    doc.Add(separateur1);

        //    /*string frequentation = "Je soussigné(e), " + logged_user + ", atteste par la présente que " + etudiant + ", etudiant en " + classe + " du Département/de la Filière de(d') " + departement + " de la (l’) " + faculte + "; A-A: " + annee + ", s’est acquitté(e) des frais dont les sont les suivants:";


        //    iTextSharp.text.Paragraph contenu = new iTextSharp.text.Paragraph(frequentation, font_normal_10);
        //    contenu.Alignment = Element.ALIGN_JUSTIFIED;
        //    contenu.IndentationLeft = 50;
        //    contenu.IndentationRight = 50;
        //    doc.Add(contenu);

        //    iTextSharp.text.Paragraph separateur3 = new iTextSharp.text.Paragraph(" ", font_normal_9);
        //    separateur3.Alignment = Element.ALIGN_JUSTIFIED;
        //    separateur3.SpacingAfter = 5;
        //    separateur3.SpacingAfter = 5;
        //    doc.Add(separateur3);*/

        //    //header type
        //    PdfPTable table3 = new PdfPTable(2);
        //    float[] colwith3 = { 8f, 12f };
        //    table3.SetWidths(colwith3);

        //    cell = new PdfPCell(new Phrase("Type de frais ", font_normal_5));
        //    cell.HorizontalAlignment = Element.ALIGN_RIGHT;
        //    cell.BorderWidth = 0;
        //    table3.AddCell(cell);

        //    cell = new PdfPCell(new Phrase("    " + variable, font_bold_6));
        //    cell.HorizontalAlignment = Element.ALIGN_LEFT;
        //    cell.BorderWidthLeft = 0;
        //    cell.BorderWidthRight = 0;
        //    table3.AddCell(cell);

        //    cell = new PdfPCell(new Phrase("Montant requis", font_normal_5));
        //    cell.HorizontalAlignment = Element.ALIGN_RIGHT;
        //    cell.BorderWidth = 0;
        //    table3.AddCell(cell);

        //    cell = new PdfPCell(new Phrase("    " + montant_requis + " BIF", font_bold_6));
        //    cell.HorizontalAlignment = Element.ALIGN_LEFT;
        //    cell.BorderWidthLeft = 0;
        //    cell.BorderWidthRight = 0;
        //    table3.AddCell(cell);


        //    cell = new PdfPCell(new Phrase("Montant payé", font_normal_5));
        //    cell.HorizontalAlignment = Element.ALIGN_RIGHT;
        //    cell.BorderWidth = 0;
        //    table3.AddCell(cell);

        //    cell = new PdfPCell(new Phrase("    " + montant_paye + " BIF", font_bold_6));
        //    cell.HorizontalAlignment = Element.ALIGN_LEFT;
        //    cell.BorderWidthLeft = 0;
        //    cell.BorderWidthRight = 0;
        //    table3.AddCell(cell);



        //    cell = new PdfPCell(new Phrase("Date de l'opération ", font_normal_5));
        //    cell.HorizontalAlignment = Element.ALIGN_RIGHT;
        //    cell.BorderWidth = 0;
        //    table3.AddCell(cell);

        //    cell = new PdfPCell(new Phrase("    " + date_paie, font_bold_6));
        //    cell.HorizontalAlignment = Element.ALIGN_LEFT;
        //    cell.BorderWidthLeft = 0;
        //    cell.BorderWidthRight = 0;
        //    table3.AddCell(cell);



        //    cell = new PdfPCell(new Phrase("Banque", font_normal_5));
        //    cell.HorizontalAlignment = Element.ALIGN_RIGHT;
        //    cell.BorderWidth = 0;
        //    table3.AddCell(cell);

        //    cell = new PdfPCell(new Phrase("    " + banque, font_bold_6));
        //    cell.HorizontalAlignment = Element.ALIGN_LEFT;
        //    cell.BorderWidthLeft = 0;
        //    cell.BorderWidthRight = 0;
        //    table3.AddCell(cell);


        //    cell = new PdfPCell(new Phrase("Compte", font_normal_5));
        //    cell.HorizontalAlignment = Element.ALIGN_RIGHT;
        //    cell.BorderWidth = 0;
        //    table3.AddCell(cell);

        //    cell = new PdfPCell(new Phrase("    " + compte, font_bold_6));
        //    cell.HorizontalAlignment = Element.ALIGN_LEFT;
        //    cell.BorderWidthLeft = 0;
        //    cell.BorderWidthRight = 0;
        //    table3.AddCell(cell);



        //    cell = new PdfPCell(new Phrase("Montant restant", font_normal_5));
        //    cell.HorizontalAlignment = Element.ALIGN_RIGHT;
        //    cell.BorderWidth = 0;
        //    table3.AddCell(cell);

        //    cell = new PdfPCell(new Phrase("    " + (montant_requis - montant_paye) + " BIF", font_bold_6));
        //    cell.HorizontalAlignment = Element.ALIGN_LEFT;
        //    cell.BorderWidthLeft = 0;
        //    cell.BorderWidthRight = 0;
        //    table3.AddCell(cell);


        //    cell = new PdfPCell(new Phrase("Bordereau", font_normal_5));
        //    cell.HorizontalAlignment = Element.ALIGN_RIGHT;
        //    cell.BorderWidth = 0;
        //    table3.AddCell(cell);

        //    cell = new PdfPCell(new Phrase("    " + bordereau, font_bold_6));
        //    cell.HorizontalAlignment = Element.ALIGN_LEFT;
        //    cell.BorderWidthLeft = 0;
        //    cell.BorderWidthRight = 0;
        //    table3.AddCell(cell);


        //    cell = new PdfPCell(new Phrase("Enregistré par ", font_normal_5));
        //    cell.HorizontalAlignment = Element.ALIGN_RIGHT;
        //    cell.BorderWidth = 0;
        //    table3.AddCell(cell);

        //    cell = new PdfPCell(new Phrase("    " + user_matricule, font_bold_6));
        //    cell.HorizontalAlignment = Element.ALIGN_LEFT;
        //    cell.BorderWidthLeft = 0;
        //    cell.BorderWidthRight = 0;
        //    table3.AddCell(cell);

        //    cell = new PdfPCell(new Phrase("Date d'enregistrement ", font_normal_5));
        //    cell.HorizontalAlignment = Element.ALIGN_RIGHT;
        //    cell.BorderWidth = 0;
        //    table3.AddCell(cell);

        //    cell = new PdfPCell(new Phrase("    " + date_saisie, font_bold_6));
        //    cell.HorizontalAlignment = Element.ALIGN_LEFT;
        //    cell.BorderWidthLeft = 0;
        //    cell.BorderWidthRight = 0;
        //    table3.AddCell(cell);

        //    doc.Add(table3);


        //    /*iTextSharp.text.Paragraph separateur2 = new iTextSharp.text.Paragraph(" ", font_normal_6);
        //    separateur2.Alignment = Element.ALIGN_JUSTIFIED;
        //    separateur2.SpacingAfter = 10;
        //    separateur2.SpacingAfter = 10;
        //    doc.Add(separateur2);*/


        //    /*string frequentation1 = "Etabli pour servir et faire valoir ce que de droit.";

        //    iTextSharp.text.Paragraph contenu1 = new iTextSharp.text.Paragraph(frequentation1, font_bold_6);
        //    contenu1.Alignment = Element.ALIGN_JUSTIFIED;
        //    //contenu1.IndentationLeft = 10;
        //    //contenu1.IndentationRight = 10;
        //    doc.Add(contenu1);*/

        //    PdfPTable tVisa = new PdfPTable(1);//Creer une table de 5 colonnes
        //    float[] colwithv = { 30f };//parametrer les domensions(largeur) de chacune des collonnes
        //    tVisa.SetWidths(colwithv);//appliquer ces dimenstions a l atable


        //    string dat = "Etabli pour servir et faire valoir ce que de droit.\n\n" + siege + ",le " + DateTime.Today.Date.ToString("dd/MM/yyyy") + "\n\nSercive de la comptabilite";
        //    cell = new PdfPCell(new Phrase(dat, font_normal_6));
        //    cell.HorizontalAlignment = Element.ALIGN_RIGHT;
        //    cell.BorderWidth = 0;
        //    tVisa.AddCell(cell);

        //    Paragraph pVisa = new Paragraph();
        //    //parf.IndentationLeft = 240;
        //    pVisa.Alignment = Element.ALIGN_CENTER;
        //    //pVisa.SpacingAfter = 6;
        //    pVisa.SpacingBefore = 8;
        //    pVisa.Add(tVisa);

        //    doc.Add(pVisa);



        //    wri.PageEvent = new Foot();
        //    doc.Close();
        //    //reader.Close();
        //    System.Diagnostics.Process.Start(outputFile);
        //    conn.Close();

        //}
        public void Attestation_frequentation(int id_an, int id_etu, int id_doc)
        {
            int id_annee = id_an;
            int id_etudiant = id_etu;
            int id_document = id_doc;

            Create_Folder();

            DateTime dt = DateTime.Now;
            int year = dt.Year;
            int mois = dt.Month;
            int jour = dt.Day;
            int heure = dt.Hour;
            int min = dt.Minute;
            int sec = dt.Month;
            string date = jour + "-" + mois + "-" + year + "_à_" + heure + "h" + min + "min" + sec + "sec";

            iTextSharp.text.Document doc = new iTextSharp.text.Document(PageSize.A4, 20, 20, 50, 20);
            string docname = "AF_" + date + ".pdf";
            string outputFile = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.Desktop), @"BMDSys", docname);
            FileStream fs = new FileStream(outputFile, FileMode.Create, FileAccess.Write, FileShare.None);
            PdfWriter wri = PdfWriter.GetInstance(doc, fs);
            doc.Open();

            conn = new MySqlConnection(Authentification.MyString);
            conn.Open();


            string nom_etudiant = "", annee = "";

            string ren = "SELECT nom,prenom FROM etudiant  WHERE id_etudiant=@id_etudiant";
            MySqlCommand cmn = new MySqlCommand(ren, conn);
            cmn.Parameters.AddWithValue("@id_etudiant", id_etudiant);
            MySqlDataReader drn = cmn.ExecuteReader();
            while (drn.Read())
            {
                nom_etudiant = drn.GetString(1) + " " + drn.GetString(0);
            }
            drn.Close();

            string rena = "SELECT annee FROM annee  WHERE id_annee=@id_annee";
            MySqlCommand cmna = new MySqlCommand(rena, conn);
            cmna.Parameters.AddWithValue("@id_annee", id_annee);
            MySqlDataReader drna = cmna.ExecuteReader();
            while (drna.Read())
            {
                annee = drna.GetString(0);
            }
            drna.Close();

            string universite = Load_Institution(conn);

            string coordonee = Load_Adress(conn);
            string value = coordonee;
            string[] op = value.Split('-');
            site = op[0];
            siege = op[1];
            telephone = op[2];
            b_postale = op[3];

            int nbre = 0;
            string code = "";
            string annee_header = "";

            string etudiant = "", chef_service = "", titre_principal = "", faculte = "", classe = "", annee_academique = "";


            string sql = "SELECT DISTINCT etudiant_inscription.id_classe, annee.annee, faculte.faculte" +
                " FROM (annee INNER JOIN etudiant_inscription ON annee.id_annee = etudiant_inscription.id_annee) INNER JOIN faculte ON etudiant_inscription.id_faculte = faculte.id_faculte" +
                " WHERE etudiant_inscription.id_annee=@id_annee AND etudiant_inscription.id_etudiant=@id_etudiant AND etudiant_inscription.id_session=@id_session";
            MySqlCommand cmd = new MySqlCommand(sql, conn);
            cmd.Parameters.AddWithValue("@id_annee", id_annee);
            cmd.Parameters.AddWithValue("@id_etudiant", id_etudiant);
            cmd.Parameters.AddWithValue("@id_session", 1);
            MySqlDataReader dr = cmd.ExecuteReader();
            while (dr.Read())
            {
                annee_academique = dr.GetString(1);
                faculte = dr.GetString(2);
                switch (dr.GetInt32(0))
                {
                    case 1: classe = "1ère";
                        break;
                    case 2: classe = "2ème";
                        break;
                    case 3: classe = "3ème";
                        break;
                    case 4: classe = "4ème";
                        break;
                    case 5: classe = "5ème";
                        break;
                }
            }
            dr.Close();

            PdfPCell cell = new PdfPCell(new Phrase("", font_bold_10));
            PdfPTable table1 = first_header(conn, universite, ref cell, faculte);
            doc.Add(table1);




            string req = "SELECT COUNT(*) FROM signataire_document_delivre";
            MySqlCommand com = new MySqlCommand(req, conn);
            int nbre_livre = Convert.ToInt32(com.ExecuteScalar());
            if (nbre_livre > 0)
            {
                nbre = nbre_livre + 1;
            }
            else
            {
                nbre = nbre + 1;
            }

            string sla = "SELECT annee  FROM annee WHERE etat_annee=@etat_annee";
            MySqlCommand cma = new MySqlCommand(sla, conn);
            cma.Parameters.AddWithValue("@etat_annee", "Encours");
            MySqlDataReader da = cma.ExecuteReader();
            while (da.Read())
            {
                annee_header = da.GetString(0);
            }
            da.Close();

            code = nbre + "/" + annee_header;


            iTextSharp.text.Paragraph txt_titre1 = new iTextSharp.text.Paragraph("ATTESTATION DE FREQUENTATION N° " + code, font_normal_underlined_10);
            txt_titre1.Alignment = Element.ALIGN_CENTER;
            txt_titre1.SpacingBefore = 100;
            txt_titre1.SpacingAfter = 20;
            doc.Add(txt_titre1);



            string sqla = "SELECT personnel.nom, personnel.prenom, signataire_principal.titre_principal" +
                " FROM personnel INNER JOIN signataire_principal ON personnel.id_personnel = signataire_principal.id_personnel" +
                " WHERE signataire_principal.id_document=@id_document";
            MySqlCommand cmda = new MySqlCommand(sqla, conn);
            cmda.Parameters.AddWithValue("@id_document", id_document);
            MySqlDataReader dra = cmda.ExecuteReader();
            while (dra.Read())
            {
                chef_service = dra.GetString(1) + "  " + dra.GetString(0);
                titre_principal = dra.GetString(2);
            }
            dra.Close();





            string frequentation = "Je soussignée, " + chef_service + ", " + titre_principal + " à l’" + Load_Institution(conn) + ", atteste par la présente que " +
                "le(la) nommé(e) " + nom_etudiant +
                " a fréquenté la " + classe + " année de Baccalauréat à la(l') " + faculte +
                " au cours de l’année académique " + annee_academique + ".\n\n\n" +
                "    Cette attestation est établie à la demande de l’intéressé (e) pour servir et faire valoir ce que de droit.";

            iTextSharp.text.Paragraph contenu = new iTextSharp.text.Paragraph(frequentation, font_normal_10);
            contenu.Alignment = Element.ALIGN_JUSTIFIED;
            contenu.SpacingAfter = 15;
            contenu.IndentationLeft = 50;
            contenu.IndentationRight = 50;
            doc.Add(contenu);


            string rqto = "INSERT INTO signataire_document_delivre(id_document, id_annee,id_etudiant,date) VALUES (@id_document, @id_annee,@id_etudiant,@date)";
            MySqlCommand cmdo = new MySqlCommand(rqto, conn);
            cmdo.Parameters.AddWithValue("@id_etudiant", id_etudiant);
            cmdo.Parameters.AddWithValue("@id_document", id_document);
            cmdo.Parameters.AddWithValue("@id_annee", id_annee);
            cmdo.Parameters.AddWithValue("@date", DateTime.Today.Date.ToShortDateString());
            cmdo.ExecuteNonQuery();


            PdfPTable tVisa = new PdfPTable(5);//Creer une table de 5 colonnes
            float[] colwithv = { 7f, 7f, 7f, 7f, 12f };//parametrer les domensions(largeur) de chacune des collonnes
            tVisa.SetWidths(colwithv);//appliquer ces dimenstions a l atable


            cell = new PdfPCell(new Phrase("", font_bold_10));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidthLeft = 0;
            cell.BorderWidthRight = 0;
            cell.BorderWidthTop = 0;
            cell.BorderWidth = 0;
            cell.Colspan = 3;
            tVisa.AddCell(cell);

            //string dat = "Fait à " + siege + " ,le " + DateTime.Today.Date.ToShortDateString();

            string dat = "\n\n\nFait à " + siege + " ,le " + DateTime.Today.Date.ToShortDateString();
            string nom_rect = titre_principal + "\n\n" + chef_service;
            cell = new PdfPCell(new Phrase(dat + "\n\n" + nom_rect, font_bold_10));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidthLeft = 0;
            cell.BorderWidthRight = 0;
            cell.BorderWidthTop = 0;
            cell.BorderWidth = 0;
            cell.Colspan = 2;
            tVisa.AddCell(cell);

            Paragraph pVisa = new Paragraph();
            //parf.IndentationLeft = 240;
            pVisa.Alignment = Element.ALIGN_CENTER;
            //pVisa.SpacingAfter = 6;
            pVisa.SpacingBefore = 8;
            pVisa.Add(tVisa);

            doc.Add(pVisa);

            wri.PageEvent = new Foot();
            doc.Close();
            //reader.Close();
            System.Diagnostics.Process.Start(outputFile);
            conn.Close();

        }
        public void Attestation_Reussite(int id_an, int id_etu, int id_doc)
        {
            int id_annee = id_an;
            int id_etudiant = id_etu;
            int id_document = id_doc;


            Create_Folder();

            DateTime dt = DateTime.Now;
            int year = dt.Year;
            int mois = dt.Month;
            int jour = dt.Day;
            int heure = dt.Hour;
            int min = dt.Minute;
            int sec = dt.Month;
            string date = jour + "-" + mois + "-" + year + "_à_" + heure + "h" + min + "min" + sec + "sec";

            iTextSharp.text.Document doc = new iTextSharp.text.Document(PageSize.A4, 20, 20, 50, 20);
            string docname = "AF_" + date + ".pdf";
            string outputFile = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.Desktop), @"BMDSys", docname);
            FileStream fs = new FileStream(outputFile, FileMode.Create, FileAccess.Write, FileShare.None);
            PdfWriter wri = PdfWriter.GetInstance(doc, fs);
            doc.Open();

            Font times = new Font(BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, false), 10, Font.BOLD, BaseColor.BLACK);
            Font time_all_text = new Font(BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, false), 11, Font.BOLD, BaseColor.BLACK);
            Font time_all_text1 = new Font(BaseFont.CreateFont(BaseFont.COURIER, BaseFont.CP1252, false), 10, Font.NORMAL, BaseColor.BLACK);
            Font timesmall = new Font(BaseFont.CreateFont(BaseFont.COURIER_BOLD, BaseFont.CP1252, false), 10, Font.NORMAL, BaseColor.BLACK);
            Font timesunderlined = new Font(Font.FontFamily.TIMES_ROMAN, 12, Font.BOLD | Font.UNDERLINE, BaseColor.BLACK);


            conn = new MySqlConnection(Authentification.MyString);
            conn.Open();

            string nom_etudiant = "", annee = "";

            string ren = "SELECT nom,prenom FROM etudiant  WHERE id_etudiant=@id_etudiant";
            MySqlCommand cmn = new MySqlCommand(ren, conn);
            cmn.Parameters.AddWithValue("@id_etudiant", id_etudiant);
            MySqlDataReader drn = cmn.ExecuteReader();
            while (drn.Read())
            {
                nom_etudiant = drn.GetString(1) + " " + drn.GetString(0);
            }
            drn.Close();

            string rena = "SELECT annee FROM annee  WHERE id_annee=@id_annee";
            MySqlCommand cmna = new MySqlCommand(rena, conn);
            cmna.Parameters.AddWithValue("@id_annee", id_annee);
            MySqlDataReader drna = cmna.ExecuteReader();
            while (drna.Read())
            {
                annee = drna.GetString(0);
            }
            drna.Close();


            PdfPCell cell = new PdfPCell(new Phrase("", times));
            PdfPTable table1 = new PdfPTable(5);//Creer une table de 5 colonnes
            float[] colwith1 = { 10f, 7f, 8f, 10f, 7f };//parametrer les domensions(largeur) de chacune des collonnes
            table1.SetWidths(colwith1);//appliquer ces dimenstions a l atable


            string universite = Load_Institution(conn);

            string coordonee = Load_Adress(conn);
            string value = coordonee;
            string[] op = value.Split('-');
            site = op[0];
            siege = op[1];
            telephone = op[2];
            b_postale = op[3];


            iTextSharp.text.Image myImage1 = Class_Reports.Get_LogoImage(conn);
            cell = new PdfPCell(myImage1);
            cell.HorizontalAlignment = Element.ALIGN_RIGHT;
            cell.BorderWidth = 0;
            cell.Colspan = 2;
            cell.Rowspan = 4;
            table1.AddCell(cell);


            cell = new PdfPCell(new Phrase(" ", times));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 3;
            table1.AddCell(cell);


            cell = new PdfPCell(new Phrase(universite, times));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 2;
            table1.AddCell(cell);

            cell = new PdfPCell(new Phrase(" ", times));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            table1.AddCell(cell);


            cell = new PdfPCell(new Phrase(b_postale, times));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 2;
            table1.AddCell(cell);

            cell = new PdfPCell(new Phrase(" ", times));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            table1.AddCell(cell);

            cell = new PdfPCell(new Phrase("TELEPHONE " + telephone, times));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 2;
            table1.AddCell(cell);

            cell = new PdfPCell(new Phrase(" ", times));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            table1.AddCell(cell);

            doc.Add(table1);


            int num = 0;
            int nbre = 0;
            string code = "AR";

            string req = "SELECT COUNT(*) FROM signataire_document_delivre WHERE id_document=@id_document AND id_annee=@id_annee";
            MySqlCommand com = new MySqlCommand(req, conn);
            com.Parameters.AddWithValue("@id_document", 3);
            com.Parameters.AddWithValue("@id_annee", id_annee);
            int nbre_livre = Convert.ToInt32(com.ExecuteScalar());
            if (nbre_livre > 0)
            {
                string re = "SELECT numero FROM signataire_document_delivre  WHERE id_document=@id_document AND id_annee=@id_annee";
                MySqlCommand cm = new MySqlCommand(re, conn);
                cm.Parameters.AddWithValue("@id_document", 3);
                cm.Parameters.AddWithValue("@id_annee", id_annee);
                MySqlDataReader dri = cm.ExecuteReader();
                while (dri.Read())
                {
                    num = dri.GetInt32(0);
                }
                dri.Close();
                num = num + 1;

                string rea = "SELECT COUNT(*) FROM signataire_document_delivre WHERE id_document=@id_document AND id_annee=@id_annee AND id_etudiant=@id_etudiant";
                MySqlCommand cma = new MySqlCommand(rea, conn);
                cma.Parameters.AddWithValue("@id_document", 3);
                cma.Parameters.AddWithValue("@id_annee", id_annee);
                cma.Parameters.AddWithValue("@id_etudiant", id_etudiant);
                nbre = Convert.ToInt32(cma.ExecuteScalar());
                nbre = nbre + 1;

                code = code + " " + id_annee + " " + nbre + " " + num;
            }
            else
            {
                num = num + 1;
                nbre = nbre + 1;
                code = code + " " + id_annee + " " + nbre + " " + num;
            }




            iTextSharp.text.Paragraph txt_titre1 = new iTextSharp.text.Paragraph("ATTESTATION DE REUSSITE - " + code, timesunderlined);
            txt_titre1.Alignment = Element.ALIGN_CENTER;
            txt_titre1.SpacingBefore = 40;
            txt_titre1.SpacingAfter = 20;
            doc.Add(txt_titre1);

            string etudiant = "", chef_service = "", titre_principal = "", faculte = "", classe = "", annee_academique = "", etat_annee = "";

            string sqla = "SELECT personnel.nom, personnel.prenom, signataire_principal.titre_principal" +
                " FROM personnel INNER JOIN signataire_principal ON personnel.id_personnel = signataire_principal.id_personnel" +
                " WHERE signataire_principal.id_document=@id_document AND signataire_principal.id_annee=@id_annee";
            MySqlCommand cmda = new MySqlCommand(sqla, conn);
            cmda.Parameters.AddWithValue("@id_document", 3);
            cmda.Parameters.AddWithValue("@id_annee", id_annee);
            MySqlDataReader dra = cmda.ExecuteReader();
            while (dra.Read())
            {
                chef_service = dra.GetString(1) + "  " + dra.GetString(0);
                titre_principal = dra.GetString(2);
            }
            dra.Close();

            string sql = "SELECT annee.annee, faculte.faculte, etudiant_inscription.id_classe,annee.etat_annee" +
                " FROM (annee INNER JOIN etudiant_inscription ON annee.id_annee = etudiant_inscription.id_annee) INNER JOIN faculte ON etudiant_inscription.id_faculte = faculte.id_faculte" +
                " WHERE etudiant_inscription.id_annee=@id_annee AND etudiant_inscription.id_etudiant=@id_etudiant AND etudiant_inscription.id_session=@id_session";
            MySqlCommand cmd = new MySqlCommand(sql, conn);
            cmd.Parameters.AddWithValue("@id_annee", id_annee);
            cmd.Parameters.AddWithValue("@id_etudiant", id_etudiant);
            cmd.Parameters.AddWithValue("@id_session", 1);
            MySqlDataReader dr = cmd.ExecuteReader();
            while (dr.Read())
            {
                annee_academique = dr.GetString(0);
                faculte = dr.GetString(1);
                etat_annee = dr.GetString(3);
                switch (dr.GetInt32(2))
                {
                    case 1: classe = "1ere";
                        break;
                    case 2: classe = "2eme";
                        break;
                    case 3: classe = "3eme";
                        break;
                    case 4: classe = "4eme";
                        break;
                    case 5: classe = "5eme";
                        break;
                }
            }
            dr.Close();

            if (etat_annee != "Encours" || etat_annee == "")
            {

            }
            else
            {
                string frequentation = "Je soussignée, " + chef_service + ", " + titre_principal + "+ à l’" + Load_Institution(conn) + ", atteste par la présente que " +
                "le(la) nommé(e)" + nom_etudiant + " suit régulièrement ses études " +
                "en " + classe + " année de baccalauréat à la(l') " + faculte +
                " au cours de cette année académique  " + annee_academique + ".\n\n\n" +
                "    Cette attestation est établie à la demande de l’intéressé (e) pour servir et faire valoir ce que de droit.";

                iTextSharp.text.Paragraph contenu = new iTextSharp.text.Paragraph(frequentation, time_all_text1);
                contenu.Alignment = Element.ALIGN_JUSTIFIED;
                contenu.SpacingAfter = 15;
                contenu.IndentationLeft = 50;
                contenu.IndentationRight = 50;
                doc.Add(contenu);




                string rqto = "INSERT INTO signataire_document_delivre(id_document, id_annee,id_etudiant,numero,date) VALUES (@id_document, @id_annee,@id_etudiant,@numero,@date)";
                MySqlCommand cmdo = new MySqlCommand(rqto, conn);
                cmdo.Parameters.AddWithValue("@numero", num);
                cmdo.Parameters.AddWithValue("@id_etudiant", id_etudiant);
                cmdo.Parameters.AddWithValue("@id_document", 3);
                cmdo.Parameters.AddWithValue("@id_annee", id_annee);
                cmdo.Parameters.AddWithValue("@date", DateTime.Today.Date.ToShortDateString());
                cmdo.ExecuteNonQuery();

                PdfPTable tVisa = new PdfPTable(5);//Creer une table de 5 colonnes
                float[] colwithv = { 7f, 7f, 7f, 7f, 12f };//parametrer les domensions(largeur) de chacune des collonnes
                tVisa.SetWidths(colwithv);//appliquer ces dimenstions a l atable


                cell = new PdfPCell(new Phrase("", timesmall));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 3;
                tVisa.AddCell(cell);


                string dat = "\n\n\nFait à " + siege + " ,le " + DateTime.Today.Date.ToShortDateString();
                string nom_rect = titre_principal + "\n\n" + chef_service;
                cell = new PdfPCell(new Phrase(dat + "\n\n" + nom_rect, timesmall));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 2;
                tVisa.AddCell(cell);

                Paragraph pVisa = new Paragraph();
                //parf.IndentationLeft = 240;
                pVisa.Alignment = Element.ALIGN_CENTER;
                //pVisa.SpacingAfter = 6;
                pVisa.SpacingBefore = 8;
                pVisa.Add(tVisa);

                doc.Add(pVisa);
            }


            wri.PageEvent = new Foot();
            doc.Close();
            //reader.Close();
            System.Diagnostics.Process.Start(outputFile);
            conn.Close();

        }
        public void Attestation_Scolarite(int id_an, int id_etu, int id_doc)
        {
            int id_annee = id_an;
            int id_etudiant = id_etu;
            int id_document = id_doc;

            Create_Folder();

            DateTime dt = DateTime.Now;
            int year = dt.Year;
            int mois = dt.Month;
            int jour = dt.Day;
            int heure = dt.Hour;
            int min = dt.Minute;
            int sec = dt.Month;
            string date = jour + "-" + mois + "-" + year + "_à_" + heure + "h" + min + "min" + sec + "sec";

            iTextSharp.text.Document doc = new iTextSharp.text.Document(PageSize.A4, 20, 20, 50, 20);
            string docname = "AS_" + date + ".pdf";
            string outputFile = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.Desktop), @"BMDSys", docname);
            FileStream fs = new FileStream(outputFile, FileMode.Create, FileAccess.Write, FileShare.None);
            PdfWriter wri = PdfWriter.GetInstance(doc, fs);
            doc.Open();

            Font times = new Font(BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, false), 10, Font.BOLD, BaseColor.BLACK);
            Font time_all_text = new Font(BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, false), 11, Font.BOLD, BaseColor.BLACK);
            Font time_all_text1 = new Font(BaseFont.CreateFont(BaseFont.COURIER, BaseFont.CP1252, false), 10, Font.NORMAL, BaseColor.BLACK);
            Font timesmall = new Font(BaseFont.CreateFont(BaseFont.COURIER_BOLD, BaseFont.CP1252, false), 10, Font.NORMAL, BaseColor.BLACK);
            Font timesunderlined = new Font(Font.FontFamily.TIMES_ROMAN, 12, Font.BOLD | Font.UNDERLINE, BaseColor.BLACK);




            conn = new MySqlConnection(Authentification.MyString);
            conn.Open();
            string nom_etudiant = "", annee = "";

            string ren = "SELECT nom,prenom FROM etudiant  WHERE id_etudiant=@id_etudiant";
            MySqlCommand cmn = new MySqlCommand(ren, conn);
            cmn.Parameters.AddWithValue("@id_etudiant", id_etudiant);
            MySqlDataReader drn = cmn.ExecuteReader();
            while (drn.Read())
            {
                nom_etudiant = drn.GetString(1) + " " + drn.GetString(0);
            }
            drn.Close();

            string rena = "SELECT annee FROM annee  WHERE id_annee=@id_annee";
            MySqlCommand cmna = new MySqlCommand(rena, conn);
            cmna.Parameters.AddWithValue("@id_annee", id_annee);
            MySqlDataReader drna = cmna.ExecuteReader();
            while (drna.Read())
            {
                annee = drna.GetString(0);
            }
            drna.Close();

            string universite = Load_Institution(conn);

            string coordonee = Load_Adress(conn);
            string value = coordonee;
            string[] op = value.Split('-');
            site = op[0];
            siege = op[1];
            telephone = op[2];
            b_postale = op[3];


            int nbre = 0;
            string code = "";
            string annee_header = "";

            string etudiant = "", chef_service = "", titre_principal = "", faculte = "", classe = "", annee_academique = "", etat_annee = "";


            string sql = "SELECT annee.annee, faculte.faculte, etudiant_inscription.id_classe,annee.etat_annee" +
                " FROM (annee INNER JOIN etudiant_inscription ON annee.id_annee = etudiant_inscription.id_annee) INNER JOIN faculte ON etudiant_inscription.id_faculte = faculte.id_faculte" +
                " WHERE etudiant_inscription.id_annee=@id_annee AND etudiant_inscription.id_etudiant=@id_etudiant AND etudiant_inscription.id_session=@id_session";
            MySqlCommand cmd = new MySqlCommand(sql, conn);
            cmd.Parameters.AddWithValue("@id_annee", id_annee);
            cmd.Parameters.AddWithValue("@id_etudiant", id_etudiant);
            cmd.Parameters.AddWithValue("@id_session", 1);
            MySqlDataReader dr = cmd.ExecuteReader();
            while (dr.Read())
            {
                annee_academique = dr.GetString(0);
                faculte = dr.GetString(1);
                etat_annee = dr.GetString(3);
                switch (dr.GetInt32(2))
                {
                    case 1: classe = "1ère";
                        break;
                    case 2: classe = "2ème";
                        break;
                    case 3: classe = "3ème";
                        break;
                    case 4: classe = "4ème";
                        break;
                    case 5: classe = "5ème";
                        break;
                }
            }
            dr.Close();

            PdfPCell cell = new PdfPCell(new Phrase("", font_bold_10));
            PdfPTable table1 = first_header(conn, universite, ref cell, faculte);
            doc.Add(table1);



            string req = "SELECT COUNT(*) FROM signataire_document_delivre";
            MySqlCommand com = new MySqlCommand(req, conn);
            int nbre_livre = Convert.ToInt32(com.ExecuteScalar());
            if (nbre_livre > 0)
            {
                nbre = nbre_livre + 1;
            }
            else
            {
                nbre = nbre + 1;
            }

            string sla = "SELECT annee  FROM annee WHERE etat_annee=@etat_annee";
            MySqlCommand cma = new MySqlCommand(sla, conn);
            cma.Parameters.AddWithValue("@etat_annee", "Encours");
            MySqlDataReader da = cma.ExecuteReader();
            while (da.Read())
            {
                annee_header = da.GetString(0);
            }
            da.Close();

            code = nbre + "/" + annee_header;


            iTextSharp.text.Paragraph txt_titre1 = new iTextSharp.text.Paragraph("ATTESTATION DE SCOLARITE N° " + code, timesunderlined);
            txt_titre1.Alignment = Element.ALIGN_CENTER;
            txt_titre1.SpacingBefore = 40;
            txt_titre1.SpacingAfter = 20;
            doc.Add(txt_titre1);




            string sqla = "SELECT personnel.nom, personnel.prenom, signataire_principal.titre_principal" +
                " FROM personnel INNER JOIN signataire_principal ON personnel.id_personnel = signataire_principal.id_personnel" +
                " WHERE signataire_principal.id_document=@id_document";
            MySqlCommand cmda = new MySqlCommand(sqla, conn);
            cmda.Parameters.AddWithValue("@id_document", id_document);
            MySqlDataReader dra = cmda.ExecuteReader();
            while (dra.Read())
            {
                chef_service = dra.GetString(1) + "  " + dra.GetString(0);
                titre_principal = dra.GetString(2);
            }
            dra.Close();

            if (etat_annee != "Encours" || etat_annee == "")
            {

            }
            else
            {
                string frequentation = "Je soussignée, " + chef_service + ", " + titre_principal + " à l’" + Load_Institution(conn) + ", atteste par la présente que " +
                "le(la) nommé(e)" + nom_etudiant + " est régulièrement inscrit(e) " +
                "en " + classe + " année de Baccalauréat à la(l') " + faculte +
                " au cours de cette année académique  " + annee_academique + ".\n\n\n" +
                "    Cette attestation est établie à la demande de l’intéressé (e) pour servir et faire valoir ce que de droit.";

                iTextSharp.text.Paragraph contenu = new iTextSharp.text.Paragraph(frequentation, time_all_text1);
                contenu.Alignment = Element.ALIGN_JUSTIFIED;
                contenu.SpacingAfter = 15;
                contenu.IndentationLeft = 50;
                contenu.IndentationRight = 50;
                doc.Add(contenu);



                string rqto = "INSERT INTO signataire_document_delivre(id_document, id_annee,id_etudiant,date) VALUES (@id_document, @id_annee,@id_etudiant,@date)";
                MySqlCommand cmdo = new MySqlCommand(rqto, conn);
                cmdo.Parameters.AddWithValue("@id_etudiant", id_etudiant);
                cmdo.Parameters.AddWithValue("@id_document", id_document);
                cmdo.Parameters.AddWithValue("@id_annee", id_annee);
                cmdo.Parameters.AddWithValue("@date", DateTime.Today.Date.ToShortDateString());
                cmdo.ExecuteNonQuery();

                PdfPTable tVisa = new PdfPTable(5);//Creer une table de 5 colonnes
                float[] colwithv = { 7f, 7f, 7f, 7f, 12f };//parametrer les domensions(largeur) de chacune des collonnes
                tVisa.SetWidths(colwithv);//appliquer ces dimenstions a l atable


                cell = new PdfPCell(new Phrase("", timesmall));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 3;
                tVisa.AddCell(cell);

                string dat = "\n\n\nFait à " + siege + " ,le " + DateTime.Today.Date.ToShortDateString();
                string nom_rect = titre_principal + "\n\n" + chef_service;
                cell = new PdfPCell(new Phrase(dat + "\n\n" + nom_rect, timesmall));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 2;
                tVisa.AddCell(cell);

                Paragraph pVisa = new Paragraph();
                //parf.IndentationLeft = 240;
                pVisa.Alignment = Element.ALIGN_CENTER;
                //pVisa.SpacingAfter = 6;
                pVisa.SpacingBefore = 8;
                pVisa.Add(tVisa);

                doc.Add(pVisa);
            }


            wri.PageEvent = new Foot();
            doc.Close();
            //reader.Close();
            System.Diagnostics.Process.Start(outputFile);
            conn.Close();

        }
        public void Attestation_Prise_Inscription(int id_an, int id_etu, int id_doc)
        {
            int id_annee = id_an;
            int id_etudiant = id_etu;
            int id_document = id_doc;

            Create_Folder();

            DateTime dt = DateTime.Now;
            int year = dt.Year;
            int mois = dt.Month;
            int jour = dt.Day;
            int heure = dt.Hour;
            int min = dt.Minute;
            int sec = dt.Month;
            string date = jour + "-" + mois + "-" + year + "_à_" + heure + "h" + min + "min" + sec + "sec";

            iTextSharp.text.Document doc = new iTextSharp.text.Document(PageSize.A4, 20, 20, 50, 20);
            string docname = "API_" + date + ".pdf";

            string outputFile = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.Desktop), @"BMDSys", docname);
            FileStream fs = new FileStream(outputFile, FileMode.Create, FileAccess.Write, FileShare.None);
            PdfWriter wri = PdfWriter.GetInstance(doc, fs);
            doc.Open();

            Font times = new Font(BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, false), 10, Font.BOLD, BaseColor.BLACK);
            Font time_all_text = new Font(BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, false), 11, Font.BOLD, BaseColor.BLACK);
            Font time_all_text1 = new Font(BaseFont.CreateFont(BaseFont.COURIER, BaseFont.CP1252, false), 10, Font.NORMAL, BaseColor.BLACK);
            Font timesmall = new Font(BaseFont.CreateFont(BaseFont.COURIER_BOLD, BaseFont.CP1252, false), 10, Font.NORMAL, BaseColor.BLACK);
            Font timesunderlined = new Font(Font.FontFamily.TIMES_ROMAN, 12, Font.BOLD | Font.UNDERLINE, BaseColor.BLACK);


            conn = new MySqlConnection(Authentification.MyString);
            conn.Open();

            PdfPCell cell = new PdfPCell(new Phrase("", times));
            PdfPTable table1 = new PdfPTable(5);//Creer une table de 5 colonnes
            float[] colwith1 = { 10f, 7f, 8f, 10f, 7f };//parametrer les domensions(largeur) de chacune des collonnes
            table1.SetWidths(colwith1);//appliquer ces dimenstions a l atable


            string nom_etudiant = "", annee = "";

            string ren = "SELECT nom,prenom FROM etudiant  WHERE id_etudiant=@id_etudiant";
            MySqlCommand cmn = new MySqlCommand(ren, conn);
            cmn.Parameters.AddWithValue("@id_etudiant", id_etudiant);
            MySqlDataReader drn = cmn.ExecuteReader();
            while (drn.Read())
            {
                nom_etudiant = drn.GetString(1) + " " + drn.GetString(0);
            }
            drn.Close();

            string rena = "SELECT annee FROM annee  WHERE id_annee=@id_annee";
            MySqlCommand cmna = new MySqlCommand(rena, conn);
            cmna.Parameters.AddWithValue("@id_annee", id_annee);
            MySqlDataReader drna = cmna.ExecuteReader();
            while (drna.Read())
            {
                annee = drna.GetString(0);
            }
            drna.Close();

            string universite = Load_Institution(conn);

            string coordonee = Load_Adress(conn);
            string value = coordonee;
            string[] op = value.Split('-');
            site = op[0];
            siege = op[1];
            telephone = op[2];
            b_postale = op[3];


            iTextSharp.text.Image myImage1 = Class_Reports.Get_LogoImage(conn);
            cell = new PdfPCell(myImage1);
            cell.HorizontalAlignment = Element.ALIGN_RIGHT;
            cell.BorderWidth = 0;
            cell.Colspan = 2;
            cell.Rowspan = 4;
            table1.AddCell(cell);


            cell = new PdfPCell(new Phrase(" ", times));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 3;
            table1.AddCell(cell);


            cell = new PdfPCell(new Phrase(universite, times));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 2;
            table1.AddCell(cell);

            cell = new PdfPCell(new Phrase(" ", times));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            table1.AddCell(cell);


            cell = new PdfPCell(new Phrase(b_postale, times));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 2;
            table1.AddCell(cell);

            cell = new PdfPCell(new Phrase(" ", times));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            table1.AddCell(cell);

            cell = new PdfPCell(new Phrase("TELEPHONE " + telephone, times));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 2;
            table1.AddCell(cell);

            cell = new PdfPCell(new Phrase(" ", times));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            table1.AddCell(cell);

            doc.Add(table1);


            int nbre = 0;
            string code = "";
            string annee_header = "";

            string req = "SELECT COUNT(*) FROM signataire_document_delivre";
            MySqlCommand com = new MySqlCommand(req, conn);
            int nbre_livre = Convert.ToInt32(com.ExecuteScalar());
            if (nbre_livre > 0)
            {
                nbre = nbre_livre + 1;
            }
            else
            {
                nbre = nbre + 1;
            }

            string sla = "SELECT annee  FROM annee WHERE etat_annee=@etat_annee";
            MySqlCommand cma = new MySqlCommand(sla, conn);
            cma.Parameters.AddWithValue("@etat_annee", "Encours");
            MySqlDataReader da = cma.ExecuteReader();
            while (da.Read())
            {
                annee_header = da.GetString(0);
            }
            da.Close();

            code = nbre + "/" + annee_header;


            iTextSharp.text.Paragraph txt_titre1 = new iTextSharp.text.Paragraph("ATTESTATION DE PRISE D’INSCRIPTION N° " + code, timesunderlined);
            txt_titre1.Alignment = Element.ALIGN_CENTER;
            txt_titre1.SpacingBefore = 40;
            txt_titre1.SpacingAfter = 20;
            doc.Add(txt_titre1);

            string chef_service = "", titre_principal = "", faculte = "", classe = "", annee_academique = "", etat_annee = "", departement = "";

            string sqla1 = "SELECT classe.classe, departement.departement, faculte.faculte" +
                " FROM ((etudiant_inscription INNER JOIN classe ON etudiant_inscription.id_classe = classe.id_classe) INNER JOIN faculte ON etudiant_inscription.id_faculte = faculte.id_faculte) INNER JOIN departement ON etudiant_inscription.id_departement = departement.id_departement" +
                " WHERE etudiant_inscription.id_etudiant=@id_etudiant AND etudiant_inscription.id_annee=@id_annee";
            MySqlCommand cmda1 = new MySqlCommand(sqla1, conn);
            cmda1.Parameters.AddWithValue("@id_annee", id_annee);
            cmda1.Parameters.AddWithValue("@id_etudiant", id_etudiant);
            MySqlDataReader dra1 = cmda1.ExecuteReader();
            while (dra1.Read())
            {
                classe = dra1.GetString(0);
                departement = dra1.GetString(1);
                faculte = dra1.GetString(2);
            }
            dra1.Close();



            string sqla = "SELECT personnel.nom, personnel.prenom, signataire_principal.titre_principal" +
                " FROM personnel INNER JOIN signataire_principal ON personnel.id_personnel = signataire_principal.id_personnel" +
                " WHERE signataire_principal.id_document=@id_document";
            MySqlCommand cmda = new MySqlCommand(sqla, conn);
            cmda.Parameters.AddWithValue("@id_document", id_document);
            MySqlDataReader dra = cmda.ExecuteReader();
            while (dra.Read())
            {
                chef_service = dra.GetString(1) + "  " + dra.GetString(0);
                titre_principal = dra.GetString(2);
            }
            dra.Close();

            string frequentation = titre_principal + " à l’" + Load_Institution(conn) +
                " , atteste par la présente que le(la) nommé(e) " + nom_etudiant + " a pris une inscription" + " à l’" + Load_Institution(conn) +
                " en " + classe + " à la(l') " + faculte + ", Département de " + departement + " au cours de l'année académique  " + annee + ".\n\n\n" +
                "    Cette attestation est établie à la demande de l’intéressé (e) pour servir et faire valoir ce que de droit.";

            iTextSharp.text.Paragraph contenu = new iTextSharp.text.Paragraph(frequentation, time_all_text1);
            contenu.Alignment = Element.ALIGN_JUSTIFIED;
            contenu.SpacingAfter = 15;
            contenu.IndentationLeft = 40;
            contenu.IndentationRight = 40;
            doc.Add(contenu);


            string rqt = "INSERT INTO signataire_document_delivre(id_document, id_annee,id_etudiant,date) VALUES (@id_document, @id_annee,@id_etudiant,@date)";
            MySqlCommand cmd = new MySqlCommand(rqt, conn);
            cmd.Parameters.AddWithValue("@id_etudiant", id_etudiant);
            cmd.Parameters.AddWithValue("@id_document", id_document);
            cmd.Parameters.AddWithValue("@id_annee", id_annee);
            cmd.Parameters.AddWithValue("@date", DateTime.Today.Date.ToShortDateString());
            cmd.ExecuteNonQuery();


            PdfPTable tVisa = new PdfPTable(5);//Creer une table de 5 colonnes
            float[] colwithv = { 7f, 7f, 7f, 7f, 12f };//parametrer les domensions(largeur) de chacune des collonnes
            tVisa.SetWidths(colwithv);//appliquer ces dimenstions a l atable


            cell = new PdfPCell(new Phrase("", timesmall));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidthLeft = 0;
            cell.BorderWidthRight = 0;
            cell.BorderWidthTop = 0;
            cell.BorderWidth = 0;
            cell.Colspan = 3;
            tVisa.AddCell(cell);

            string dat = "\n\n\nFait à " + siege + " ,le " + DateTime.Today.Date.ToShortDateString();
            string nom_rect = titre_principal + "\n\n" + chef_service;
            cell = new PdfPCell(new Phrase(dat + "\n\n" + nom_rect, timesmall));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidthLeft = 0;
            cell.BorderWidthRight = 0;
            cell.BorderWidthTop = 0;
            cell.BorderWidth = 0;
            cell.Colspan = 2;
            tVisa.AddCell(cell);

            Paragraph pVisa = new Paragraph();
            //parf.IndentationLeft = 240;
            pVisa.Alignment = Element.ALIGN_CENTER;
            //pVisa.SpacingAfter = 6;
            pVisa.SpacingBefore = 8;
            pVisa.Add(tVisa);

            doc.Add(pVisa);

            wri.PageEvent = new Foot();
            doc.Close();
            //reader.Close();
            System.Diagnostics.Process.Start(outputFile);
            conn.Close();

        }
        public void etudiant_parcours_academique(int id_etu)
        {
            Create_Folder();

            int id_etudiant = id_etu;


            DateTime dt = DateTime.Now;
            int annee = dt.Year;
            int mois = dt.Month;
            int jour = dt.Day;
            int heure = dt.Hour;
            int min = dt.Minute;
            int sec = dt.Month;
            string date = jour + "-" + mois + "-" + annee + "_à_" + heure + "h" + min + "min" + sec + "sec";

            iTextSharp.text.Document doc = new iTextSharp.text.Document(iTextSharp.text.PageSize.A4, 20, 20, 50, 20);
            string docname = "PA_" + date + ".pdf";
            string outputFile = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.Desktop), @"BMDSys", docname);
            FileStream fs = new FileStream(outputFile, FileMode.Create, FileAccess.Write, FileShare.None);
            PdfWriter wri = PdfWriter.GetInstance(doc, fs);
            doc.Open();



            Font entete = new Font(BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, false), 10, Font.BOLD, BaseColor.BLACK);
            Font font_texte = new Font(BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, false), 8, Font.NORMAL, BaseColor.BLACK);
            Font time_etudiant = new Font(BaseFont.CreateFont(BaseFont.COURIER, BaseFont.CP1252, false), 11, Font.BOLD, BaseColor.BLACK);
            //Font time_all_text1 = new Font(BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, false), 10, Font.NORMAL, BaseColor.BLACK);
            Font timesmall = new Font(BaseFont.CreateFont(BaseFont.COURIER_BOLD, BaseFont.CP1252, false), 10, Font.NORMAL, BaseColor.BLUE);
            Font timesunderlined = new Font(Font.FontFamily.TIMES_ROMAN, 12, Font.BOLD | Font.UNDERLINE, BaseColor.BLACK);


            conn = new MySqlConnection(Authentification.MyString);
            conn.Open();

            string nom_e = "", prenom_e = "", matricule_e = "";

            string r_e = "SELECT nom,prenom,matricule FROM etudiant WHERE id_etudiant = @id_etudiant";
            MySqlCommand com_e = new MySqlCommand(r_e, conn);
            com_e.Parameters.AddWithValue("@id_etudiant", id_etudiant);
            MySqlDataReader dr_e = com_e.ExecuteReader();
            while (dr_e.Read())
            {
                nom_e = dr_e.GetString(0);
                prenom_e = dr_e.GetString(1);
                matricule_e = dr_e.GetString(2);
            }
            dr_e.Close();

            PdfPCell cell = new PdfPCell(new Phrase("", entete));
            PdfPTable table1 = new PdfPTable(5);//Creer une table de 5 colonnes
            float[] colwith1 = { 10f, 7f, 8f, 10f, 7f };//parametrer les domensions(largeur) de chacune des collonnes
            table1.SetWidths(colwith1);//appliquer ces dimenstions a l atable


            string universite = Load_Institution(conn);

            string coordonee = Load_Adress(conn);
            string value = coordonee;
            string[] op = value.Split('-');
            site = op[0];
            siege = op[1];
            telephone = op[2];
            b_postale = op[3];


            iTextSharp.text.Image myImage1 = Class_Reports.Get_LogoImage(conn);
            cell = new PdfPCell(myImage1);
            cell.HorizontalAlignment = Element.ALIGN_RIGHT;
            cell.BorderWidth = 0;
            cell.Colspan = 2;
            cell.Rowspan = 4;
            table1.AddCell(cell);


            cell = new PdfPCell(new Phrase(" ", entete));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 3;
            table1.AddCell(cell);


            cell = new PdfPCell(new Phrase(universite, entete));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 2;
            table1.AddCell(cell);

            cell = new PdfPCell(new Phrase(" ", entete));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            table1.AddCell(cell);


            cell = new PdfPCell(new Phrase(b_postale, entete));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 2;
            table1.AddCell(cell);

            cell = new PdfPCell(new Phrase(" ", entete));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            table1.AddCell(cell);

            cell = new PdfPCell(new Phrase("TELEPHONE " + telephone, entete));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 2;
            table1.AddCell(cell);

            cell = new PdfPCell(new Phrase(" ", entete));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            table1.AddCell(cell);

            doc.Add(table1);


            Paragraph parf = new Paragraph();
            //parf.IndentationLeft = 240;
            string ta = "EXTRAIT DU PARCOURS ACADEMIQUE";
            parf.Add(new Phrase(ta, timesunderlined));
            parf.Alignment = Element.ALIGN_CENTER;
            parf.SpacingAfter = 20;
            parf.SpacingBefore = 50;
            doc.Add(parf);

            Paragraph parf1 = new Paragraph();
            parf1.IndentationLeft = 50;
            string ta1 = "Etudiant: " + nom_e + " " + prenom_e + "\nMatricule: " + matricule_e;
            parf1.Add(new Phrase(ta1, time_etudiant));
            parf1.Alignment = Element.ALIGN_JUSTIFIED;
            parf1.SpacingAfter = 20;
            //parf1.SpacingBefore = 20;
            doc.Add(parf1);



            //CORPS DU RAPPORT 
            PdfPTable table = new PdfPTable(11);
            table.HorizontalAlignment = Element.ALIGN_CENTER;
            float[] colwiths = { 60f, 60f, 130f, 30f, 30f, 30f, 30f, 30f, 30f, 30f, 30f };
            table.SetWidths(colwiths);//appliquer ces dimenstions a l atable

            cell = new PdfPCell(new Phrase("", font_texte));
            cell.Rowspan = 2;
            cell.Colspan = 3;
            cell.BorderWidthLeft = 0;
            cell.BorderWidthRight = 0;
            cell.BorderWidthTop = 0;
            cell.BorderWidthBottom = 0;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("1ere SESSION", entete));
            cell.Colspan = 3;
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("2eme SESSION", entete));
            cell.Colspan = 3;
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("ECUE non validés \npar année", entete));
            cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
            cell.Rotation = 90;
            cell.Rowspan = 3;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("Cumul ECUE\nnon validés", entete));
            cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
            cell.Rotation = 90;
            cell.Rowspan = 3;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("\nPourcentage", entete));
            cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
            cell.Rotation = 90;
            cell.Rowspan = 2;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("\nMention", entete));
            cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
            cell.Rotation = 90;
            cell.Rowspan = 2;
            table.AddCell(cell);


            cell = new PdfPCell(new Phrase("\nDécision", entete));
            cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
            cell.Rotation = 90;
            cell.Rowspan = 2;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("\nPourcentage", entete));
            cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
            cell.Rotation = 90;
            cell.Rowspan = 2;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("\nMention", entete));
            cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
            cell.Rotation = 90;
            cell.Rowspan = 2;
            table.AddCell(cell);


            cell = new PdfPCell(new Phrase("\nDécision", entete));
            cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
            cell.Rotation = 90;
            cell.Rowspan = 2;
            table.AddCell(cell);


            cell = new PdfPCell(new Phrase("\n\n\n\n\n\n\nANNEE", entete));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidthLeft = 0;
            cell.BorderWidthRight = 0;
            cell.BorderWidthTop = 0;
            //cell.Rotation = 90;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("\n\n\n\n\n\n\nCLASSE", entete));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidthLeft = 0;
            cell.BorderWidthRight = 0;
            cell.BorderWidthTop = 0;
            //cell.Rotation = 90;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("\n\n\n\n\n\n\nDEPARTEMENT", entete));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidthLeft = 0;
            cell.BorderWidthRight = 0;
            cell.BorderWidthTop = 0;
            table.AddCell(cell);

            ///-----------------------------FIN ENTETE------------------------------------------------------------//


            int is_1ere_session = 0, is_2eme_session = 0;
            string decision_1ere_session = "", decision_2eme_session = "", mention_1ere_session = "", mention_2eme_session = "", prcnt_1ere_session = "", prcnt_2eme_session = "";

            string[] Annee_ID, Annee_Nom, Departement_ID, Departement_Nom, Classe_ID, Classe_Nom, Etudiant_ID;
            int nbre_annee = 0, nbre_classe = 0, nbre_faculte = 0, nbre_departement = 0;

            int Annee_candidats_1ereSession = 0, Faculte_candidats_1ereSession = 0, Departement_candidats_1ereSession = 0, Classe_candidats_1ereSession = 0;
            int Annee_reussites_1ereSession = 0, Faculte_reussites_1ereSession = 0, Departement_reussites_1ereSession = 0, Classe_reussites_1ereSession = 0;

            int Annee_candidats_2eme_Session = 0, Faculte_candidats_2eme_Session = 0, Departement_candidats_2eme_Session = 0, Classe_candidats_2eme_Session = 0;
            int Annee_reussites_2eme_Session = 0, Faculte_reussites_2eme_Session = 0, Departement_reussites_2eme_Session = 0, Classe_reussites_2eme_Session = 0;

            int Annee_ajournes = 0, Faculte_ajournes = 0, Departement_ajournes = 0, Classe_ajournes = 0;
            int Annee_eclusion = 0, Faculte_eclusion = 0, Departement_eclusion = 0, Classe_eclusion = 0;

            try
            {
                string sq = "SELECT COUNT(DISTINCT id_annee) FROM deliberation WHERE id_etudiant=@id_etudiant";
                MySqlCommand cmq = new MySqlCommand(sq, conn);
                cmq.Parameters.AddWithValue("@id_etudiant", id_etudiant);
                nbre_annee = Convert.ToInt32(cmq.ExecuteScalar());


                Annee_ID = new string[nbre_annee];
                Annee_Nom = new string[nbre_annee];
                string sqa = "SELECT DISTINCT deliberation.id_annee, annee.annee" +
                    " FROM annee INNER JOIN deliberation ON annee.id_annee = deliberation.id_annee" +
                    " WHERE deliberation.id_etudiant=@id_etudiant";
                MySqlCommand cmqa = new MySqlCommand(sqa, conn);
                cmqa.Parameters.AddWithValue("@id_etudiant", id_etudiant);
                MySqlDataReader dra = cmqa.ExecuteReader();
                int i = 0;
                while (dra.Read())
                {
                    Annee_ID[i] = string.Format("{0}", dra.GetInt32(0).ToString());
                    Annee_Nom[i] = string.Format("{0}", dra.GetString(1));
                    ////MessageBox.Show(Annee_ID[i] + "--" + Annee_Nom[i]);
                    i++;
                }
                dra.Close();
                for (int an = 0; an < nbre_annee; an++)
                {
                    ////MessageBox.Show(Annee_ID[an]);
                    string sql0 = "SELECT COUNT(DISTINCT deliberation.id_classe)" +
                    "  FROM annee INNER JOIN deliberation ON annee.id_annee = deliberation.id_annee" +
                    " WHERE deliberation.id_etudiant=@id_etudiant AND deliberation.id_annee=@id_annee";
                    MySqlCommand cmd0 = new MySqlCommand(sql0, conn);
                    cmd0.Parameters.AddWithValue("@id_annee", Convert.ToInt32(Annee_ID[an]));
                    cmd0.Parameters.AddWithValue("@id_etudiant", id_etudiant);
                    nbre_classe = Convert.ToInt32(cmd0.ExecuteScalar());



                    ////MessageBox.Show(Annee_Nom[an]);
                    cell = new PdfPCell(new Phrase(Annee_Nom[an], font_texte));
                    cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
                    //cell.Rowspan = nbre_classe;
                    table.AddCell(cell);


                    Classe_ID = new string[nbre_classe];
                    Classe_Nom = new string[nbre_classe];

                    string sql1 = "SELECT DISTINCT deliberation.id_classe,classe.classe" +
                        " FROM deliberation INNER JOIN classe ON deliberation.id_classe = classe.id_classe" +
                        " WHERE deliberation.id_etudiant=@id_etudiant AND deliberation.id_annee=@id_annee";
                    MySqlCommand cmd1 = new MySqlCommand(sql1, conn);
                    cmd1.Parameters.AddWithValue("@id_annee", Convert.ToInt32(Annee_ID[an]));
                    cmd1.Parameters.AddWithValue("@id_etudiant", id_etudiant);
                    MySqlDataReader dr1 = cmd1.ExecuteReader();
                    int j = 0;
                    while (dr1.Read())
                    {
                        Classe_ID[j] = string.Format("{0}", dr1.GetInt32(0).ToString());
                        Classe_Nom[j] = string.Format("{0}", dr1.GetString(1));
                        ////MessageBox.Show(Classe_ID[j] + " " + Classe_Nom[j]);
                        j++;
                    }
                    dr1.Close();

                    for (int clas = 0; clas < nbre_classe; clas++)
                    {
                        string sq4 = "SELECT COUNT(DISTINCT id_departement) FROM deliberation  WHERE id_etudiant=@id_etudiant AND id_classe=@id_classe AND id_annee=@id_annee";
                        MySqlCommand cmd4 = new MySqlCommand(sq4, conn);
                        cmd4.Parameters.AddWithValue("@id_classe", Convert.ToInt32(Classe_ID[clas]));
                        cmd4.Parameters.AddWithValue("@id_annee", Convert.ToInt32(Annee_ID[an]));
                        cmd4.Parameters.AddWithValue("@id_etudiant", id_etudiant);
                        nbre_departement = Convert.ToInt32(cmd4.ExecuteScalar());
                        ////MessageBox.Show(nbre_departement+"");


                        cell = new PdfPCell(new Phrase(Classe_Nom[clas], font_texte));
                        cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
                        //cell.Rowspan = nbre_departement;
                        table.AddCell(cell);

                        Departement_ID = new string[nbre_departement];
                        Departement_Nom = new string[nbre_departement];

                        string sq5 = "SELECT DISTINCT deliberation.id_departement, departement.departement" +
                            " FROM deliberation INNER JOIN departement ON deliberation.id_departement = departement.id_departement" +
                            " WHERE deliberation.id_annee=@id_annee AND deliberation.id_classe=@id_classe AND deliberation.id_etudiant=@id_etudiant";
                        MySqlCommand cmd5 = new MySqlCommand(sq5, conn);
                        cmd5.Parameters.AddWithValue("@id_classe", Convert.ToInt32(Classe_ID[clas]));
                        cmd5.Parameters.AddWithValue("@id_annee", Convert.ToInt32(Annee_ID[an]));
                        cmd5.Parameters.AddWithValue("@id_etudiant", id_etudiant);
                        MySqlDataReader dr5 = cmd5.ExecuteReader();
                        int na = 0;
                        while (dr5.Read())
                        {
                            Departement_ID[na] = string.Format("{0}", dr5.GetInt32(0).ToString());
                            Departement_Nom[na] = string.Format("{0}", dr5.GetString(1));
                            ////MessageBox.Show(Departement_ID[na] + " " + Departement_Nom[na]);
                            na++;
                        }
                        dr5.Close();

                        int ecue_nv_encours = 0, ecue_nv_cumul = 0;
                        for (int dptmnt = 0; dptmnt < nbre_departement; dptmnt++)
                        {

                            cell = new PdfPCell(new Phrase(Departement_Nom[dptmnt], font_texte));
                            cell.HorizontalAlignment = Element.ALIGN_LEFT;
                            table.AddCell(cell);


                            string sq6 = "SELECT COUNT(*) FROM deliberation  WHERE id_session=@id_session AND id_etudiant=@id_etudiant AND id_classe=@id_classe AND id_departement=@id_departement AND id_annee=@id_annee";
                            MySqlCommand cmd6 = new MySqlCommand(sq6, conn);
                            cmd6.Parameters.AddWithValue("@id_classe", Convert.ToInt32(Classe_ID[clas]));
                            cmd6.Parameters.AddWithValue("@id_departement", Convert.ToInt32(Departement_ID[dptmnt]));
                            cmd6.Parameters.AddWithValue("@id_annee", Convert.ToInt32(Annee_ID[an]));
                            cmd6.Parameters.AddWithValue("@id_etudiant", id_etudiant);
                            cmd6.Parameters.AddWithValue("@id_session", 1);
                            is_1ere_session = Convert.ToInt32(cmd6.ExecuteScalar());

                            ////MessageBox.Show(Annee_ID[an]+"    "+Classe_ID[clas]+"    "+Departement_ID[dptmnt]);

                            string sq7 = "SELECT COUNT(*) FROM deliberation  WHERE id_session=@id_session AND id_etudiant=@id_etudiant AND id_classe=@id_classe AND id_departement=@id_departement AND id_annee=@id_annee";
                            MySqlCommand cmd7 = new MySqlCommand(sq7, conn);
                            cmd7.Parameters.AddWithValue("@id_classe", Convert.ToInt32(Classe_ID[clas]));
                            cmd7.Parameters.AddWithValue("@id_departement", Convert.ToInt32(Departement_ID[dptmnt]));
                            cmd7.Parameters.AddWithValue("@id_annee", Convert.ToInt32(Annee_ID[an]));
                            cmd7.Parameters.AddWithValue("@id_etudiant", id_etudiant);
                            cmd7.Parameters.AddWithValue("@id_session", 2);
                            is_2eme_session = Convert.ToInt32(cmd7.ExecuteScalar());

                            ////MessageBox.Show(is_1ere_session + " " + is_2eme_session);
                            if (is_2eme_session == 0)
                            {
                                string sq8 = "SELECT deliberation.pourcentage, mention.abbreviation, deliberation_condition.sigle" +
                                    " FROM deliberation_condition INNER JOIN (mention INNER JOIN deliberation ON mention.id_mention = deliberation.id_mention) ON deliberation_condition.id_decision = deliberation.id_decision" +
                                    " WHERE deliberation.id_annee=@id_annee AND deliberation.id_departement=@id_departement AND deliberation.id_classe=@id_classe AND deliberation.id_etudiant=@id_etudiant AND deliberation.id_session=@id_session";
                                MySqlCommand cmd8 = new MySqlCommand(sq8, conn);
                                cmd8.Parameters.AddWithValue("@id_classe", Convert.ToInt32(Classe_ID[clas]));
                                cmd8.Parameters.AddWithValue("@id_departement", Convert.ToInt32(Departement_ID[dptmnt]));
                                cmd8.Parameters.AddWithValue("@id_annee", Convert.ToInt32(Annee_ID[an]));
                                cmd8.Parameters.AddWithValue("@id_etudiant", id_etudiant);
                                cmd8.Parameters.AddWithValue("@id_session", 1);
                                MySqlDataReader dr8 = cmd8.ExecuteReader();
                                while (dr8.Read())
                                {
                                    prcnt_1ere_session = dr8.GetDouble(0).ToString("#.###");
                                    mention_1ere_session = dr8.GetString(1);
                                    decision_1ere_session = dr8.GetString(2);

                                    prcnt_2eme_session = "-";
                                    mention_2eme_session = "-";
                                    decision_2eme_session = "-";
                                }
                                dr8.Close();
                            }
                            else if (is_2eme_session > 0)
                            {
                                string sq9 = "SELECT deliberation.pourcentage, mention.abbreviation, deliberation_condition.sigle" +
                                    " FROM deliberation_condition INNER JOIN (mention INNER JOIN deliberation ON mention.id_mention = deliberation.id_mention) ON deliberation_condition.id_decision = deliberation.id_decision" +
                                    " WHERE deliberation.id_annee=@id_annee AND deliberation.id_departement=@id_departement AND deliberation.id_classe=@id_classe AND deliberation.id_etudiant=@id_etudiant AND deliberation.id_session=@id_session";
                                MySqlCommand cmd9 = new MySqlCommand(sq9, conn);
                                cmd9.Parameters.AddWithValue("@id_classe", Convert.ToInt32(Classe_ID[clas]));
                                cmd9.Parameters.AddWithValue("@id_departement", Convert.ToInt32(Departement_ID[dptmnt]));
                                cmd9.Parameters.AddWithValue("@id_annee", Convert.ToInt32(Annee_ID[an]));
                                cmd9.Parameters.AddWithValue("@id_etudiant", id_etudiant);
                                cmd9.Parameters.AddWithValue("@id_session", 1);
                                MySqlDataReader dr9 = cmd9.ExecuteReader();
                                while (dr9.Read())
                                {
                                    prcnt_1ere_session = dr9.GetDouble(0).ToString("#.###");
                                    mention_1ere_session = dr9.GetString(1);
                                    decision_1ere_session = dr9.GetString(2);
                                    ////MessageBox.Show("0k1 ");
                                }
                                dr9.Close();
                                ////MessageBox.Show("0k2 ");

                                string sq10 = "SELECT deliberation.pourcentage, mention.abbreviation, deliberation_condition.sigle" +
                                    " FROM deliberation_condition INNER JOIN (mention INNER JOIN deliberation ON mention.id_mention = deliberation.id_mention) ON deliberation_condition.id_decision = deliberation.id_decision" +
                                    " WHERE deliberation.id_annee=@id_annee AND deliberation.id_departement=@id_departement AND deliberation.id_classe=@id_classe AND deliberation.id_etudiant=@id_etudiant AND deliberation.id_session=@id_session";
                                MySqlCommand cmd10 = new MySqlCommand(sq10, conn);
                                cmd10.Parameters.AddWithValue("@id_classe", Convert.ToInt32(Classe_ID[clas]));
                                cmd10.Parameters.AddWithValue("@id_departement", Convert.ToInt32(Departement_ID[dptmnt]));
                                cmd10.Parameters.AddWithValue("@id_annee", Convert.ToInt32(Annee_ID[an]));
                                cmd10.Parameters.AddWithValue("@id_etudiant", id_etudiant);
                                cmd10.Parameters.AddWithValue("@id_session", 2);
                                MySqlDataReader dr10 = cmd10.ExecuteReader();
                                while (dr10.Read())
                                {

                                    prcnt_2eme_session = dr10.GetDouble(0).ToString("#.###");
                                    mention_2eme_session = dr10.GetString(1);
                                    decision_2eme_session = dr10.GetString(2);

                                }
                                dr10.Close();
                                ////MessageBox.Show("0k4 ");
                                ////MessageBox.Show(prcnt_1ere_session + "  " + mention_1ere_session + " " + decision_1ere_session + "-" + prcnt_2eme_session + "  " + mention_2eme_session + " " + decision_2eme_session);
                            }

                            string sqm = "SELECT COUNT(DISTINCT etudiant_note_complement.id_cours)" +
                                " FROM (unite INNER JOIN cours ON unite.id_unite = cours.id_unite) INNER JOIN etudiant_note_complement ON cours.id_cours = etudiant_note_complement.id_cours" +
                                " WHERE etudiant_note_complement.id_etudiant=@id_etudiant AND etudiant_note_complement.etat_validation=@etat_validation AND unite.id_annee=@id_annee";
                            MySqlCommand cmm = new MySqlCommand(sqm, conn);
                            cmm.Parameters.AddWithValue("@id_annee", Convert.ToInt32(Annee_ID[an]));
                            cmm.Parameters.AddWithValue("@id_etudiant", id_etudiant);
                            cmm.Parameters.AddWithValue("@etat_validation", "Non");
                            ecue_nv_encours = Convert.ToInt32(cmm.ExecuteScalar());

                            string sqma = "SELECT COUNT(DISTINCT etudiant_note_complement.id_cours)" +
                                    " FROM (unite INNER JOIN cours ON unite.id_unite = cours.id_unite) INNER JOIN etudiant_note_complement ON cours.id_cours = etudiant_note_complement.id_cours" +
                                    " WHERE etudiant_note_complement.id_etudiant=@id_etudiant AND etudiant_note_complement.etat_validation=@etat_validation AND unite.id_annee<=@id_annee";
                            MySqlCommand cmma = new MySqlCommand(sqma, conn);
                            cmma.Parameters.AddWithValue("@id_annee", Convert.ToInt32(Annee_ID[an]));
                            cmma.Parameters.AddWithValue("@id_etudiant", id_etudiant);
                            cmma.Parameters.AddWithValue("@etat_validation", "Non");
                            ecue_nv_cumul = Convert.ToInt32(cmma.ExecuteScalar());

                            cell = new PdfPCell(new Phrase(prcnt_1ere_session, font_texte));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            table.AddCell(cell);

                            cell = new PdfPCell(new Phrase(mention_1ere_session, font_texte));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            table.AddCell(cell);

                            cell = new PdfPCell(new Phrase(decision_1ere_session, font_texte));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            table.AddCell(cell);

                            cell = new PdfPCell(new Phrase(prcnt_2eme_session, font_texte));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            table.AddCell(cell);

                            cell = new PdfPCell(new Phrase(mention_2eme_session, font_texte));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            table.AddCell(cell);

                            cell = new PdfPCell(new Phrase(decision_2eme_session, font_texte));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            table.AddCell(cell);

                            cell = new PdfPCell(new Phrase(ecue_nv_encours.ToString(), font_texte));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            table.AddCell(cell);

                            cell = new PdfPCell(new Phrase(ecue_nv_cumul.ToString(), font_texte));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            table.AddCell(cell);
                        }
                    }
                }
            }
            catch (Exception ex)
            {

            }
            conn.Close();
            doc.Add(table);
            wri.PageEvent = new Foot();
            doc.Close();
            System.Diagnostics.Process.Start(outputFile);
        }
        public void etudiant_complement_historique(int id_etu, int id_fac, string fac)
        {
            Create_Folder();

            int id_etudiant = id_etu;
            int id_faculte = id_fac;
            string faculte = fac;

            DateTime dt = DateTime.Now;
            int annee = dt.Year;
            int mois = dt.Month;
            int jour = dt.Day;
            int heure = dt.Hour;
            int min = dt.Minute;
            int sec = dt.Month;
            string date = jour + "-" + mois + "-" + annee + "_à_" + heure + "h" + min + "min" + sec + "sec";

            iTextSharp.text.Document doc = new iTextSharp.text.Document(iTextSharp.text.PageSize.A4, 0, 0, 50, 10);
            string docname = "PA_" + date + ".pdf";
            string outputFile = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.Desktop), @"BMDSys", docname);
            FileStream fs = new FileStream(outputFile, FileMode.Create, FileAccess.Write, FileShare.None);
            PdfWriter wri = PdfWriter.GetInstance(doc, fs);
            doc.Open();

            conn = new MySqlConnection(Authentification.MyString);
            conn.Open();


            string nom_e = "", prenom_e = "", matricule_e = "";

            string r_e = "SELECT nom,prenom,matricule FROM etudiant WHERE id_etudiant = @id_etudiant";
            MySqlCommand com_e = new MySqlCommand(r_e, conn);
            com_e.Parameters.AddWithValue("@id_etudiant", id_etudiant);
            MySqlDataReader dr_e = com_e.ExecuteReader();
            while (dr_e.Read())
            {
                nom_e = dr_e.GetString(0);
                prenom_e = dr_e.GetString(1);
                matricule_e = dr_e.GetString(2);
            }
            dr_e.Close();

            Font entete = new Font(BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, false), 10, Font.NORMAL, BaseColor.BLACK);
            Font font_texte = new Font(BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, false), 8, Font.NORMAL, BaseColor.BLACK);
            Font time_etudiant = new Font(BaseFont.CreateFont(BaseFont.COURIER, BaseFont.CP1252, false), 11, Font.BOLD, BaseColor.BLACK);
            //Font time_all_text1 = new Font(BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, false), 10, Font.NORMAL, BaseColor.BLACK);
            Font timesmall = new Font(BaseFont.CreateFont(BaseFont.COURIER_BOLD, BaseFont.CP1252, false), 10, Font.NORMAL, BaseColor.BLUE);
            Font timesunderlined = new Font(Font.FontFamily.TIMES_ROMAN, 12, Font.BOLD | Font.UNDERLINE, BaseColor.BLACK);

            PdfPCell cell = new PdfPCell(new Phrase("", entete));

            PdfPTable table1 = new PdfPTable(5);//Creer une table de 5 colonnes
            float[] colwith1 = { 10f, 7f, 7f, 7f, 10f };//parametrer les domensions(largeur) de chacune des collonnes
            table1.SetWidths(colwith1);//appliquer ces dimenstions a l atable

            string universite = Load_Institution(conn);
            string coordonee = Load_Adress(conn);
            string value = coordonee;
            string[] opp = value.Split('-');
            site = opp[0];
            siege = opp[1];
            telephone = opp[2];
            b_postale = opp[3];

            iTextSharp.text.Image myImage1 = Class_Reports.Get_LogoImage(conn);
            cell = new PdfPCell(myImage1);
            cell.HorizontalAlignment = Element.ALIGN_RIGHT;
            cell.BorderWidthLeft = 0;
            cell.BorderWidthRight = 0;
            cell.BorderWidthTop = 0;
            cell.BorderWidth = 0;
            cell.Colspan = 2;
            cell.Rowspan = 5;
            table1.AddCell(cell);

            cell = new PdfPCell(new Phrase(" ", entete));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidthLeft = 0;
            cell.BorderWidthRight = 0;
            cell.BorderWidthTop = 0;
            cell.BorderWidth = 0;
            cell.Colspan = 3;
            table1.AddCell(cell);

            cell = new PdfPCell(new Phrase(" ", entete));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidthLeft = 0;
            cell.BorderWidthRight = 0;
            cell.BorderWidthTop = 0;
            cell.BorderWidth = 0;
            cell.Colspan = 3;
            table1.AddCell(cell);



            cell = new PdfPCell(new Phrase(universite, entete));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 2;
            table1.AddCell(cell);

            cell = new PdfPCell(new Phrase(" ", entete));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            table1.AddCell(cell);

            cell = new PdfPCell(new Phrase(b_postale, entete));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 2;
            table1.AddCell(cell);

            cell = new PdfPCell(new Phrase(" ", entete));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            table1.AddCell(cell);


            cell = new PdfPCell(new Phrase(faculte, entete));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            cell.Colspan = 2;
            table1.AddCell(cell);

            cell = new PdfPCell(new Phrase(" ", entete));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 0;
            table1.AddCell(cell);
            doc.Add(table1);


            iTextSharp.text.Paragraph txt_t = new iTextSharp.text.Paragraph(" ", entete);
            txt_t.Alignment = Element.ALIGN_CENTER;
            txt_t.SpacingBefore = 10;
            txt_t.SpacingAfter = 10;
            doc.Add(txt_t);


            PdfPTable taba = new PdfPTable(4);//Creer une table de 5 colonnes
            float[] coltaba = { 5f, 12f, 8f, 12f };//parametrer les domensions(largeur) de chacune des collonnes
            taba.SetWidths(coltaba);

            cell = new PdfPCell(new Phrase(" ", entete));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidth = 0;
            cell.Colspan = 2;
            taba.AddCell(cell);


            cell = new PdfPCell(new Phrase("Nom et Prénom", entete));
            cell.HorizontalAlignment = Element.ALIGN_RIGHT;
            cell.BorderWidth = 0;
            taba.AddCell(cell);

            cell = new PdfPCell(new Phrase(": " + nom_e + " " + prenom_e, entete));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidth = 0;
            taba.AddCell(cell);
            doc.Add(taba);



            Paragraph parf = new Paragraph();
            //parf.IndentationLeft = 240;
            string ta = "HISTORIQUE DE VALIDATION DES COMPLEMENTS";
            parf.Add(new Phrase(ta, timesunderlined));
            parf.Alignment = Element.ALIGN_CENTER;
            parf.SpacingAfter = 20;
            parf.SpacingBefore = 20;
            doc.Add(parf);


            //CORPS DU RAPPORT 
            PdfPTable table = new PdfPTable(4);
            table.HorizontalAlignment = Element.ALIGN_CENTER;
            float[] colwiths = { 120f, 40f, 40f, 40f };
            table.SetWidths(colwiths);//appliquer ces dimenstions a l atable


            cell = new PdfPCell(new Phrase("ECUE EN COMPLEMENT", entete));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("DATE DE VALIDATION", entete));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);

            cell = new PdfPCell(new Phrase("NOTE OBTENUE", entete));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);


            cell = new PdfPCell(new Phrase("ETAT DE VALIDATION", entete));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(cell);
            try
            {
                string[] Cours_ID, Cours_Nom;
                int nbre_cours = 0, nbre_essai = 0, complement_valide = 0;



                string sq = "SELECT COUNT(DISTINCT id_cours) FROM etudiant_note_complement WHERE id_etudiant=@id_etudiant";
                MySqlCommand cmq = new MySqlCommand(sq, conn);
                cmq.Parameters.AddWithValue("@id_etudiant", id_etudiant);
                nbre_cours = Convert.ToInt32(cmq.ExecuteScalar());
                Cours_ID = new string[nbre_cours];
                Cours_Nom = new string[nbre_cours];

                string sqa = "SELECT DISTINCT etudiant_note_complement.id_cours, cours.cours" +
                    " FROM cours INNER JOIN etudiant_note_complement ON cours.id_cours = etudiant_note_complement.id_cours" +
                    " WHERE etudiant_note_complement.id_etudiant=@id_etudiant ORDER BY etudiant_note_complement.id_complement";
                MySqlCommand cmqa = new MySqlCommand(sqa, conn);
                cmqa.Parameters.AddWithValue("@id_etudiant", id_etudiant);
                MySqlDataReader dra = cmqa.ExecuteReader();
                int i = 0;
                while (dra.Read())
                {
                    Cours_ID[i] = string.Format("{0}", dra.GetInt32(0).ToString());
                    Cours_Nom[i] = string.Format("{0}", dra.GetString(1));
                    i++;
                }
                dra.Close();
                for (int cours = 0; cours < nbre_cours; cours++)
                {
                    string sq1 = "SELECT COUNT(DISTINCT id_complement) FROM etudiant_note_complement  WHERE id_etudiant=@id_etudiant AND id_cours=@id_cours";
                    MySqlCommand cmq1 = new MySqlCommand(sq1, conn);
                    cmq1.Parameters.AddWithValue("@id_etudiant", id_etudiant);
                    cmq1.Parameters.AddWithValue("@id_cours", Convert.ToInt32(Cours_ID[cours]));
                    nbre_essai = Convert.ToInt32(cmq1.ExecuteScalar());

                    cell = new PdfPCell(new Phrase(cours + 1 + ". " + Cours_Nom[cours], entete));
                    cell.Rowspan = nbre_essai;
                    cell.HorizontalAlignment = Element.ALIGN_LEFT;
                    table.AddCell(cell);

                    string sq2 = "SELECT date,note,etat_validation FROM etudiant_note_complement  WHERE id_etudiant=@id_etudiant AND id_cours=@id_cours";
                    MySqlCommand cmq2 = new MySqlCommand(sq2, conn);
                    cmq2.Parameters.AddWithValue("@id_etudiant", id_etudiant);
                    cmq2.Parameters.AddWithValue("@id_cours", Convert.ToInt32(Cours_ID[cours]));
                    MySqlDataReader dr2 = cmq2.ExecuteReader();
                    while (dr2.Read())
                    {
                        cell = new PdfPCell(new Phrase(dr2.GetString(0), entete));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        table.AddCell(cell);

                        cell = new PdfPCell(new Phrase(dr2.GetString(1), entete));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        table.AddCell(cell);

                        cell = new PdfPCell(new Phrase(dr2.GetString(2), entete));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        table.AddCell(cell);
                        if (dr2.GetString(2) == "Oui")
                        {
                            complement_valide++;
                        }
                    }
                    dr2.Close();
                }
                cell = new PdfPCell(new Phrase("Nombre de compléments qui restent à valider ", entete));
                cell.Colspan = 3;
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase((nbre_cours - complement_valide).ToString(), entete));
                cell.Colspan = 3;
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                table.AddCell(cell);
            }
            catch (Exception ex)
            {
                //MessageBox.Show(ex.Message);
            }
            conn.Close();
            doc.Add(table);
            wri.PageEvent = new Foot();
            doc.Close();
            System.Diagnostics.Process.Start(outputFile);
        }
        public void Releve_Note(int id_ann, int id_fac, int has_dep, int id_dep, int id_cla, int id_etu)
        {
            Create_Folder();

            int id_annee = id_ann;
            int id_faculte = id_fac;
            int id_departement = id_dep;
            int id_classe = id_cla;
            int id_etudiant = id_etu;
            int has_depaartement = has_dep;

            int ecue_sous_sept_value = 0, ecue_sous_sept = 0;

            string decision = "", mention = "";
            int ecue_rate = 0;
            int idf, iddep, idclasse, i, nbreCredits = 0, creditsParSemestre = 0, creditsAnnuel = 0, idaa, idetudiant, note, nbre_complement = 0;
            double Semestre_Total_Generale_Pondere = 0, Semestre_1er_Pondere = 0, xm = 0, totalPondereAnnuel = 0, totalPondereUE_1ereSession = 0, totalPondereUE = 0, moyenne_Ponderee_1er_Semestre = 0, moyennePondereeSemestre = 0, moyennePondereeAnnuelle = 0, moyennePondereeUE_1ereSession = 0, moyennePondereeUE = 0, pourcentage = 0;
            //string matricule, nom, prenom, nomEtudiant;

            string date_deliberation_1ere_session = "", date_deliberation_2eme_session = "";
            string nbre_ecue_nv_1ere_session = "", nbre_ecue_nv_2eme_session = "";
            string total_pondere_1ere_session = "", total_pondere_2eme_session = "";
            string pourc_1ere_session = "", pourc_2eme_session = "";
            string mention_1ere_session = "", mention_2eme_session = "";
            string decision_1ere_session = "", decision_2eme_session = "";

            string[] UE_ID, Cours_ID, Cours_Nom, Cours_Credits, UE_Array, UE_Code, SemestreArray, SemestreID, Nom_Cours, Credits_Cours, SessionID;
            string[] Etudiant_ID, Etudiant_Nom, Etudiant_Prenom;
            moyennePondereeAnnuelle = 0;
            totalPondereAnnuel = 0;
            creditsAnnuel = 0;
            pourcentage = 0;



            string annee = "", faculte = "", departement = "", classe = "", etudiant = "", matricule = "";
            try
            {
                conn = new MySqlConnection(Authentification.MyString);
                conn.Open();

                string rena = "SELECT annee FROM annee  WHERE id_annee=@id_annee";
                MySqlCommand cmna = new MySqlCommand(rena, conn);
                cmna.Parameters.AddWithValue("@id_annee", id_annee);
                MySqlDataReader drna = cmna.ExecuteReader();
                while (drna.Read())
                {
                    annee = drna.GetString(0);
                }
                drna.Close();


                string sq1a = "SELECT annee FROM annee WHERE id_annee=@id_annee";
                MySqlCommand cmd1a = new MySqlCommand(sq1a, conn);
                cmd1a.Parameters.AddWithValue("@id_annee", id_annee);
                MySqlDataReader dr1a = cmd1a.ExecuteReader();
                while (dr1a.Read())
                {
                    annee = dr1a.GetString(0);
                }
                dr1a.Close();

                string sq2a = "SELECT faculte FROM faculte WHERE id_faculte=@id_faculte";
                MySqlCommand cmd2a = new MySqlCommand(sq2a, conn);
                cmd2a.Parameters.AddWithValue("@id_faculte", id_faculte);
                MySqlDataReader dr2a = cmd2a.ExecuteReader();
                while (dr2a.Read())
                {
                    faculte = dr2a.GetString(0);
                }
                dr2a.Close();

                string sq3a = "SELECT departement FROM departement WHERE id_departement=@id_departement";
                MySqlCommand cmd3a = new MySqlCommand(sq3a, conn);
                cmd3a.Parameters.AddWithValue("@id_departement", id_departement);
                MySqlDataReader dr3a = cmd3a.ExecuteReader();
                while (dr3a.Read())
                {
                    departement = dr3a.GetString(0);
                }
                dr3a.Close();

                string sq4a = "SELECT classe FROM classe WHERE id_classe=@id_classe";
                MySqlCommand cmd4a = new MySqlCommand(sq4a, conn);
                cmd4a.Parameters.AddWithValue("@id_classe", id_classe);
                MySqlDataReader dr4a = cmd4a.ExecuteReader();
                while (dr4a.Read())
                {
                    classe = dr4a.GetString(0);
                }
                dr4a.Close();


                string sq6a = "SELECT nom,prenom,matricule FROM etudiant WHERE id_etudiant=@id_etudiant";
                MySqlCommand cmd6a = new MySqlCommand(sq6a, conn);
                cmd6a.Parameters.AddWithValue("@id_etudiant", id_etudiant);
                MySqlDataReader dr6a = cmd6a.ExecuteReader();
                while (dr6a.Read())
                {
                    etudiant = dr6a.GetString(1) + " " + dr6a.GetString(0);
                    matricule = dr6a.GetString(2);
                }
                dr6a.Close();


                DateTime dt = DateTime.Now;
                int year = dt.Year;
                int mois = dt.Month;
                int jour = dt.Day;
                int heure = dt.Hour;
                int min = dt.Minute;
                int sec = dt.Month;
                string date = jour + "-" + mois + "-" + year + "_" + heure + "-" + min + "-" + sec;

                iTextSharp.text.Document doc = new iTextSharp.text.Document(PageSize.A4, 0, 0, 25, 5);
                string docname = "RN_" + date + ".pdf";
                string outputFile = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.Desktop), @"BMDSys", docname);
                FileStream fs = new FileStream(outputFile, FileMode.Create, FileAccess.Write, FileShare.None);
                PdfWriter wri = PdfWriter.GetInstance(doc, fs);
                doc.Open();


                iTextSharp.text.pdf.BaseFont bfTimes = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, false);

                iTextSharp.text.Font font_bold = new iTextSharp.text.Font(bfTimes, 8, iTextSharp.text.Font.BOLD, iTextSharp.text.BaseColor.BLACK);
                iTextSharp.text.Font font_normal = new iTextSharp.text.Font(bfTimes, 8, iTextSharp.text.Font.NORMAL, iTextSharp.text.BaseColor.BLACK);
                iTextSharp.text.Font font_header = new iTextSharp.text.Font(bfTimes, 11, iTextSharp.text.Font.BOLD, iTextSharp.text.BaseColor.BLACK);
                iTextSharp.text.Font timesunderlined = new iTextSharp.text.Font(bfTimes, 9, iTextSharp.text.Font.BOLD | iTextSharp.text.Font.UNDERLINE, BaseColor.BLACK);



                string universite = Load_Institution(conn);
                string coordonee = Load_Adress(conn);
                string value = coordonee;
                string[] opp = value.Split('-');
                site = opp[0];
                siege = opp[1];
                telephone = opp[2];
                b_postale = opp[3];

                PdfPCell cell = new PdfPCell(new Phrase("", font_bold_10));
                PdfPTable table = first_header(conn, universite, ref cell, faculte);
                doc.Add(table);

                iTextSharp.text.Paragraph txt_t = new iTextSharp.text.Paragraph(" ", font_bold);
                txt_t.Alignment = Element.ALIGN_CENTER;
                txt_t.SpacingBefore = 10;
                txt_t.SpacingAfter = 10;
                doc.Add(txt_t);


                PdfPTable taba = new PdfPTable(4);//Creer une table de 5 colonnes
                float[] coltaba = { 5f, 12f, 8f, 12f };//parametrer les domensions(largeur) de chacune des collonnes
                taba.SetWidths(coltaba);

                cell = new PdfPCell(new Phrase("Nom et Prénom", font_bold));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);

                cell = new PdfPCell(new Phrase(": " + etudiant, font_bold));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);


                cell = new PdfPCell(new Phrase("Département", font_bold));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);

                //cell = new PdfPCell(new Phrase(": " + etudiant_releve_note.departement, font_bold));
                /*cell = new PdfPCell(new Phrase(": ", font_bold));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                taba.AddCell(cell);*/


                if (has_depaartement == 0 || has_depaartement == 1)
                {
                    cell = new PdfPCell(new Phrase(" ", font_bold));
                    cell.HorizontalAlignment = Element.ALIGN_LEFT;
                    cell.BorderWidth = 0;
                    taba.AddCell(cell);
                }
                else if (has_depaartement > 1)
                {
                    cell = new PdfPCell(new Phrase(": " + departement, font_bold));
                    cell.HorizontalAlignment = Element.ALIGN_LEFT;
                    cell.BorderWidth = 0;
                    taba.AddCell(cell);
                }


                cell = new PdfPCell(new Phrase("Année d’études", font_bold));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);

                cell = new PdfPCell(new Phrase(": " + classe, font_bold));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                taba.AddCell(cell);

                cell = new PdfPCell(new Phrase("Filière/Option ", font_bold));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                taba.AddCell(cell);

                cell = new PdfPCell(new Phrase(": ", font_bold));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                taba.AddCell(cell);

                cell = new PdfPCell(new Phrase(" ", font_bold));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 2;
                taba.AddCell(cell);


                cell = new PdfPCell(new Phrase("Année Académique", font_bold));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                taba.AddCell(cell);

                cell = new PdfPCell(new Phrase(": " + annee, font_bold));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                taba.AddCell(cell);

                doc.Add(taba);


                iTextSharp.text.Paragraph txt_titre1 = new iTextSharp.text.Paragraph("BULLETIN D’EPREUVES", timesunderlined);
                txt_titre1.Alignment = Element.ALIGN_CENTER;
                txt_titre1.SpacingBefore = 10;
                txt_titre1.SpacingAfter = 20;
                doc.Add(txt_titre1);


                PdfPTable tab = new PdfPTable(7);
                float[] colwiths = { 3f, 25f, 4f, 4f, 4f, 4f, 4f };
                tab.SetWidths(colwiths);





                SemestreArray = new string[2] { "I", "II" };
                SemestreID = new string[2] { "1", "2" };
                SessionID = new string[2] { "1", "2" };
                int cpt = 0;
                for (i = 0; i < 2; i++)
                {
                    cpt = 0;
                    creditsParSemestre = 0;
                    Semestre_Total_Generale_Pondere = 0;
                    Semestre_1er_Pondere = 0;

                    if (i == 0)
                    {
                        cell = new PdfPCell(new Phrase("Unité d’Enseignement (UE) et\n Eléments Constitutifs d’Unité d’Enseignement (ECUE)", font_bold));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.Rowspan = 2;
                        cell.Colspan = 2;
                        tab.AddCell(cell);

                        cell = new PdfPCell(new Phrase("\nCrédits", font_bold));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.Rowspan = 2;
                        tab.AddCell(cell);

                        cell = new PdfPCell(new Phrase("Notes sur 20", font_bold));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.Colspan = 2;
                        tab.AddCell(cell);

                        cell = new PdfPCell(new Phrase("Note pondérée", font_bold));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.Rowspan = 2;
                        tab.AddCell(cell);


                        cell = new PdfPCell(new Phrase("\nValidation", font_bold));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.Rowspan = 2;
                        tab.AddCell(cell);

                        cell = new PdfPCell(new Phrase("1ère Session", font_bold));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        tab.AddCell(cell);

                        cell = new PdfPCell(new Phrase("2ème Session", font_bold));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        tab.AddCell(cell);
                    }


                    string s7 = "SELECT valeur FROM  deliberation_parametre_generaux WHERE id_parametre=@id_parametre";
                    MySqlCommand c7 = new MySqlCommand(s7, conn);
                    c7.Parameters.AddWithValue("@id_parametre", 4);
                    MySqlDataReader d7 = c7.ExecuteReader();
                    while (d7.Read())
                    {
                        ecue_sous_sept_value = d7.GetInt32(0);
                    }
                    d7.Close();


                    string sql0 = "SELECT COUNT(*) FROM unite WHERE id_classe=@idcl AND id_departement=@id_departement AND id_faculte=@id_faculte AND id_annee=@id_annee AND id_semestre=@idsem";
                    MySqlCommand cmd0 = new MySqlCommand(sql0, conn);
                    cmd0.Parameters.AddWithValue("@idcl", id_classe);
                    cmd0.Parameters.AddWithValue("@id_departement", id_departement);
                    cmd0.Parameters.AddWithValue("@id_faculte", id_faculte);
                    cmd0.Parameters.AddWithValue("@id_annee", id_annee);
                    cmd0.Parameters.AddWithValue("@idsem", Convert.ToInt32(SemestreID[i]));
                    int nbre_ue = Convert.ToInt32(cmd0.ExecuteScalar());
                    UE_ID = new string[nbre_ue];
                    UE_Array = new string[nbre_ue];
                    UE_Code = new string[nbre_ue];

                    string sq = "SELECT cours.credits" +
                        " FROM unite INNER JOIN cours ON unite.id_unite = cours.id_unite" +
                        " WHERE unite.id_classe=@idcl AND unite.id_departement=@id_departement AND unite.id_faculte=@id_faculte AND unite.id_annee=@id_annee AND unite.id_semestre=@idsem";
                    MySqlCommand cq = new MySqlCommand(sq, conn);
                    cq.Parameters.AddWithValue("@idcl", id_classe);
                    cq.Parameters.AddWithValue("@id_departement", id_departement);
                    cq.Parameters.AddWithValue("@id_faculte", id_faculte);
                    cq.Parameters.AddWithValue("@id_annee", id_annee);
                    cq.Parameters.AddWithValue("@idsem", Convert.ToInt32(SemestreID[i]));
                    MySqlDataReader dq = cq.ExecuteReader();
                    while (dq.Read())
                    {
                        creditsParSemestre += dq.GetInt32(0);
                    }
                    dq.Close();
                    creditsAnnuel += creditsParSemestre;

                    string[] coursID, coursCredit;
                    string sqs = "SELECT COUNT( DISTINCT cours.id_cours)" +
                        " FROM unite INNER JOIN (cours INNER JOIN etudiant_note ON cours.id_cours = etudiant_note.id_cours) ON unite.id_unite = cours.id_unite" +
                        " WHERE unite.id_classe=@idcl AND unite.id_departement=@id_departement AND unite.id_semestre=@idsem AND unite.id_faculte=@id_faculte AND unite.id_annee=@id_annee";
                    MySqlCommand cqs = new MySqlCommand(sqs, conn);
                    cqs.Parameters.AddWithValue("@idcl", id_classe);
                    cqs.Parameters.AddWithValue("@id_departement", id_departement);
                    cqs.Parameters.AddWithValue("@id_faculte", id_faculte);
                    cqs.Parameters.AddWithValue("@id_annee", id_annee);
                    cqs.Parameters.AddWithValue("@idsem", Convert.ToInt32(SemestreID[i]));
                    int nbre_cours_semestre = Convert.ToInt32(cqs.ExecuteScalar());
                    coursID = new string[nbre_cours_semestre];
                    coursCredit = new string[nbre_cours_semestre];

                    if (nbre_cours_semestre == 0)
                    {
                    }
                    else
                    {
                        string sqs1 = "SELECT DISTINCT cours.id_cours, cours.credits" +
                        " FROM unite INNER JOIN (cours INNER JOIN etudiant_note ON cours.id_cours = etudiant_note.id_cours) ON unite.id_unite = cours.id_unite" +
                        " WHERE unite.id_classe=@idcl AND unite.id_departement=@id_departement AND unite.id_semestre=@idsem AND unite.id_faculte=@id_faculte AND unite.id_annee=@id_annee";
                        MySqlCommand cqs1 = new MySqlCommand(sqs1, conn);
                        cqs1.Parameters.AddWithValue("@idcl", id_classe);
                        cqs1.Parameters.AddWithValue("@id_departement", id_departement);
                        cqs1.Parameters.AddWithValue("@id_faculte", id_faculte);
                        cqs1.Parameters.AddWithValue("@id_annee", id_annee);
                        cqs1.Parameters.AddWithValue("@idsem", Convert.ToInt32(SemestreID[i]));
                        MySqlDataReader dqs1 = cqs1.ExecuteReader();
                        int b = 0;
                        while (dqs1.Read())
                        {
                            coursID[b] = string.Format("{0}", dqs1.GetInt32(0).ToString());
                            coursCredit[b] = string.Format("{0}", dqs1.GetInt32(1).ToString());
                            b++;
                        }
                        dqs1.Close();
                    }

                    for (int crs = 0; crs < nbre_cours_semestre; crs++)
                    {
                        string sqs2 = "SELECT COUNT(*) FROM etudiant_note WHERE id_cours=@id_cours AND id_etudiant=@id_etudiant AND id_session=@id_session";
                        MySqlCommand cqs2 = new MySqlCommand(sqs2, conn);
                        cqs2.Parameters.AddWithValue("@id_etudiant", id_etudiant);
                        cqs2.Parameters.AddWithValue("@id_session", 2);
                        cqs2.Parameters.AddWithValue("@id_cours", Convert.ToInt32(coursID[crs]));
                        int exist_en_2eme_session = Convert.ToInt32(cqs2.ExecuteScalar());
                        if (exist_en_2eme_session == 0)
                        {
                            string sqq = "SELECT note FROM etudiant_note WHERE id_cours=@id_cours AND id_etudiant=@id_etudiant AND id_session=@id_session";
                            MySqlCommand cq1 = new MySqlCommand(sqq, conn);
                            cq1.Parameters.AddWithValue("@id_cours", Convert.ToInt32(coursID[crs]));
                            cq1.Parameters.AddWithValue("@id_etudiant", id_etudiant);
                            cq1.Parameters.AddWithValue("@id_session", 1);
                            MySqlDataReader dq1 = cq1.ExecuteReader();
                            double not;
                            while (dq1.Read())
                            {
                                if (dq1.GetString(0) == "")
                                {
                                }
                                else
                                {
                                    //not = double.Parse(dq1.GetString(0), System.Globalization.CultureInfo.InvariantCulture);
                                    not = Convert.ToDouble(dq1.GetString(0));
                                    Semestre_1er_Pondere += (not * Convert.ToInt32(coursCredit[crs]));
                                    Semestre_Total_Generale_Pondere += (not * Convert.ToInt32(coursCredit[crs]));
                                }
                            }
                            dq1.Close();
                        }
                        else
                        {
                            cpt++;
                            string sqq = "SELECT note FROM etudiant_note WHERE id_cours=@id_cours AND id_etudiant=@id_etudiant AND id_session=@id_session";
                            MySqlCommand cq1 = new MySqlCommand(sqq, conn);
                            cq1.Parameters.AddWithValue("@id_cours", Convert.ToInt32(coursID[crs]));
                            cq1.Parameters.AddWithValue("@id_etudiant", id_etudiant);
                            cq1.Parameters.AddWithValue("@id_session", 2);
                            MySqlDataReader dq1 = cq1.ExecuteReader();
                            double not;
                            while (dq1.Read())
                            {
                                if (dq1.GetString(0) == "")
                                {
                                }
                                else
                                {
                                    //not = double.Parse(dq1.GetString(0), System.Globalization.CultureInfo.InvariantCulture);
                                    not = Convert.ToDouble(dq1.GetString(0));
                                    Semestre_Total_Generale_Pondere += (not * Convert.ToInt32(coursCredit[crs]));
                                }
                            }
                            dq1.Close();
                        }
                    }

                    moyenne_Ponderee_1er_Semestre = Semestre_1er_Pondere / creditsParSemestre;

                    moyennePondereeSemestre = Semestre_Total_Generale_Pondere / creditsParSemestre;

                    totalPondereAnnuel += Semestre_Total_Generale_Pondere;

                    cell = new PdfPCell(new Phrase("SEMESTRE " + SemestreArray[i], font_bold));
                    cell.Colspan = 2;
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.VerticalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.YELLOW;
                    tab.AddCell(cell);

                    cell = new PdfPCell(new Phrase(creditsParSemestre.ToString(), font_bold));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.YELLOW;
                    tab.AddCell(cell);

                    cell = new PdfPCell(new Phrase(moyenne_Ponderee_1er_Semestre.ToString("#.##"), font_bold));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.YELLOW;
                    tab.AddCell(cell);
                    if (cpt == 0)
                    {
                        cell = new PdfPCell(new Phrase(" ", font_bold));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.YELLOW;
                        tab.AddCell(cell);
                    }
                    else
                    {
                        cell = new PdfPCell(new Phrase(moyennePondereeSemestre.ToString("#.##"), font_bold));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.YELLOW;
                        tab.AddCell(cell);
                    }


                    xm = moyennePondereeSemestre * creditsParSemestre;
                    //cell = new PdfPCell(new Phrase(xm.ToString("#.##"), Semestre_font));

                    cell = new PdfPCell(new Phrase(Semestre_Total_Generale_Pondere.ToString("#.##"), font_bold));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.YELLOW;
                    tab.AddCell(cell);

                    cell = new PdfPCell(new Phrase(" ", font_bold));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BorderWidth = 0;
                    tab.AddCell(cell);

                    string sql = "SELECT id_unite,unite,code_unite FROM unite WHERE id_classe=@idcl AND id_semestre=@idsem AND id_departement=@id_departement AND unite.id_faculte=@id_faculte AND unite.id_annee=@id_annee";
                    MySqlCommand cmd = new MySqlCommand(sql, conn);
                    cmd.Parameters.AddWithValue("@id_faculte", id_faculte);
                    cmd.Parameters.AddWithValue("@id_annee", id_annee);
                    cmd.Parameters.AddWithValue("@id_departement", id_departement);
                    cmd.Parameters.AddWithValue("@idcl", id_classe);
                    cmd.Parameters.AddWithValue("@idsem", Convert.ToInt32(SemestreID[i]));
                    MySqlDataReader dr = cmd.ExecuteReader();
                    int j = 0;
                    while (dr.Read())
                    {
                        UE_ID[j] = string.Format("{0}", dr.GetInt32(0).ToString());
                        UE_Array[j] = string.Format("{0}", dr.GetString(1));
                        UE_Code[j] = string.Format("{0}", dr.GetString(2));
                        j++;
                    }
                    dr.Close();

                    int nbre_cours;
                    for (int k = 0; k < nbre_ue; k++)
                    {
                        ecue_sous_sept = 0;

                        string sq1 = "SELECT COUNT(*) FROM cours WHERE id_unite=@idue";
                        MySqlCommand cm1 = new MySqlCommand(sq1, conn);
                        cm1.Parameters.AddWithValue("@idue", Convert.ToInt32(UE_ID[k]));
                        nbre_cours = Convert.ToInt32(cm1.ExecuteScalar());
                        Cours_ID = new string[nbre_cours];
                        Cours_Nom = new string[nbre_cours];
                        Cours_Credits = new string[nbre_cours];

                        string sql1 = "SELECT credits FROM cours WHERE id_unite=@idue";
                        MySqlCommand cmdk = new MySqlCommand(sql1, conn);
                        cmdk.Parameters.AddWithValue("@idue", Convert.ToInt32(UE_ID[k]));
                        MySqlDataReader drk = cmdk.ExecuteReader();
                        while (drk.Read())
                        {
                            nbreCredits += drk.GetInt32(0);
                        }
                        drk.Close();
                        //==========================================================================================================//
                        string[] UE_coursID, UE_coursCred;
                        string sque = "SELECT COUNT( DISTINCT cours.id_cours)" +
                            " FROM unite INNER JOIN (cours INNER JOIN etudiant_note ON cours.id_cours = etudiant_note.id_cours) ON unite.id_unite = cours.id_unite" +
                            " WHERE unite.id_classe=@idcl AND unite.id_unite=@id_unite AND unite.id_departement=@id_departement AND unite.id_semestre=@idsem";
                        MySqlCommand cque = new MySqlCommand(sque, conn);
                        cque.Parameters.AddWithValue("@idcl", id_classe);
                        cque.Parameters.AddWithValue("@id_departement", id_departement);
                        cque.Parameters.AddWithValue("@id_unite", Convert.ToInt32(UE_ID[k]));
                        cque.Parameters.AddWithValue("@idsem", Convert.ToInt32(SemestreID[i]));
                        int nbre_cours_ue = Convert.ToInt32(cque.ExecuteScalar());
                        UE_coursID = new string[nbre_cours_ue];
                        UE_coursCred = new string[nbre_cours_ue];
                        //int cptu = 0;
                        if (nbre_cours_ue == 0)
                        {
                        }
                        else
                        {
                            string sqs1 = "SELECT DISTINCT cours.id_cours, cours.credits" +
                            " FROM unite INNER JOIN (cours INNER JOIN etudiant_note ON cours.id_cours = etudiant_note.id_cours) ON unite.id_unite = cours.id_unite" +
                            " WHERE unite.id_classe=@idcl AND unite.id_unite=@id_unite AND unite.id_departement=@id_departement AND unite.id_semestre=@idsem ";
                            MySqlCommand cqs1 = new MySqlCommand(sqs1, conn);
                            cqs1.Parameters.AddWithValue("@idcl", id_classe);
                            cqs1.Parameters.AddWithValue("@id_departement", id_departement);
                            cqs1.Parameters.AddWithValue("@id_unite", Convert.ToInt32(UE_ID[k]));
                            cqs1.Parameters.AddWithValue("@idsem", Convert.ToInt32(SemestreID[i]));
                            MySqlDataReader dqs1 = cqs1.ExecuteReader();
                            int b = 0;
                            while (dqs1.Read())
                            {
                                UE_coursID[b] = string.Format("{0}", dqs1.GetInt32(0).ToString());
                                UE_coursCred[b] = string.Format("{0}", dqs1.GetInt32(1).ToString());
                                b++;
                            }
                            dqs1.Close();
                        }
                        int cpt_ue = 0;
                        for (int crs = 0; crs < nbre_cours_ue; crs++)
                        {
                            string sqs2 = "SELECT COUNT(*) FROM etudiant_note WHERE id_cours=@id_cours AND id_etudiant=@id_etudiant AND id_session=@id_session";
                            MySqlCommand cqs2 = new MySqlCommand(sqs2, conn);
                            cqs2.Parameters.AddWithValue("@id_etudiant", id_etudiant);
                            cqs2.Parameters.AddWithValue("@id_session", 2);
                            cqs2.Parameters.AddWithValue("@id_cours", Convert.ToInt32(UE_coursID[crs]));
                            int exist_en_2eme_session = Convert.ToInt32(cqs2.ExecuteScalar());
                            if (exist_en_2eme_session == 0)
                            {
                                string sqq = "SELECT note FROM etudiant_note WHERE id_cours=@id_cours AND id_etudiant=@id_etudiant AND id_session=@id_session";
                                MySqlCommand cq1 = new MySqlCommand(sqq, conn);
                                cq1.Parameters.AddWithValue("@id_cours", Convert.ToInt32(UE_coursID[crs]));
                                cq1.Parameters.AddWithValue("@id_etudiant", id_etudiant);
                                cq1.Parameters.AddWithValue("@id_session", 1);
                                MySqlDataReader dq1 = cq1.ExecuteReader();
                                double not;
                                while (dq1.Read())
                                {
                                    if (dq1.GetString(0) == "")
                                    {
                                        ecue_sous_sept++;
                                    }
                                    else
                                    {
                                        //not = double.Parse(dq1.GetString(0), System.Globalization.CultureInfo.InvariantCulture);
                                        not = Convert.ToDouble(dq1.GetString(0));
                                        if (not < ecue_sous_sept_value)
                                        {
                                            ecue_sous_sept++;
                                        }
                                        totalPondereUE_1ereSession += not * Convert.ToInt32(UE_coursCred[crs]);
                                        totalPondereUE += not * Convert.ToInt32(UE_coursCred[crs]);
                                    }
                                }
                                dq1.Close();
                            }
                            else
                            {
                                cpt_ue++;

                                string sqq = "SELECT note FROM etudiant_note WHERE id_cours=@id_cours AND id_etudiant=@id_etudiant AND id_session=@id_session";
                                MySqlCommand cq1 = new MySqlCommand(sqq, conn);
                                cq1.Parameters.AddWithValue("@id_cours", Convert.ToInt32(UE_coursID[crs]));
                                cq1.Parameters.AddWithValue("@id_etudiant", id_etudiant);
                                cq1.Parameters.AddWithValue("@id_session", 1);
                                MySqlDataReader dq1 = cq1.ExecuteReader();
                                double not;
                                while (dq1.Read())
                                {
                                    if (dq1.GetString(0) == "")
                                    {
                                    }
                                    else
                                    {
                                        //not = double.Parse(dq1.GetString(0), System.Globalization.CultureInfo.InvariantCulture);
                                        not = Convert.ToDouble(dq1.GetString(0));
                                        totalPondereUE_1ereSession += not * Convert.ToInt32(UE_coursCred[crs]);

                                    }
                                }
                                dq1.Close();


                                string sqqq = "SELECT note FROM etudiant_note WHERE id_cours=@id_cours AND id_etudiant=@id_etudiant AND id_session=@id_session";
                                MySqlCommand cqq1 = new MySqlCommand(sqqq, conn);
                                cqq1.Parameters.AddWithValue("@id_cours", Convert.ToInt32(UE_coursID[crs]));
                                cqq1.Parameters.AddWithValue("@id_etudiant", id_etudiant);
                                cqq1.Parameters.AddWithValue("@id_session", 2);
                                MySqlDataReader dqq1 = cqq1.ExecuteReader();
                                double nott;
                                while (dqq1.Read())
                                {
                                    if (dqq1.GetString(0) == "")
                                    {
                                        ecue_sous_sept++;
                                    }
                                    else
                                    {
                                        //not = double.Parse(dq1.GetString(0), System.Globalization.CultureInfo.InvariantCulture);
                                        nott = Convert.ToDouble(dqq1.GetString(0));
                                        if (nott < ecue_sous_sept_value)
                                        {
                                            ecue_sous_sept++;
                                        }

                                        totalPondereUE += nott * Convert.ToInt32(UE_coursCred[crs]);
                                    }
                                }
                                dqq1.Close();
                            }
                        }
                        moyennePondereeUE_1ereSession = totalPondereUE_1ereSession / nbreCredits;
                        moyennePondereeUE = totalPondereUE / nbreCredits;

                        cell = new PdfPCell(new Phrase(UE_Code[k] + ": " + UE_Array[k], font_bold));
                        cell.HorizontalAlignment = Element.ALIGN_LEFT;
                        cell.Colspan = 2;
                        tab.AddCell(cell);


                        cell = new PdfPCell(new Phrase(nbreCredits.ToString(), font_bold));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        tab.AddCell(cell);


                        if (cpt_ue == 0)
                        {
                            cell = new PdfPCell(new Phrase(moyennePondereeUE_1ereSession.ToString("#.##"), font_bold));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            tab.AddCell(cell);

                            cell = new PdfPCell(new Phrase(" ", font_bold));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            tab.AddCell(cell);
                        }
                        else
                        {
                            cell = new PdfPCell(new Phrase(moyennePondereeUE_1ereSession.ToString("#.##"), font_bold));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            tab.AddCell(cell);

                            cell = new PdfPCell(new Phrase(moyennePondereeUE.ToString("#.##"), font_bold));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            tab.AddCell(cell);
                        }
                        cell = new PdfPCell(new Phrase((moyennePondereeUE * nbreCredits).ToString("#.##"), font_bold));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        tab.AddCell(cell);

                        ////MessageBox.Show(moyennePondereeUE+"  "+ecue_sous_sept + " " + ecue_sous_sept_value);
                        if (moyennePondereeUE < 10 || ecue_sous_sept > 0)
                        {
                            cell = new PdfPCell(new Phrase("NV", font_bold));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.VerticalAlignment = Element.ALIGN_CENTER;
                            tab.AddCell(cell);
                        }
                        else
                        {
                            cell = new PdfPCell(new Phrase("V", font_bold));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.VerticalAlignment = Element.ALIGN_CENTER;
                            tab.AddCell(cell);
                        }
                        nbreCredits = 0;
                        totalPondereUE = 0;
                        totalPondereUE_1ereSession = 0;

                        string sql2 = "SELECT id_cours,cours,credits FROM cours WHERE id_unite=@idue";
                        MySqlCommand cmd2 = new MySqlCommand(sql2, conn);
                        cmd2.Parameters.AddWithValue("@idue", Convert.ToInt32(UE_ID[k]));
                        MySqlDataReader dr2 = cmd2.ExecuteReader();
                        int t = 0;
                        while (dr2.Read())
                        {
                            Cours_ID[t] = string.Format("{0}", dr2.GetInt32(0).ToString());
                            Cours_Nom[t] = string.Format("{0}", dr2.GetString(1));
                            Cours_Credits[t] = string.Format("{0}", dr2.GetInt32(2).ToString());
                            t++;
                        }
                        dr2.Close();

                        for (int n = 0; n < nbre_cours; n++)
                        {
                            if (n == 0)
                            {
                                cell = new PdfPCell(new Phrase(""));
                                cell.Rowspan = nbre_cours;

                                tab.AddCell(cell);
                            }
                            cell = new PdfPCell(new Phrase(Cours_Nom[n], font_normal));
                            tab.AddCell(cell);

                            cell = new PdfPCell(new Phrase(Cours_Credits[n], font_normal));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            tab.AddCell(cell);

                            string sqs2 = "SELECT COUNT(*) FROM etudiant_note WHERE id_cours=@id_cours AND id_etudiant=@id_etudiant AND id_session=@id_session";
                            MySqlCommand cqs2 = new MySqlCommand(sqs2, conn);
                            cqs2.Parameters.AddWithValue("@id_etudiant", id_etudiant);
                            cqs2.Parameters.AddWithValue("@id_session", 2);
                            cqs2.Parameters.AddWithValue("@id_cours", Convert.ToInt32(Cours_ID[n]));
                            int exist_en_2eme_session = Convert.ToInt32(cqs2.ExecuteScalar());
                            if (exist_en_2eme_session == 0)
                            {
                                string sql3 = "SELECT note FROM etudiant_note WHERE id_cours=@idcours AND id_etudiant=@idetudiant AND id_session=@id_session";
                                MySqlCommand cmd3 = new MySqlCommand(sql3, conn);
                                cmd3.Parameters.AddWithValue("@idcours", Convert.ToInt32(Cours_ID[n]));
                                cmd3.Parameters.AddWithValue("@idetudiant", id_etudiant);
                                cmd3.Parameters.AddWithValue("@id_session", 1);
                                MySqlDataReader dr3 = cmd3.ExecuteReader();
                                if (dr3.Read())
                                {
                                    if (dr3.GetString(0) == "")
                                    {
                                        cell = new PdfPCell(new Phrase(" ", font_normal));
                                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                        tab.AddCell(cell);

                                        cell = new PdfPCell(new Phrase(" ", font_normal));
                                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                        tab.AddCell(cell);

                                        cell = new PdfPCell(new Phrase(" ", font_normal));
                                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                        tab.AddCell(cell);

                                    }
                                    else
                                    {
                                        //double nota = double.Parse(dr3.GetString(0), System.Globalization.CultureInfo.InvariantCulture); cell = new PdfPCell(new Phrase(nota.ToString(), Cours_font));
                                        double nota = Convert.ToDouble(dr3.GetString(0));
                                        cell = new PdfPCell(new Phrase(nota.ToString("#.##"), font_normal));
                                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                        tab.AddCell(cell);

                                        cell = new PdfPCell(new Phrase(" ", font_normal));
                                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                        tab.AddCell(cell);

                                        cell = new PdfPCell(new Phrase((Convert.ToInt32(Cours_Credits[n]) * nota).ToString("#.##"), font_normal));
                                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                        tab.AddCell(cell);

                                    }
                                }
                                else
                                {
                                    cell = new PdfPCell(new Phrase("", font_normal));
                                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                    tab.AddCell(cell);

                                    cell = new PdfPCell(new Phrase("", font_normal));
                                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                    tab.AddCell(cell);

                                    cell = new PdfPCell(new Phrase("", font_normal));
                                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                    tab.AddCell(cell);
                                }
                                dr3.Close();
                            }
                            else
                            {
                                string sql33 = "SELECT note FROM etudiant_note WHERE id_cours=@idcours AND id_etudiant=@idetudiant AND id_session=@id_session";
                                MySqlCommand cmd33 = new MySqlCommand(sql33, conn);
                                cmd33.Parameters.AddWithValue("@idcours", Convert.ToInt32(Cours_ID[n]));
                                cmd33.Parameters.AddWithValue("@idetudiant", id_etudiant);
                                cmd33.Parameters.AddWithValue("@id_session", 1);
                                MySqlDataReader dr33 = cmd33.ExecuteReader();
                                if (dr33.Read())
                                {
                                    if (dr33.GetString(0) == "")
                                    {
                                        cell = new PdfPCell(new Phrase(" ", font_normal));
                                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                        tab.AddCell(cell);
                                    }
                                    else
                                    {
                                        //double nota = double.Parse(dr3.GetString(0), System.Globalization.CultureInfo.InvariantCulture); cell = new PdfPCell(new Phrase(nota.ToString(), Cours_font));
                                        double nota = Convert.ToDouble(dr33.GetString(0));
                                        cell = new PdfPCell(new Phrase(nota.ToString("#.##"), font_normal));
                                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                        tab.AddCell(cell);
                                    }
                                }
                                else
                                {
                                    cell = new PdfPCell(new Phrase("", font_normal));
                                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                    tab.AddCell(cell);
                                }
                                dr33.Close();


                                string sql3 = "SELECT note FROM etudiant_note WHERE id_cours=@idcours AND id_etudiant=@idetudiant AND id_session=@id_session";
                                MySqlCommand cmd3 = new MySqlCommand(sql3, conn);
                                cmd3.Parameters.AddWithValue("@idcours", Convert.ToInt32(Cours_ID[n]));
                                cmd3.Parameters.AddWithValue("@idetudiant", id_etudiant);
                                cmd3.Parameters.AddWithValue("@id_session", 2);
                                MySqlDataReader dr3 = cmd3.ExecuteReader();
                                if (dr3.Read())
                                {
                                    if (dr3.GetString(0) == "")
                                    {
                                        cell = new PdfPCell(new Phrase("", font_normal));
                                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                        tab.AddCell(cell);

                                        cell = new PdfPCell(new Phrase("", font_normal));
                                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                        tab.AddCell(cell);
                                    }
                                    else
                                    {
                                        //double nota = double.Parse(dr3.GetString(0), System.Globalization.CultureInfo.InvariantCulture); cell = new PdfPCell(new Phrase(nota.ToString(), Cours_font));
                                        double nota = Convert.ToDouble(dr3.GetString(0));
                                        cell = new PdfPCell(new Phrase(nota.ToString("#.##"), font_normal));
                                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                        tab.AddCell(cell);

                                        cell = new PdfPCell(new Phrase((Convert.ToInt32(Cours_Credits[n]) * nota).ToString("#.##"), font_normal));
                                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                        tab.AddCell(cell);
                                    }
                                }
                                else
                                {
                                    cell = new PdfPCell(new Phrase("", font_normal));
                                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                    tab.AddCell(cell);

                                    cell = new PdfPCell(new Phrase("", font_normal));
                                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                    tab.AddCell(cell);
                                }
                                dr3.Close();
                            }


                            if (n == 0)
                            {
                                cell = new PdfPCell(new Phrase(" ", font_normal));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                cell.Rowspan = nbre_cours;
                                tab.AddCell(cell);
                            }
                        }
                    }



                    string sqf = "SELECT COUNT(*) FROM deliberation WHERE id_etudiant=@id_etudiant AND id_session=@id_session AND id_classe=@id_classe AND id_departement=@id_departement AND id_faculte=@id_faculte AND id_annee=@id_annee ";
                    MySqlCommand cqf = new MySqlCommand(sqf, conn);
                    cqf.Parameters.AddWithValue("@id_etudiant", id_etudiant);
                    cqf.Parameters.AddWithValue("@id_session", 2);
                    cqf.Parameters.AddWithValue("@id_classe", id_classe);
                    cqf.Parameters.AddWithValue("@id_departement", id_departement);
                    cqf.Parameters.AddWithValue("@id_faculte", id_faculte);
                    cqf.Parameters.AddWithValue("@id_annee", id_annee);
                    int exist_en_2emeS = Convert.ToInt32(cqf.ExecuteScalar());
                    if (exist_en_2emeS == 0)
                    {
                        string sq_0 = "SELECT date_deliberation FROM classe_deliberation WHERE id_annee=@id_annee AND id_faculte=@id_faculte AND id_departement=@id_departement AND id_classe=@id_classe AND id_session=@id_session";
                        MySqlCommand cm_0 = new MySqlCommand(sq_0, conn);
                        cm_0.Parameters.AddWithValue("@id_classe", id_classe);
                        cm_0.Parameters.AddWithValue("@id_departement", id_departement);
                        cm_0.Parameters.AddWithValue("@id_faculte", id_faculte);
                        cm_0.Parameters.AddWithValue("@id_annee", id_annee);
                        cm_0.Parameters.AddWithValue("@id_session", 1);
                        MySqlDataReader dr_0 = cm_0.ExecuteReader();
                        while (dr_0.Read())
                        {
                            date_deliberation_1ere_session = dr_0.GetString(0);
                        }
                        dr_0.Close();

                        string sq_1 = "SELECT ecue_nv, pourcentage FROM deliberation WHERE id_annee=@id_annee AND id_faculte=@id_faculte AND id_departement=@id_departement AND id_classe=@id_classe AND id_etudiant=@idetudiant AND id_session=@id_session";
                        MySqlCommand cm_1 = new MySqlCommand(sq_1, conn);
                        cm_1.Parameters.AddWithValue("@id_classe", id_classe);
                        cm_1.Parameters.AddWithValue("@id_departement", id_departement);
                        cm_1.Parameters.AddWithValue("@id_faculte", id_faculte);
                        cm_1.Parameters.AddWithValue("@id_annee", id_annee);
                        cm_1.Parameters.AddWithValue("@idetudiant", id_etudiant);
                        cm_1.Parameters.AddWithValue("@id_session", 1);
                        MySqlDataReader dr_1 = cm_1.ExecuteReader();
                        while (dr_1.Read())
                        {
                            nbre_ecue_nv_1ere_session = dr_1.GetInt32(0).ToString();
                            pourc_1ere_session = dr_1.GetDouble(1).ToString();
                            pourc_1ere_session = Convert.ToDouble(pourc_1ere_session).ToString("#.##");
                            total_pondere_1ere_session = (Convert.ToDouble(pourc_1ere_session) * creditsAnnuel * 0.2).ToString("#.##");
                        }
                        dr_1.Close();

                        string sq_mention = "SELECT mention.mention, deliberation_condition.decision" +
                        " FROM (deliberation_condition INNER JOIN deliberation ON deliberation_condition.id_decision = deliberation.id_decision) INNER JOIN mention ON deliberation.id_mention = mention.id_mention" +
                        " WHERE deliberation.id_annee=@id_annee AND deliberation.id_faculte=@id_faculte AND deliberation.id_departement=@id_departement AND deliberation.id_classe=@id_classe AND deliberation.id_etudiant=@idetudiant AND deliberation.id_session=@id_session";
                        MySqlCommand cm_mention = new MySqlCommand(sq_mention, conn);
                        cm_mention.Parameters.AddWithValue("@id_classe", id_classe);
                        cm_mention.Parameters.AddWithValue("@id_departement", id_departement);
                        cm_mention.Parameters.AddWithValue("@id_faculte", id_faculte);
                        cm_mention.Parameters.AddWithValue("@id_annee", id_annee);
                        cm_mention.Parameters.AddWithValue("@idetudiant", id_etudiant);
                        cm_mention.Parameters.AddWithValue("@id_session", 1);
                        MySqlDataReader dr_mention = cm_mention.ExecuteReader();
                        while (dr_mention.Read())
                        {
                            mention_1ere_session = dr_mention.GetString(0);
                            decision_1ere_session = dr_mention.GetString(1);
                        }
                        dr_mention.Close();
                    }
                    else
                    {
                        string sq_0 = "SELECT date_deliberation FROM classe_deliberation WHERE id_annee=@id_annee AND id_faculte=@id_faculte AND id_departement=@id_departement AND id_classe=@id_classe AND id_session=@id_session";
                        MySqlCommand cm_0 = new MySqlCommand(sq_0, conn);
                        cm_0.Parameters.AddWithValue("@id_classe", id_classe);
                        cm_0.Parameters.AddWithValue("@id_departement", id_departement);
                        cm_0.Parameters.AddWithValue("@id_faculte", id_faculte);
                        cm_0.Parameters.AddWithValue("@id_annee", id_annee);
                        cm_0.Parameters.AddWithValue("@id_session", 1);
                        MySqlDataReader dr_0 = cm_0.ExecuteReader();
                        while (dr_0.Read())
                        {
                            date_deliberation_1ere_session = dr_0.GetString(0);
                        }
                        dr_0.Close();

                        string sq_00 = "SELECT date_deliberation FROM classe_deliberation WHERE id_annee=@id_annee AND id_faculte=@id_faculte AND id_departement=@id_departement AND id_classe=@id_classe AND id_session=@id_session";
                        MySqlCommand cm_00 = new MySqlCommand(sq_0, conn);
                        cm_00.Parameters.AddWithValue("@id_classe", id_classe);
                        cm_00.Parameters.AddWithValue("@id_departement", id_departement);
                        cm_00.Parameters.AddWithValue("@id_faculte", id_faculte);
                        cm_00.Parameters.AddWithValue("@id_annee", id_annee);
                        cm_00.Parameters.AddWithValue("@id_session", 2);
                        MySqlDataReader dr_00 = cm_00.ExecuteReader();
                        while (dr_00.Read())
                        {
                            date_deliberation_2eme_session = dr_00.GetString(0);
                        }
                        dr_00.Close();

                        string sq_1 = "SELECT ecue_nv, pourcentage FROM deliberation WHERE id_annee=@id_annee AND id_faculte=@id_faculte AND id_departement=@id_departement AND id_classe=@id_classe AND id_etudiant=@idetudiant AND id_session=@id_session";
                        MySqlCommand cm_1 = new MySqlCommand(sq_1, conn);
                        cm_1.Parameters.AddWithValue("@id_classe", id_classe);
                        cm_1.Parameters.AddWithValue("@id_departement", id_departement);
                        cm_1.Parameters.AddWithValue("@id_faculte", id_faculte);
                        cm_1.Parameters.AddWithValue("@id_annee", id_annee);
                        cm_1.Parameters.AddWithValue("@idetudiant", id_etudiant);
                        cm_1.Parameters.AddWithValue("@id_session", 1);
                        MySqlDataReader dr_1 = cm_1.ExecuteReader();
                        while (dr_1.Read())
                        {
                            nbre_ecue_nv_1ere_session = dr_1.GetInt32(0).ToString();
                            pourc_1ere_session = dr_1.GetDouble(1).ToString();
                            pourc_1ere_session = Convert.ToDouble(pourc_1ere_session).ToString("#.##");
                            total_pondere_1ere_session = (Convert.ToDouble(pourc_1ere_session) * creditsAnnuel * 0.2).ToString("#.##");
                        }
                        dr_1.Close();

                        string sq_2 = "SELECT ecue_nv, pourcentage FROM deliberation WHERE id_annee=@id_annee AND id_faculte=@id_faculte AND id_departement=@id_departement AND id_classe=@id_classe AND id_etudiant=@idetudiant AND id_session=@id_session";
                        MySqlCommand cm_2 = new MySqlCommand(sq_2, conn);
                        cm_2.Parameters.AddWithValue("@id_classe", id_classe);
                        cm_2.Parameters.AddWithValue("@id_departement", id_departement);
                        cm_2.Parameters.AddWithValue("@id_faculte", id_faculte);
                        cm_2.Parameters.AddWithValue("@id_annee", id_annee);
                        cm_2.Parameters.AddWithValue("@idetudiant", id_etudiant);
                        cm_2.Parameters.AddWithValue("@id_session", 2);
                        MySqlDataReader dr_2 = cm_2.ExecuteReader();
                        while (dr_2.Read())
                        {
                            nbre_ecue_nv_2eme_session = dr_2.GetInt32(0).ToString();
                            pourc_2eme_session = dr_2.GetDouble(1).ToString();
                            pourc_2eme_session = Convert.ToDouble(pourc_2eme_session).ToString("#.##");
                            total_pondere_2eme_session = (Convert.ToDouble(pourc_2eme_session) * creditsAnnuel * 0.2).ToString("#.##");
                        }
                        dr_2.Close();

                        string sq_mention1 = "SELECT mention.mention, deliberation_condition.decision" +
                        " FROM (deliberation_condition INNER JOIN deliberation ON deliberation_condition.id_decision = deliberation.id_decision) INNER JOIN mention ON deliberation.id_mention = mention.id_mention" +
                        " WHERE deliberation.id_annee=@id_annee AND deliberation.id_faculte=@id_faculte AND deliberation.id_departement=@id_departement AND deliberation.id_classe=@id_classe AND deliberation.id_etudiant=@idetudiant AND deliberation.id_session=@id_session";
                        MySqlCommand cm_mention1 = new MySqlCommand(sq_mention1, conn);
                        cm_mention1.Parameters.AddWithValue("@id_classe", id_classe);
                        cm_mention1.Parameters.AddWithValue("@id_departement", id_departement);
                        cm_mention1.Parameters.AddWithValue("@id_faculte", id_faculte);
                        cm_mention1.Parameters.AddWithValue("@id_annee", id_annee);
                        cm_mention1.Parameters.AddWithValue("@idetudiant", id_etudiant);
                        cm_mention1.Parameters.AddWithValue("@id_session", 1);
                        MySqlDataReader dr_mention1 = cm_mention1.ExecuteReader();
                        while (dr_mention1.Read())
                        {
                            mention_1ere_session = dr_mention1.GetString(0);
                            decision_1ere_session = dr_mention1.GetString(1);
                        }
                        dr_mention1.Close();


                        string sq_mention = "SELECT mention.mention, deliberation_condition.decision" +
                        " FROM (deliberation_condition INNER JOIN deliberation ON deliberation_condition.id_decision = deliberation.id_decision) INNER JOIN mention ON deliberation.id_mention = mention.id_mention" +
                        " WHERE deliberation.id_annee=@id_annee AND deliberation.id_faculte=@id_faculte AND deliberation.id_departement=@id_departement AND deliberation.id_classe=@id_classe AND deliberation.id_etudiant=@idetudiant AND deliberation.id_session=@id_session";
                        MySqlCommand cm_mention = new MySqlCommand(sq_mention, conn);
                        cm_mention.Parameters.AddWithValue("@id_classe", id_classe);
                        cm_mention.Parameters.AddWithValue("@id_departement", id_departement);
                        cm_mention.Parameters.AddWithValue("@id_faculte", id_faculte);
                        cm_mention.Parameters.AddWithValue("@id_annee", id_annee);
                        cm_mention.Parameters.AddWithValue("@idetudiant", id_etudiant);
                        cm_mention.Parameters.AddWithValue("@id_session", 2);
                        MySqlDataReader dr_mention = cm_mention.ExecuteReader();
                        while (dr_mention.Read())
                        {
                            mention_2eme_session = dr_mention.GetString(0);
                            decision_2eme_session = dr_mention.GetString(1);
                        }
                        dr_mention.Close();
                    }
                }
                //conn.Close();
                cell = new PdfPCell(new Phrase("Total crédits et moyenne pondérée", font_bold));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.Colspan = 2;
                tab.AddCell(cell);

                cell = new PdfPCell(new Phrase(creditsAnnuel.ToString(), font_bold));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                tab.AddCell(cell);

                cell = new PdfPCell(new Phrase(" ", font_bold));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidth = 0;
                tab.AddCell(cell);

                cell = new PdfPCell(new Phrase(" ", font_bold));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidth = 0;
                tab.AddCell(cell);

                moyennePondereeAnnuelle = (double)totalPondereAnnuel / creditsAnnuel;
                double ue_ponderre = (double)moyennePondereeAnnuelle * creditsAnnuel;
                pourcentage = moyennePondereeAnnuelle * 5;


                cell = new PdfPCell(new Phrase((moyennePondereeAnnuelle * creditsAnnuel).ToString("#.##"), font_bold));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                tab.AddCell(cell);

                //cell = new PdfPCell(new Phrase(ue_ponderre.ToString("#.##"), Semestre_font));
                cell = new PdfPCell(new Phrase(" ", font_bold));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidth = 0;
                tab.AddCell(cell);

                cell = new PdfPCell(new Phrase("  ", font_bold));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.Colspan = 5;
                cell.BorderWidth = 0;
                tab.AddCell(cell);

                doc.Add(tab);

                iTextSharp.text.Paragraph txt_ = new iTextSharp.text.Paragraph(" ", timesunderlined);
                txt_.Alignment = Element.ALIGN_CENTER;
                txt_.SpacingBefore = 10;
                txt_.SpacingAfter = 10;
                doc.Add(txt_);

                string[] ID_ECUE_NV, ID_UE_NV_1ere_Session, ID_UE_NV_2eme_Session, ID_ECUE_NV_1ere_Session, ID_ECUE_NV_2eme_Session, Classe_ID;

                string squee = "SELECT COUNT( DISTINCT id_cours) FROM etudiant_note WHERE id_etudiant=@id_etudiant AND id_session=@id_session";
                MySqlCommand cquee = new MySqlCommand(squee, conn);
                cquee.Parameters.AddWithValue("@id_etudiant", id_etudiant);
                cquee.Parameters.AddWithValue("@id_session", 2);
                int n_cours = Convert.ToInt32(cquee.ExecuteScalar());
                ID_ECUE_NV = new string[n_cours];
                if (n_cours == 0)
                {
                }
                else
                {
                    string sqs1 = "SELECT DISTINCT id_cours FROM etudiant_note_complement WHERE id_etudiant=@id_etudiant ORDER BY id_complement";
                    MySqlCommand cqs1 = new MySqlCommand(sqs1, conn);
                    cqs1.Parameters.AddWithValue("@id_etudiant", id_etudiant);
                    MySqlDataReader dqs1 = cqs1.ExecuteReader();
                    int b = 0;
                    while (dqs1.Read())
                    {
                        /*UE_coursID[b] = string.Format("{0}", dqs1.GetInt32(0).ToString());
                        UE_coursCred[b] = string.Format("{0}", dqs1.GetInt32(1).ToString());*/
                        b++;
                    }
                    dqs1.Close();
                }



                PdfPTable tDeliberation = new PdfPTable(9);
                float[] colwith_deliberation = { 6f, 4f, 10f, 10f, 5f, 5f, 5f, 5f, 5f };
                tDeliberation.SetWidths(colwith_deliberation);

                cell = new PdfPCell(new Phrase(" ", font_bold));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.Colspan = 2;
                cell.BorderWidth = 0;
                tDeliberation.AddCell(cell);

                cell = new PdfPCell(new Phrase(" 1ère Session", font_bold));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                tDeliberation.AddCell(cell);

                cell = new PdfPCell(new Phrase(" 2ème Session", font_bold));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                tDeliberation.AddCell(cell);

                //cell = new PdfPCell(new Phrase("\nFait à " + siege + ", le " + DateTime.Today.Date.ToShortDateString() + "\n\nLe Doyen\nNom et Prénom du Doyen\n\nSignature\n\nSceau de la Faculté ou Institut", font_bold));
                cell = new PdfPCell(new Phrase("\nFait à" + siege + ", le " + DateTime.Today.Date.ToShortDateString() + "\n\nLe Doyen\nNom et Prénom du Doyen\n\nSignature\n\nSceau de la Faculté ou Institut", font_bold));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.Colspan = 5;
                cell.Rowspan = 7;
                cell.BorderWidth = 0;
                tDeliberation.AddCell(cell);

                cell = new PdfPCell(new Phrase(" Résultats", font_bold));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.VerticalAlignment = Element.ALIGN_CENTER;
                cell.Rowspan = 2;
                tDeliberation.AddCell(cell);

                cell = new PdfPCell(new Phrase("%", font_bold));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                tDeliberation.AddCell(cell);

                cell = new PdfPCell(new Phrase(pourc_1ere_session.ToString(), font_bold));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;

                tDeliberation.AddCell(cell);
                cell = new PdfPCell(new Phrase(pourc_2eme_session.ToString(), font_bold));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                tDeliberation.AddCell(cell);


                cell = new PdfPCell(new Phrase(" Mention", font_bold));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                tDeliberation.AddCell(cell);

                cell = new PdfPCell(new Phrase(mention_1ere_session, font_bold));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                tDeliberation.AddCell(cell);

                cell = new PdfPCell(new Phrase(mention_2eme_session, font_bold));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                tDeliberation.AddCell(cell);

                cell = new PdfPCell(new Phrase("Décision du Jury", font_bold));
                cell.VerticalAlignment = Element.ALIGN_CENTER;
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                cell.Colspan = 2;
                tDeliberation.AddCell(cell);

                cell = new PdfPCell(new Phrase(decision_1ere_session, font_bold));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                tDeliberation.AddCell(cell);

                cell = new PdfPCell(new Phrase(decision_2eme_session, font_bold));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                tDeliberation.AddCell(cell);

                cell = new PdfPCell(new Phrase(" ", font_bold));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.VerticalAlignment = Element.ALIGN_CENTER;
                cell.Rowspan = 3;
                cell.BorderWidth = 0;
                tDeliberation.AddCell(cell);

                cell = new PdfPCell(new Phrase(" ", font_bold));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidth = 0;
                tDeliberation.AddCell(cell);

                cell = new PdfPCell(new Phrase(" ", font_bold));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidth = 0;
                tDeliberation.AddCell(cell);

                cell = new PdfPCell(new Phrase(" ", font_bold));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidth = 0;
                tDeliberation.AddCell(cell);


                cell = new PdfPCell(new Phrase(" ", font_bold));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidth = 0;
                tDeliberation.AddCell(cell);

                cell = new PdfPCell(new Phrase(" ", font_bold));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidth = 0;
                tDeliberation.AddCell(cell);

                cell = new PdfPCell(new Phrase(" ", font_bold));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidth = 0;
                tDeliberation.AddCell(cell);

                cell = new PdfPCell(new Phrase(" ", font_bold));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidth = 0;
                tDeliberation.AddCell(cell);

                cell = new PdfPCell(new Phrase(" ", font_bold));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidth = 0;
                tDeliberation.AddCell(cell);

                cell = new PdfPCell(new Phrase(" ", font_bold));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidth = 0;
                tDeliberation.AddCell(cell);
                doc.Add(tDeliberation);






                /*PdfPTable tDeliberation = new PdfPTable(5);
                float[] colwith_deliberation = { 6f, 6f, 7f, 12f, 12f };
                tDeliberation.SetWidths(colwith_deliberation);

                cell = new PdfPCell(new Phrase(" ", font_bold));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.Colspan = 3;
                cell.BorderWidthTop = 0;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthBottom = 0;
                tDeliberation.AddCell(cell);

                cell = new PdfPCell(new Phrase("DELIBERATION 1ère SESSION", font_bold));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                tDeliberation.AddCell(cell);

                cell = new PdfPCell(new Phrase("DELIBERATION 2ème SESSION", font_bold));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                tDeliberation.AddCell(cell);


                cell = new PdfPCell(new Phrase(" ", font_bold));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.Colspan = 2;
                cell.BorderWidthTop = 0;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthBottom = 0;
                tDeliberation.AddCell(cell);

                cell = new PdfPCell(new Phrase("DATE", font_bold));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                tDeliberation.AddCell(cell);

                cell = new PdfPCell(new Phrase(date_deliberation_1ere_session, font_bold));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                tDeliberation.AddCell(cell);

                cell = new PdfPCell(new Phrase(date_deliberation_2eme_session, font_bold));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                tDeliberation.AddCell(cell);


                cell = new PdfPCell(new Phrase(" ", font_bold));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.Colspan = 2;
                cell.BorderWidthTop = 0;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthBottom = 0;
                tDeliberation.AddCell(cell);

                cell = new PdfPCell(new Phrase("TOTAL PONDERE", font_bold));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                tDeliberation.AddCell(cell);

                cell = new PdfPCell(new Phrase((creditsAnnuel * 20).ToString(), font_bold));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                tDeliberation.AddCell(cell);

                cell = new PdfPCell(new Phrase((creditsAnnuel*20).ToString(), font_bold));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                tDeliberation.AddCell(cell);


                cell = new PdfPCell(new Phrase(" ", font_bold));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.Colspan = 2;
                cell.BorderWidthTop = 0;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthBottom = 0;
                tDeliberation.AddCell(cell);

                cell = new PdfPCell(new Phrase("NOTE PONDEREE", font_bold));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                tDeliberation.AddCell(cell);

                cell = new PdfPCell(new Phrase(total_pondere_1ere_session, font_bold));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                tDeliberation.AddCell(cell);

                cell = new PdfPCell(new Phrase(total_pondere_2eme_session, font_bold));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                tDeliberation.AddCell(cell);

                cell = new PdfPCell(new Phrase(" ", font_bold));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.Colspan = 2;
                cell.BorderWidthTop = 0;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthBottom = 0;
                tDeliberation.AddCell(cell);

                cell = new PdfPCell(new Phrase("POURCENTAGE", font_bold));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                tDeliberation.AddCell(cell);

                cell = new PdfPCell(new Phrase(pourc_1ere_session, font_bold));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                tDeliberation.AddCell(cell);

                cell = new PdfPCell(new Phrase(pourc_2eme_session, font_bold));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                tDeliberation.AddCell(cell);


                cell = new PdfPCell(new Phrase(" ", font_bold));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.Colspan = 2;
                cell.BorderWidthTop = 0;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthBottom = 0;
                tDeliberation.AddCell(cell);

                cell = new PdfPCell(new Phrase("ECUE A VALIDER", font_bold));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                tDeliberation.AddCell(cell);

                cell = new PdfPCell(new Phrase(nbre_ecue_nv_1ere_session, font_bold));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                tDeliberation.AddCell(cell);

                cell = new PdfPCell(new Phrase(nbre_ecue_nv_2eme_session, font_bold));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                tDeliberation.AddCell(cell);


                


                cell = new PdfPCell(new Phrase(" ", font_bold));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.Colspan = 2;
                cell.BorderWidthTop = 0;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthBottom = 0;
                tDeliberation.AddCell(cell);

                cell = new PdfPCell(new Phrase("MENTION", font_bold));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                tDeliberation.AddCell(cell);

                cell = new PdfPCell(new Phrase(mention_1ere_session, font_bold));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                tDeliberation.AddCell(cell);

                cell = new PdfPCell(new Phrase(mention_2eme_session, font_bold));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                tDeliberation.AddCell(cell);

                cell = new PdfPCell(new Phrase(" ", font_bold));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.Colspan = 2;
                cell.BorderWidthTop = 0;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthBottom = 0;
                tDeliberation.AddCell(cell);

                cell = new PdfPCell(new Phrase("DECISION", font_bold));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                tDeliberation.AddCell(cell);

                cell = new PdfPCell(new Phrase(decision_1ere_session, font_bold));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                tDeliberation.AddCell(cell);

                cell = new PdfPCell(new Phrase(decision_2eme_session, font_bold));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                tDeliberation.AddCell(cell);

                doc.Add(tDeliberation);*/

                PdfPTable tVisa = new PdfPTable(5);//Creer une table de 5 colonnes
                float[] colwithv = { 7f, 7f, 7f, 7f, 12f };//parametrer les domensions(largeur) de chacune des collonnes
                tVisa.SetWidths(colwithv);//appliquer ces dimenstions a l atable


                cell = new PdfPCell(new Phrase(" ", font_bold));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 5;
                cell.Rowspan = 2;
                tVisa.AddCell(cell);


                cell = new PdfPCell(new Phrase("\nVISA DU DECANAT", font_bold));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 2;
                tVisa.AddCell(cell);

                cell = new PdfPCell(new Phrase("", font_bold));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 2;
                tVisa.AddCell(cell);

                string dat = "Fait à " + siege + " ,le " + DateTime.Today.Date.ToShortDateString();
                cell = new PdfPCell(new Phrase(dat + "\n Le Directeur des Services Academiques", font_bold));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                tVisa.AddCell(cell);

                Paragraph pVisa = new Paragraph();
                //parf.IndentationLeft = 240;
                pVisa.Alignment = Element.ALIGN_CENTER;
                //pVisa.SpacingAfter = 6;
                pVisa.SpacingBefore = 8;
                pVisa.Add(tVisa);
                //doc.Add(pVisa);

                string rqto = "INSERT INTO signataire_document_delivre(id_document, id_annee,id_etudiant,date) VALUES (@id_document, @id_annee,@id_etudiant,@date)";
                MySqlCommand cmdo = new MySqlCommand(rqto, conn);
                cmdo.Parameters.AddWithValue("@id_etudiant", id_etudiant);
                cmdo.Parameters.AddWithValue("@id_document", 5);
                cmdo.Parameters.AddWithValue("@id_annee", id_annee);
                cmdo.Parameters.AddWithValue("@date", DateTime.Today.Date.ToShortDateString());
                cmdo.ExecuteNonQuery();

                wri.PageEvent = new Foot();
                doc.Close();
                System.Diagnostics.Process.Start(outputFile);
                conn.Close();

            }
            catch (Exception ex)
            {
                //MessageBox.Show(ex.Message);
            }
        }


        public static double moyenne_1 = 0, moyenne_2 = 0, moyenne_3 = 0, moyenne_total = 0;
        public static int credit_1 = 0, credit_2 = 0, credit_3 = 0, credit_total = 0;
        /*public void Bulletin_Combine(int id_etu)
        {
            Create_Folder();

            int id_etudiant = id_etu;

            try
            {
                conn = new MySqlConnection(Authentification.MyString);
                conn.Open();
                DateTime dt = DateTime.Now;
                int annee = dt.Year;
                int mois = dt.Month;
                int jour = dt.Day;
                int heure = dt.Hour;
                int min = dt.Minute;
                int sec = dt.Month;
                string date = jour + "-" + mois + "-" + annee + "_" + heure + "-" + min + "-" + sec;

                iTextSharp.text.Document doc = new iTextSharp.text.Document(PageSize.A4, 0, 0, 10, 5);
                string docname = "BC_" + date + ".pdf";
                string outputFile = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.Desktop), @"BMDSys", docname);
                FileStream fs = new FileStream(outputFile, FileMode.Create, FileAccess.Write, FileShare.None);
                PdfWriter wri = PdfWriter.GetInstance(doc, fs);
                doc.Open();


                iTextSharp.text.pdf.BaseFont bfTimes = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, false);

                iTextSharp.text.Font header1 = new iTextSharp.text.Font(bfTimes, 10, iTextSharp.text.Font.BOLD, iTextSharp.text.BaseColor.BLACK);
                iTextSharp.text.Font header2 = new iTextSharp.text.Font(bfTimes, 8, iTextSharp.text.Font.BOLD, iTextSharp.text.BaseColor.BLACK);

                iTextSharp.text.Font headre3 = new iTextSharp.text.Font(bfTimes, 6, iTextSharp.text.Font.BOLD, iTextSharp.text.BaseColor.BLACK);
                iTextSharp.text.Font header4 = new iTextSharp.text.Font(bfTimes, 6, iTextSharp.text.Font.NORMAL, iTextSharp.text.BaseColor.BLACK);
                iTextSharp.text.Font timesunderlined = new iTextSharp.text.Font(bfTimes, 7, iTextSharp.text.Font.BOLD | iTextSharp.text.Font.UNDERLINE, BaseColor.BLACK);



                PdfPCell cell = new PdfPCell(new Phrase(""));

                PdfPTable table = new PdfPTable(5);//Creer une table de 5 colonnes
                float[] colwith1 = { 10f, 7f, 7f, 7f, 10f };//parametrer les domensions(largeur) de chacune des collonnes
                table.SetWidths(colwith1);//appliquer ces dimenstions a l atable

                string universite = Load_Institution(conn);
                string coordonee = Load_Adress(conn);
                string value = coordonee;
                string[] opp = value.Split('-');
                site = opp[0];
                siege = opp[1];
                telephone = opp[2];
                b_postale = opp[3];

                iTextSharp.text.Image myImage1 = Class_Reports.Get_LogoImage(conn);
                cell = new PdfPCell(myImage1);
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 2;
                cell.Rowspan = 5;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(" ", header2));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 3;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(" ", header2));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 3;
                table.AddCell(cell);



                cell = new PdfPCell(new Phrase(universite, header2));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidth = 0;
                cell.Colspan = 2;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(" ", header2));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidth = 0;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(b_postale, header2));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidth = 0;
                cell.Colspan = 2;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(" ", header2));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidth = 0;
                table.AddCell(cell);


                cell = new PdfPCell(new Phrase(e_bulletin_combine.faculte, header2));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidth = 0;
                cell.Colspan = 2;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(" ", header2));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidth = 0;
                table.AddCell(cell);




                doc.Add(table);

                iTextSharp.text.Paragraph txt_t = new iTextSharp.text.Paragraph(" ", header2);
                txt_t.Alignment = Element.ALIGN_CENTER;
                txt_t.SpacingBefore = 10;
                txt_t.SpacingAfter = 10;
                doc.Add(txt_t);


                PdfPTable taba = new PdfPTable(4);//Creer une table de 5 colonnes
                float[] coltaba = { 5f, 12f, 8f, 12f };//parametrer les domensions(largeur) de chacune des collonnes
                taba.SetWidths(coltaba);

                cell = new PdfPCell(new Phrase("Nom et Prénom", header2));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);

                cell = new PdfPCell(new Phrase(": " + e_bulletin_combine.nomEtudiant, header2));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);


                cell = new PdfPCell(new Phrase("Département", header2));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);

                cell = new PdfPCell(new Phrase(": " + e_bulletin_combine.departement, header2));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);


                cell = new PdfPCell(new Phrase("Matricule", header2));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);

                cell = new PdfPCell(new Phrase(": " + e_bulletin_combine.matricule, header2));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);

                cell = new PdfPCell(new Phrase("Filière/Option ", header2));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);

                cell = new PdfPCell(new Phrase(": ", header2));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);


                cell = new PdfPCell(new Phrase("Cycle", header2));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);

                cell = new PdfPCell(new Phrase(": BACCALAUREAT", header2));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);



                cell = new PdfPCell(new Phrase(" ", header2));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                cell.Colspan = 2;
                taba.AddCell(cell);

                doc.Add(taba);


                int nbre = 0;
                string code = "";
                string annee_header = "";

                string req = "SELECT COUNT(*) FROM signataire_document_delivre";
                MySqlCommand com = new MySqlCommand(req, conn);
                int nbre_livre = Convert.ToInt32(com.ExecuteScalar());
                if (nbre_livre > 0)
                {
                    nbre = nbre_livre + 1;
                }
                else
                {
                    nbre = nbre + 1;
                }

                string sla = "SELECT annee  FROM annee WHERE etat_annee=@etat_annee";
                MySqlCommand cma = new MySqlCommand(sla, conn);
                cma.Parameters.AddWithValue("@etat_annee", "Encours");
                MySqlDataReader da = cma.ExecuteReader();
                while (da.Read())
                {
                    annee_header = da.GetString(0);
                }
                da.Close();

                code = nbre + "/" + annee_header;


                iTextSharp.text.Paragraph txt_titre1 = new iTextSharp.text.Paragraph("BULLETIN DE FIN DE CYCLE N° " + code, timesunderlined);
                txt_titre1.Alignment = Element.ALIGN_CENTER;
                txt_titre1.SpacingBefore = 10;
                txt_titre1.SpacingAfter = 10;
                doc.Add(txt_titre1);


                //PdfPCell cell = new PdfPCell(new Phrase(""));
                PdfPTable tab = new PdfPTable(5);
                float[] colwiths = { 85f, 2f, 85f, 2f, 85f };
                tab.SetWidths(colwiths);

                cell = new PdfPCell(new Phrase("BAC I", header1));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                cell.FixedHeight = 16f;
                tab.AddCell(cell);

                cell = new PdfPCell(new Phrase(" ", header2));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                tab.AddCell(cell);

                cell = new PdfPCell(new Phrase("BAC II", header1));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                cell.FixedHeight = 16f;
                tab.AddCell(cell);

                cell = new PdfPCell(new Phrase(" ", header2));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                tab.AddCell(cell);

                cell = new PdfPCell(new Phrase("BAC III", header1));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                cell.FixedHeight = 16f;
                tab.AddCell(cell);

                int id_annee_1 = 0, id_annee_2 = 0, id_annee_3 = 0;
                string annee_1 = "", annee_2 = "", annee_3 = "";

                int id_faculte_1 = 0, id_faculte_2 = 0, id_faculte_3 = 0;
                int id_departement_1 = 0, id_departement_2 = 0, id_departement_3 = 0;
                int id_classe_1 = 0, id_classe_2 = 0, id_classe_3 = 0;

                string[] Annee_ID, Annee_Nom, Faculte_ID, Departement_ID, Classe_ID;





                string[] SemestreArray_1 = new string[2] { "1er Semestre : Année Académique ", "2ème Semestre : Année Académique " };
                string[] SemestreArray_2 = new string[2] { "3ème Semestre : Année Académique ", "4ème Semestre : Année Académique " };
                string[] SemestreArray_3 = new string[2] { "5ème Semestre : Année Académique ", "6ème Semestre : Année Académique " };

                string[] SemestreID = new string[2] { "1", "2" };

                string sq1 = "SELECT COUNT(DISTINCT deliberation.id_annee)" +
                    " FROM deliberation INNER JOIN deliberation_condition ON deliberation.id_decision = deliberation_condition.id_decision" +
                    " WHERE deliberation.id_etudiant=@id_etudiant AND deliberation_condition.id_finalite=@id_finalite";
                MySqlCommand cmd1 = new MySqlCommand(sq1, conn);
                cmd1.Parameters.AddWithValue("@id_etudiant", id_etudiant);
                cmd1.Parameters.AddWithValue("@id_finalite", 1);
                int nbre_annee = Convert.ToInt32(cmd1.ExecuteScalar());
                Annee_ID = new string[nbre_annee];
                Annee_Nom = new string[nbre_annee];
                if (nbre_annee == 3)
                {
                    Faculte_ID = new string[3];
                    Departement_ID = new string[3];
                    Classe_ID = new string[3];

                    string sq2 = "SELECT DISTINCT deliberation.id_annee, annee.annee" +
                    " FROM (deliberation INNER JOIN deliberation_condition ON deliberation.id_decision = deliberation_condition.id_decision) INNER JOIN annee ON deliberation.id_annee = annee.id_annee" +
                    " WHERE deliberation.id_etudiant=@id_etudiant AND deliberation_condition.id_finalite=@id_finalite ORDER BY deliberation.id_annee";
                    MySqlCommand cmd2 = new MySqlCommand(sq2, conn);
                    cmd2.Parameters.AddWithValue("@id_etudiant", id_etudiant);
                    cmd2.Parameters.AddWithValue("@id_finalite", 1);
                    MySqlDataReader dr2 = cmd2.ExecuteReader();
                    int b = 0;
                    while (dr2.Read())
                    {
                        Annee_ID[b] = string.Format("{0}", dr2.GetInt32(0).ToString());
                        Annee_Nom[b] = string.Format("{0}", dr2.GetString(1));
                        b++;
                    }
                    dr2.Close();

                    id_annee_1 = Convert.ToInt32(Annee_ID[0]);
                    id_annee_2 = Convert.ToInt32(Annee_ID[1]);
                    id_annee_3 = Convert.ToInt32(Annee_ID[2]);

                    annee_1 = Annee_Nom[0];
                    annee_2 = Annee_Nom[1];
                    annee_3 = Annee_Nom[2];


                    for (int year = 0; year < nbre_annee; year++)
                    {
                        ////MessageBox.Show(Annee_ID[year]);
                        string sq3 = "SELECT DISTINCT deliberation.id_faculte, deliberation.id_departement, deliberation.id_classe" +
                            " FROM deliberation INNER JOIN deliberation_condition ON deliberation.id_decision = deliberation_condition.id_decision" +
                            " WHERE deliberation.id_etudiant=@id_etudiant AND deliberation_condition.id_finalite=@id_finalite AND deliberation.id_annee=@id_annee";
                        MySqlCommand cmd3 = new MySqlCommand(sq3, conn);
                        cmd3.Parameters.AddWithValue("@id_etudiant", id_etudiant);
                        cmd3.Parameters.AddWithValue("@id_finalite", 1);
                        cmd3.Parameters.AddWithValue("@id_annee", Convert.ToInt32(Annee_ID[year]));
                        MySqlDataReader dr3 = cmd3.ExecuteReader();
                        int a = 0;
                        while (dr3.Read())
                        {
                            Faculte_ID[a] = string.Format("{0}", dr3.GetInt32(0).ToString());
                            Departement_ID[a] = string.Format("{0}", dr3.GetInt32(1).ToString());
                            Classe_ID[a] = string.Format("{0}", dr3.GetInt32(2).ToString());
                            ////MessageBox.Show(Annee_ID[year] + "-" + Faculte_ID[a] + "-" + Departement_ID[a] + "-" + Classe_ID[a]);
                            switch (year)
                            {
                                case 0:
                                    id_faculte_1 = Convert.ToInt32(Faculte_ID[a]);
                                    id_departement_1 = Convert.ToInt32(Departement_ID[a]);
                                    id_classe_1 = Convert.ToInt32(Classe_ID[a]);
                                    break;
                                case 1:
                                    id_faculte_2 = Convert.ToInt32(Faculte_ID[a]);
                                    id_departement_2 = Convert.ToInt32(Departement_ID[a]);
                                    id_classe_2 = Convert.ToInt32(Classe_ID[a]);
                                    break;
                                case 2:
                                    id_faculte_3 = Convert.ToInt32(Faculte_ID[a]);
                                    id_departement_3 = Convert.ToInt32(Departement_ID[a]);
                                    id_classe_3 = Convert.ToInt32(Classe_ID[a]);
                                    break;
                                default:
                                    break;
                            }
                            a++;
                        }
                        dr3.Close();
                    }
                    ////MessageBox.Show(id_faculte_1 + "-" + id_departement_1 + "-" + id_classe_1 + "\n" + id_faculte_2 + "-" + id_departement_2 + "-" + id_classe_2 + "\n" + id_faculte_3 + "-" + id_departement_3 + "-" + id_classe_3);
                }


                //=====================================SOUTS_TABLE 1==========================================================================

                PdfPTable sous_table_1 = get_BAC_1(id_etudiant, conn, headre3, header4, cell, id_annee_1, annee_1, id_faculte_1, id_departement_1, id_classe_1, SemestreArray_1, SemestreID);

                cell = new PdfPCell(new Phrase(" ", header1));
                cell.AddElement(sous_table_1);
                cell.BorderWidth = 0;
                tab.AddCell(cell);



                cell = new PdfPCell(new Phrase(" ", header2));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidth = 0;
                tab.AddCell(cell);



                PdfPTable sous_table_2 = get_BAC_2(id_etudiant, conn, headre3, header4, cell, id_annee_2, annee_2, id_faculte_2, id_departement_2, id_classe_2, SemestreArray_2, SemestreID);
                cell = new PdfPCell(new Phrase(" ", header1));
                cell.AddElement(sous_table_2);
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                tab.AddCell(cell);

                cell = new PdfPCell(new Phrase(" ", header2));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                tab.AddCell(cell);



                //=====================================SOUTS_TABLE 3==========================================================================



                PdfPTable sous_table_3 = get_BAC_3(id_etudiant, conn, headre3, header4, cell, id_annee_3, annee_3, id_faculte_3, id_departement_3, id_classe_3, SemestreArray_3, SemestreID);
                cell = new PdfPCell(new Phrase(" ", header1));
                cell.AddElement(sous_table_3);
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                tab.AddCell(cell);


                cell = new PdfPCell(new Phrase(" ", header1));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 5;
                tab.AddCell(cell);

                cell = new PdfPCell(new Phrase(" ", header1));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 4;
                tab.AddCell(cell);


                PdfPCell sous_cell_1 = new PdfPCell(new Phrase(""));
                PdfPTable sous_table_0 = new PdfPTable(4);
                float[] withs_1 = { 60f, 20f, 20f, 60f };
                sous_table_0.SetWidths(withs_1);
                sous_table_0.WidthPercentage = 100;

                

                sous_cell_1 = new PdfPCell(new Phrase("Total crédits", headre3));
                sous_cell_1.HorizontalAlignment = Element.ALIGN_LEFT;
                sous_cell_1.Colspan = 3;
                sous_table_0.AddCell(sous_cell_1);

                int tot_cred = credit_1 + credit_2 + credit_3;
                int total_ponderee = tot_cred * 20;
                double moyenn_pondere = moyenne_1 + moyenne_2 + moyenne_3;
                double prc = moyenn_pondere * 100 / total_ponderee;
                string mention = " ";
                if (prc < 60)
                    mention = "Passable";
                else if (prc >= 60 && prc < 70)
                    mention = "Satisfaction";
                else if (prc >= 70 && prc < 80)
                    mention = "Distinction";
                else if (prc >= 80 && prc < 90)
                    mention = "Grade Distinction";

                sous_cell_1 = new PdfPCell(new Phrase(tot_cred.ToString(), headre3));
                sous_cell_1.HorizontalAlignment = Element.ALIGN_CENTER;
                sous_table_0.AddCell(sous_cell_1);

                sous_cell_1 = new PdfPCell(new Phrase("Total général", headre3));
                sous_cell_1.HorizontalAlignment = Element.ALIGN_LEFT;
                sous_cell_1.Colspan = 3;
                sous_table_0.AddCell(sous_cell_1);

                sous_cell_1 = new PdfPCell(new Phrase(total_ponderee.ToString("#.##"), headre3));
                sous_cell_1.HorizontalAlignment = Element.ALIGN_CENTER;
                sous_table_0.AddCell(sous_cell_1);
                sous_cell_1 = new PdfPCell(new Phrase("Moyenne pondérée du cycle", headre3));
                sous_cell_1.HorizontalAlignment = Element.ALIGN_LEFT;
                sous_cell_1.Colspan = 3;
                sous_table_0.AddCell(sous_cell_1);

                sous_cell_1 = new PdfPCell(new Phrase(moyenn_pondere.ToString("#.##"), headre3));
                sous_cell_1.HorizontalAlignment = Element.ALIGN_CENTER;
                sous_table_0.AddCell(sous_cell_1);
                sous_cell_1 = new PdfPCell(new Phrase("Pourcentage du cycle", headre3));
                sous_cell_1.HorizontalAlignment = Element.ALIGN_LEFT;
                sous_cell_1.Colspan = 3;
                sous_table_0.AddCell(sous_cell_1);

                sous_cell_1 = new PdfPCell(new Phrase(prc.ToString("#.##"), headre3));
                sous_cell_1.HorizontalAlignment = Element.ALIGN_CENTER;
                sous_table_0.AddCell(sous_cell_1);
                sous_cell_1 = new PdfPCell(new Phrase("Mention", headre3));
                sous_cell_1.HorizontalAlignment = Element.ALIGN_LEFT;
                sous_cell_1.Colspan = 3;
                sous_table_0.AddCell(sous_cell_1);

                sous_cell_1 = new PdfPCell(new Phrase(mention, headre3));
                sous_cell_1.HorizontalAlignment = Element.ALIGN_CENTER;
                sous_table_0.AddCell(sous_cell_1);

                cell = new PdfPCell(new Phrase(" ", header1));
                cell.AddElement(sous_table_0);
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                tab.AddCell(cell);

                doc.Add(tab);




                PdfPTable tVisa = new PdfPTable(5);//Creer une table de 5 colonnes
                float[] colwithv = { 7f, 7f, 7f, 7f, 12f };//parametrer les domensions(largeur) de chacune des collonnes
                tVisa.SetWidths(colwithv);//appliquer ces dimenstions a l atable


                cell = new PdfPCell(new Phrase(" ", header2));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 5;
                cell.Rowspan = 2;
                tVisa.AddCell(cell);


                cell = new PdfPCell(new Phrase("LE DOYEN", header2));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 2;
                tVisa.AddCell(cell);

                cell = new PdfPCell(new Phrase("", header2));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 2;
                tVisa.AddCell(cell);

                string dat = "Fait à " + siege + ", le" + DateTime.Today.Date.ToShortDateString();
                cell = new PdfPCell(new Phrase(dat + "\nLe Directeur des Services Academiques ", header2));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                tVisa.AddCell(cell);

                Paragraph pVisa = new Paragraph();
                //parf.IndentationLeft = 240;
                pVisa.Alignment = Element.ALIGN_CENTER;
                //pVisa.SpacingAfter = 6;
                pVisa.SpacingBefore = 8;
                pVisa.Add(tVisa);
                doc.Add(tVisa);

                string rqto = "INSERT INTO signataire_document_delivre(id_document,id_etudiant,date) VALUES (@id_document,@id_etudiant,@date)";
                MySqlCommand cmdo = new MySqlCommand(rqto, conn);
                cmdo.Parameters.AddWithValue("@id_etudiant", id_etudiant);
                cmdo.Parameters.AddWithValue("@id_document", 6);
                cmdo.Parameters.AddWithValue("@date", DateTime.Today.Date.ToShortDateString());
                cmdo.ExecuteNonQuery();

                wri.PageEvent = new Foot();
                doc.Close();
                System.Diagnostics.Process.Start(outputFile);
                conn.Close();

            }
            catch (Exception ex)
            {
                //MessageBox.Show(ex.Message);
            }
        }*/
        private static PdfPTable get_BAC_1(int id_etudiant, MySqlConnection conn, iTextSharp.text.Font headre3, iTextSharp.text.Font header4, PdfPCell cell, int id_annee_1, string annee_1, int id_faculte_1, int id_departement_1, int id_classe_1, string[] SemestreArray_1, string[] SemestreID)
        {
            string[] UE_ID, UE_Array, UE_Code, Cours_ID, Cours_Nom, Cours_Credits;

            PdfPCell sous_cell_1 = new PdfPCell(new Phrase(""));
            PdfPTable sous_table_1 = new PdfPTable(4);
            float[] withs_1 = { 100f, 20f, 20f, 20f };
            sous_table_1.SetWidths(withs_1);
            sous_table_1.WidthPercentage = 100;

            sous_cell_1 = new PdfPCell(new Phrase("Eléments constitutifs des Unités d'Enseignement", headre3));
            sous_cell_1.HorizontalAlignment = Element.ALIGN_LEFT;
            sous_table_1.AddCell(sous_cell_1);

            sous_cell_1 = new PdfPCell(new Phrase("Crédits", headre3));
            sous_cell_1.Rotation = 90;
            sous_cell_1.HorizontalAlignment = Element.ALIGN_LEFT;
            sous_table_1.AddCell(sous_cell_1);

            sous_cell_1 = new PdfPCell(new Phrase("Note/20", headre3));
            sous_cell_1.Rotation = 90;
            sous_cell_1.HorizontalAlignment = Element.ALIGN_LEFT;
            sous_table_1.AddCell(sous_cell_1);

            sous_cell_1 = new PdfPCell(new Phrase("Note\nPondérée", headre3));
            sous_cell_1.Rotation = 90;
            sous_cell_1.HorizontalAlignment = Element.ALIGN_LEFT;
            sous_table_1.AddCell(sous_cell_1);

            int id_annee = id_annee_1;
            int id_faculte = id_faculte_1;
            int id_departement = id_departement_1;
            int id_classe = id_classe_1;

            int creditsAnnuel = 0;
            for (int i = 0; i < 2; i++)
            {
                sous_cell_1 = new PdfPCell(new Phrase(SemestreArray_1[i] + "" + annee_1, headre3));
                sous_cell_1.HorizontalAlignment = Element.ALIGN_CENTER;
                sous_cell_1.BackgroundColor = BaseColor.LIGHT_GRAY;
                sous_cell_1.Colspan = 4;
                cell.FixedHeight = 15f;
                sous_table_1.AddCell(sous_cell_1);

                string sq4 = "SELECT COUNT(DISTINCT id_unite) FROM unite WHERE id_classe=@idcl AND id_departement=@id_departement AND id_faculte=@id_faculte AND id_annee=@id_annee AND id_semestre=@id_semestre";
                MySqlCommand cmd4 = new MySqlCommand(sq4, conn);
                cmd4.Parameters.AddWithValue("@idcl", id_classe);
                cmd4.Parameters.AddWithValue("@id_departement", id_departement);
                cmd4.Parameters.AddWithValue("@id_faculte", id_faculte);
                cmd4.Parameters.AddWithValue("@id_annee", id_annee);
                cmd4.Parameters.AddWithValue("@id_semestre", Convert.ToInt32(SemestreID[i]));
                int nbre_ue = Convert.ToInt32(cmd4.ExecuteScalar());

                UE_ID = new string[nbre_ue];
                UE_Array = new string[nbre_ue];
                UE_Code = new string[nbre_ue];

                string sq5 = "SELECT DISTINCT id_unite,unite,code_unite FROM unite WHERE id_classe=@idcl AND id_departement=@id_departement AND id_faculte=@id_faculte AND id_annee=@id_annee AND id_semestre=@id_semestre";
                MySqlCommand cmd5 = new MySqlCommand(sq5, conn);
                cmd5.Parameters.AddWithValue("@id_faculte", id_faculte);
                cmd5.Parameters.AddWithValue("@id_annee", id_annee);
                cmd5.Parameters.AddWithValue("@id_departement", id_departement);
                cmd5.Parameters.AddWithValue("@idcl", id_classe);
                cmd5.Parameters.AddWithValue("@id_semestre", Convert.ToInt32(SemestreID[i]));
                MySqlDataReader dr5 = cmd5.ExecuteReader();
                int j = 0;
                while (dr5.Read())
                {
                    UE_ID[j] = string.Format("{0}", dr5.GetInt32(0).ToString());
                    UE_Array[j] = string.Format("{0}", dr5.GetString(1));
                    UE_Code[j] = string.Format("{0}", dr5.GetString(2));
                    j++;
                }
                dr5.Close();

                double ue_pondere = 0;
                int ue_tot_credit = 0;
                for (int unite = 0; unite < nbre_ue; unite++)
                {
                    sous_cell_1 = new PdfPCell(new Phrase(UE_Code[unite] + ":" + UE_Array[unite], headre3));
                    sous_cell_1.HorizontalAlignment = Element.ALIGN_LEFT;
                    sous_table_1.AddCell(sous_cell_1);

                    ue_pondere = 0;
                    ue_tot_credit = 0;
                    string sq6 = "SELECT COUNT(DISTINCT id_cours) FROM cours WHERE id_unite=@idue";
                    MySqlCommand cm6 = new MySqlCommand(sq6, conn);
                    cm6.Parameters.AddWithValue("@idue", Convert.ToInt32(UE_ID[unite]));
                    int nbre_ecue = Convert.ToInt32(cm6.ExecuteScalar());

                    Cours_ID = new string[nbre_ecue];
                    Cours_Credits = new string[nbre_ecue];
                    Cours_Nom = new string[nbre_ecue];

                    string sq7 = "SELECT DISTINCT id_cours,credits,cours FROM cours WHERE id_unite=@idue";
                    MySqlCommand cmd7 = new MySqlCommand(sq7, conn);
                    cmd7.Parameters.AddWithValue("@idue", Convert.ToInt32(UE_ID[unite]));
                    MySqlDataReader dr7 = cmd7.ExecuteReader();
                    int n = 0;
                    while (dr7.Read())
                    {
                        Cours_ID[n] = string.Format("{0}", dr7.GetInt32(0).ToString());
                        Cours_Credits[n] = string.Format("{0}", dr7.GetInt32(1).ToString());
                        Cours_Nom[n] = string.Format("{0}", dr7.GetString(2));
                        ue_tot_credit += Convert.ToInt32(Cours_Credits[n]);
                        creditsAnnuel += Convert.ToInt32(Cours_Credits[n]);
                        n++;
                    }
                    dr7.Close();

                    for (int cours = 0; cours < nbre_ecue; cours++)
                    {
                        string sqs2 = "SELECT COUNT(*) FROM etudiant_note WHERE id_cours=@id_cours AND id_etudiant=@id_etudiant AND id_session=@id_session";
                        MySqlCommand cqs2 = new MySqlCommand(sqs2, conn);
                        cqs2.Parameters.AddWithValue("@id_etudiant", id_etudiant);
                        cqs2.Parameters.AddWithValue("@id_session", 2);
                        cqs2.Parameters.AddWithValue("@id_cours", Convert.ToInt32(Cours_ID[cours]));
                        int exist_en_2eme_session = Convert.ToInt32(cqs2.ExecuteScalar());
                        if (exist_en_2eme_session == 0)
                        {
                            string sq9 = "SELECT note FROM etudiant_note  WHERE id_etudiant=@id_etudiant AND id_cours=@id_cours AND id_session=@id_session";
                            MySqlCommand cmd9 = new MySqlCommand(sq9, conn);
                            cmd9.Parameters.AddWithValue("@id_session", 1);
                            cmd9.Parameters.AddWithValue("@id_cours", Convert.ToInt32(Cours_ID[cours]));
                            cmd9.Parameters.AddWithValue("@id_etudiant", id_etudiant);
                            MySqlDataReader dr9 = cmd9.ExecuteReader();
                            while (dr9.Read())
                            {
                                ue_pondere += Convert.ToDouble(Cours_Credits[cours]) * Convert.ToDouble(dr9.GetString(0));
                            }
                            dr9.Close();
                        }
                        else
                        {
                            string sq9 = "SELECT note FROM etudiant_note  WHERE id_etudiant=@id_etudiant AND id_cours=@id_cours AND id_session=@id_session";
                            MySqlCommand cmd9 = new MySqlCommand(sq9, conn);
                            cmd9.Parameters.AddWithValue("@id_session", 2);
                            cmd9.Parameters.AddWithValue("@id_cours", Convert.ToInt32(Cours_ID[cours]));
                            cmd9.Parameters.AddWithValue("@id_etudiant", id_etudiant);
                            MySqlDataReader dr9 = cmd9.ExecuteReader();
                            while (dr9.Read())
                            {
                                ue_pondere += Convert.ToDouble(Cours_Credits[cours]) * Convert.ToDouble(dr9.GetString(0));
                            }
                            dr9.Close();
                        }
                    }

                    sous_cell_1 = new PdfPCell(new Phrase(ue_tot_credit.ToString(), headre3));
                    sous_cell_1.HorizontalAlignment = Element.ALIGN_CENTER;
                    sous_table_1.AddCell(sous_cell_1);

                    sous_cell_1 = new PdfPCell(new Phrase((ue_pondere / ue_tot_credit).ToString("#.#"), headre3));
                    sous_cell_1.HorizontalAlignment = Element.ALIGN_CENTER;
                    sous_table_1.AddCell(sous_cell_1);

                    sous_cell_1 = new PdfPCell(new Phrase(ue_pondere.ToString("#.#"), headre3));
                    sous_cell_1.HorizontalAlignment = Element.ALIGN_CENTER;
                    sous_table_1.AddCell(sous_cell_1);

                    for (int cours = 0; cours < nbre_ecue; cours++)
                    {
                        sous_cell_1 = new PdfPCell(new Phrase(Cours_Nom[cours], header4));
                        sous_cell_1.HorizontalAlignment = Element.ALIGN_LEFT;
                        sous_table_1.AddCell(sous_cell_1);

                        sous_cell_1 = new PdfPCell(new Phrase(Cours_Credits[cours], header4));
                        sous_cell_1.HorizontalAlignment = Element.ALIGN_CENTER;
                        sous_table_1.AddCell(sous_cell_1);

                        string sqs2 = "SELECT COUNT(*) FROM etudiant_note WHERE id_cours=@id_cours AND id_etudiant=@id_etudiant AND id_session=@id_session";
                        MySqlCommand cqs2 = new MySqlCommand(sqs2, conn);
                        cqs2.Parameters.AddWithValue("@id_etudiant", id_etudiant);
                        cqs2.Parameters.AddWithValue("@id_session", 2);
                        cqs2.Parameters.AddWithValue("@id_cours", Convert.ToInt32(Cours_ID[cours]));
                        int exist_en_2eme_session = Convert.ToInt32(cqs2.ExecuteScalar());
                        if (exist_en_2eme_session == 0)
                        {
                            string sq9 = "SELECT note FROM etudiant_note  WHERE id_etudiant=@id_etudiant AND id_cours=@id_cours AND id_session=@id_session";
                            MySqlCommand cmd9 = new MySqlCommand(sq9, conn);
                            cmd9.Parameters.AddWithValue("@id_session", 1);
                            cmd9.Parameters.AddWithValue("@id_cours", Convert.ToInt32(Cours_ID[cours]));
                            cmd9.Parameters.AddWithValue("@id_etudiant", id_etudiant);
                            MySqlDataReader dr9 = cmd9.ExecuteReader();
                            while (dr9.Read())
                            {
                                sous_cell_1 = new PdfPCell(new Phrase(Convert.ToDouble(dr9.GetString(0)).ToString("#.##"), header4));
                                sous_cell_1.HorizontalAlignment = Element.ALIGN_CENTER;
                                sous_table_1.AddCell(sous_cell_1);

                                sous_cell_1 = new PdfPCell(new Phrase((Convert.ToDouble(Cours_Credits[cours]) * Convert.ToDouble(dr9.GetString(0))).ToString("#.##"), header4));
                                sous_cell_1.HorizontalAlignment = Element.ALIGN_CENTER;
                                sous_table_1.AddCell(sous_cell_1);
                            }
                            dr9.Close();
                        }
                        else
                        {
                            string sq9 = "SELECT note FROM etudiant_note  WHERE id_etudiant=@id_etudiant AND id_cours=@id_cours AND id_session=@id_session";
                            MySqlCommand cmd9 = new MySqlCommand(sq9, conn);
                            cmd9.Parameters.AddWithValue("@id_session", 2);
                            cmd9.Parameters.AddWithValue("@id_cours", Convert.ToInt32(Cours_ID[cours]));
                            cmd9.Parameters.AddWithValue("@id_etudiant", id_etudiant);
                            MySqlDataReader dr9 = cmd9.ExecuteReader();
                            while (dr9.Read())
                            {
                                sous_cell_1 = new PdfPCell(new Phrase(Convert.ToDouble(dr9.GetString(0)).ToString("#.##"), header4));
                                sous_cell_1.HorizontalAlignment = Element.ALIGN_CENTER;
                                sous_table_1.AddCell(sous_cell_1);

                                sous_cell_1 = new PdfPCell(new Phrase((Convert.ToDouble(Cours_Credits[cours]) * Convert.ToDouble(dr9.GetString(0))).ToString("#.##"), header4));
                                sous_cell_1.HorizontalAlignment = Element.ALIGN_CENTER;
                                sous_table_1.AddCell(sous_cell_1);
                            }
                            dr9.Close();
                        }
                    }

                }
            }

            double pourcentage = 0.0, moyenne_ponderee = 0.0;
            sous_cell_1 = new PdfPCell(new Phrase("Total", headre3));
            sous_cell_1.HorizontalAlignment = Element.ALIGN_LEFT;
            sous_table_1.AddCell(sous_cell_1);

            sous_cell_1 = new PdfPCell(new Phrase(creditsAnnuel.ToString(), headre3));
            sous_cell_1.HorizontalAlignment = Element.ALIGN_CENTER;
            sous_table_1.AddCell(sous_cell_1);

            sous_cell_1 = new PdfPCell(new Phrase(" ", headre3));
            sous_cell_1.HorizontalAlignment = Element.ALIGN_CENTER;
            sous_table_1.AddCell(sous_cell_1);

            sous_cell_1 = new PdfPCell(new Phrase((creditsAnnuel * 20).ToString(), headre3));
            sous_cell_1.HorizontalAlignment = Element.ALIGN_CENTER;
            sous_table_1.AddCell(sous_cell_1);

            string sqf = "SELECT COUNT(*) FROM deliberation WHERE id_etudiant=@id_etudiant AND id_session=@id_session AND id_classe=@id_classe AND id_departement=@id_departement AND id_faculte=@id_faculte AND id_annee=@id_annee ";
            MySqlCommand cqf = new MySqlCommand(sqf, conn);
            cqf.Parameters.AddWithValue("@id_etudiant", id_etudiant);
            cqf.Parameters.AddWithValue("@id_session", 2);
            cqf.Parameters.AddWithValue("@id_classe", id_classe);
            cqf.Parameters.AddWithValue("@id_departement", id_departement);
            cqf.Parameters.AddWithValue("@id_faculte", id_faculte);
            cqf.Parameters.AddWithValue("@id_annee", id_annee);
            int exist_en_2emeS = Convert.ToInt32(cqf.ExecuteScalar());
            if (exist_en_2emeS == 0)
            {

                string sq_1 = "SELECT pourcentage FROM deliberation WHERE id_annee=@id_annee AND id_faculte=@id_faculte AND id_departement=@id_departement AND id_classe=@id_classe AND id_etudiant=@idetudiant AND id_session=@id_session";
                MySqlCommand cm_1 = new MySqlCommand(sq_1, conn);
                cm_1.Parameters.AddWithValue("@id_classe", id_classe);
                cm_1.Parameters.AddWithValue("@id_departement", id_departement);
                cm_1.Parameters.AddWithValue("@id_faculte", id_faculte);
                cm_1.Parameters.AddWithValue("@id_annee", id_annee);
                cm_1.Parameters.AddWithValue("@idetudiant", id_etudiant);
                cm_1.Parameters.AddWithValue("@id_session", 1);
                MySqlDataReader dr_1 = cm_1.ExecuteReader();
                while (dr_1.Read())
                {
                    pourcentage = dr_1.GetDouble(0);
                    moyenne_ponderee = pourcentage * creditsAnnuel * 20 / 100;
                }
                dr_1.Close();
            }
            else
            {
                string sq_1 = "SELECT pourcentage FROM deliberation WHERE id_annee=@id_annee AND id_faculte=@id_faculte AND id_departement=@id_departement AND id_classe=@id_classe AND id_etudiant=@idetudiant AND id_session=@id_session";
                MySqlCommand cm_1 = new MySqlCommand(sq_1, conn);
                cm_1.Parameters.AddWithValue("@id_classe", id_classe);
                cm_1.Parameters.AddWithValue("@id_departement", id_departement);
                cm_1.Parameters.AddWithValue("@id_faculte", id_faculte);
                cm_1.Parameters.AddWithValue("@id_annee", id_annee);
                cm_1.Parameters.AddWithValue("@idetudiant", id_etudiant);
                cm_1.Parameters.AddWithValue("@id_session", 2);
                MySqlDataReader dr_1 = cm_1.ExecuteReader();
                while (dr_1.Read())
                {
                    pourcentage = dr_1.GetDouble(0);
                    moyenne_ponderee = pourcentage * creditsAnnuel * 20 / 100;
                }
                dr_1.Close();
            }
            moyenne_1 = moyenne_ponderee;
            credit_1 = creditsAnnuel;

            sous_cell_1 = new PdfPCell(new Phrase("Moyenne pondérée", headre3));
            sous_cell_1.HorizontalAlignment = Element.ALIGN_LEFT;
            sous_cell_1.Colspan = 3;
            sous_table_1.AddCell(sous_cell_1);

            sous_cell_1 = new PdfPCell(new Phrase(moyenne_ponderee.ToString("#.##"), headre3));
            sous_cell_1.HorizontalAlignment = Element.ALIGN_CENTER;
            sous_table_1.AddCell(sous_cell_1);

            sous_cell_1 = new PdfPCell(new Phrase("Pourcentage", headre3));
            sous_cell_1.HorizontalAlignment = Element.ALIGN_LEFT;
            sous_cell_1.Colspan = 3;
            sous_table_1.AddCell(sous_cell_1);

            sous_cell_1 = new PdfPCell(new Phrase(pourcentage.ToString("#.##"), headre3));
            sous_cell_1.HorizontalAlignment = Element.ALIGN_CENTER;
            sous_table_1.AddCell(sous_cell_1);
            return sous_table_1;
        }
        private static PdfPTable get_BAC_2(int id_etudiant, MySqlConnection conn, iTextSharp.text.Font headre3, iTextSharp.text.Font header4, PdfPCell cell, int id_annee_2, string annee_2, int id_faculte_2, int id_departement_2, int id_classe_2, string[] SemestreArray_2, string[] SemestreID)
        {
            string[] UE_ID, UE_Array, UE_Code, Cours_ID, Cours_Nom, Cours_Credits;

            PdfPCell sous_cell_2 = new PdfPCell(new Phrase(""));
            PdfPTable sous_table_2 = new PdfPTable(4);
            float[] withs_2 = { 95f, 20f, 20f, 25f };
            sous_table_2.SetWidths(withs_2);

            sous_cell_2 = new PdfPCell(new Phrase("Eléments constitutifs des Unités d'Enseignement", headre3));
            sous_cell_2.HorizontalAlignment = Element.ALIGN_LEFT;
            sous_table_2.AddCell(sous_cell_2);

            sous_cell_2 = new PdfPCell(new Phrase("Crédits", headre3));
            sous_cell_2.HorizontalAlignment = Element.ALIGN_LEFT;
            sous_cell_2.Rotation = 90;
            sous_table_2.AddCell(sous_cell_2);

            sous_cell_2 = new PdfPCell(new Phrase("Note/20", headre3));
            sous_cell_2.HorizontalAlignment = Element.ALIGN_LEFT;
            sous_cell_2.Rotation = 90;
            sous_table_2.AddCell(sous_cell_2);

            sous_cell_2 = new PdfPCell(new Phrase("Note\nPondérée", headre3));
            sous_cell_2.HorizontalAlignment = Element.ALIGN_LEFT;
            sous_cell_2.Rotation = 90;
            sous_table_2.AddCell(sous_cell_2);

            sous_table_2.WidthPercentage = 100;


            int id_annee = id_annee_2;
            int id_faculte = id_faculte_2;
            int id_departement = id_departement_2;
            int id_classe = id_classe_2;

            int creditsAnnuel = 0;
            for (int i = 0; i < 2; i++)
            {
                sous_cell_2 = new PdfPCell(new Phrase(SemestreArray_2[i] + "" + annee_2, headre3));
                sous_cell_2.HorizontalAlignment = Element.ALIGN_CENTER;
                sous_cell_2.BackgroundColor = BaseColor.LIGHT_GRAY;
                sous_cell_2.Colspan = 4;
                cell.FixedHeight = 15f;
                sous_table_2.AddCell(sous_cell_2);

                string sq4 = "SELECT COUNT(DISTINCT id_unite) FROM unite WHERE id_classe=@idcl AND id_departement=@id_departement AND id_faculte=@id_faculte AND id_annee=@id_annee AND id_semestre=@id_semestre";
                MySqlCommand cmd4 = new MySqlCommand(sq4, conn);
                cmd4.Parameters.AddWithValue("@idcl", id_classe);
                cmd4.Parameters.AddWithValue("@id_departement", id_departement);
                cmd4.Parameters.AddWithValue("@id_faculte", id_faculte);
                cmd4.Parameters.AddWithValue("@id_annee", id_annee);
                cmd4.Parameters.AddWithValue("@id_semestre", Convert.ToInt32(SemestreID[i]));
                int nbre_ue = Convert.ToInt32(cmd4.ExecuteScalar());

                UE_ID = new string[nbre_ue];
                UE_Array = new string[nbre_ue];
                UE_Code = new string[nbre_ue];

                string sq5 = "SELECT DISTINCT id_unite,unite,code_unite FROM unite WHERE id_classe=@idcl AND id_departement=@id_departement AND id_faculte=@id_faculte AND id_annee=@id_annee AND id_semestre=@id_semestre";
                MySqlCommand cmd5 = new MySqlCommand(sq5, conn);
                cmd5.Parameters.AddWithValue("@id_faculte", id_faculte);
                cmd5.Parameters.AddWithValue("@id_annee", id_annee);
                cmd5.Parameters.AddWithValue("@id_departement", id_departement);
                cmd5.Parameters.AddWithValue("@idcl", id_classe);
                cmd5.Parameters.AddWithValue("@id_semestre", Convert.ToInt32(SemestreID[i]));
                MySqlDataReader dr5 = cmd5.ExecuteReader();
                int j = 0;
                while (dr5.Read())
                {
                    UE_ID[j] = string.Format("{0}", dr5.GetInt32(0).ToString());
                    UE_Array[j] = string.Format("{0}", dr5.GetString(1));
                    UE_Code[j] = string.Format("{0}", dr5.GetString(2));
                    j++;
                }
                dr5.Close();

                double ue_pondere = 0;
                int ue_tot_credit = 0;
                for (int unite = 0; unite < nbre_ue; unite++)
                {
                    sous_cell_2 = new PdfPCell(new Phrase(UE_Code[unite] + ":" + UE_Array[unite], headre3));
                    sous_cell_2.HorizontalAlignment = Element.ALIGN_LEFT;
                    sous_table_2.AddCell(sous_cell_2);

                    ue_pondere = 0;
                    ue_tot_credit = 0;
                    string sq6 = "SELECT COUNT(DISTINCT id_cours) FROM cours WHERE id_unite=@idue";
                    MySqlCommand cm6 = new MySqlCommand(sq6, conn);
                    cm6.Parameters.AddWithValue("@idue", Convert.ToInt32(UE_ID[unite]));
                    int nbre_ecue = Convert.ToInt32(cm6.ExecuteScalar());

                    Cours_ID = new string[nbre_ecue];
                    Cours_Credits = new string[nbre_ecue];
                    Cours_Nom = new string[nbre_ecue];

                    string sq7 = "SELECT DISTINCT id_cours,credits,cours FROM cours WHERE id_unite=@idue";
                    MySqlCommand cmd7 = new MySqlCommand(sq7, conn);
                    cmd7.Parameters.AddWithValue("@idue", Convert.ToInt32(UE_ID[unite]));
                    MySqlDataReader dr7 = cmd7.ExecuteReader();
                    int n = 0;
                    while (dr7.Read())
                    {
                        Cours_ID[n] = string.Format("{0}", dr7.GetInt32(0).ToString());
                        Cours_Credits[n] = string.Format("{0}", dr7.GetInt32(1).ToString());
                        Cours_Nom[n] = string.Format("{0}", dr7.GetString(2));
                        ue_tot_credit += Convert.ToInt32(Cours_Credits[n]);
                        creditsAnnuel += Convert.ToInt32(Cours_Credits[n]);
                        n++;
                    }
                    dr7.Close();

                    for (int cours = 0; cours < nbre_ecue; cours++)
                    {
                        string sqs2 = "SELECT COUNT(*) FROM etudiant_note WHERE id_cours=@id_cours AND id_etudiant=@id_etudiant AND id_session=@id_session";
                        MySqlCommand cqs2 = new MySqlCommand(sqs2, conn);
                        cqs2.Parameters.AddWithValue("@id_etudiant", id_etudiant);
                        cqs2.Parameters.AddWithValue("@id_session", 2);
                        cqs2.Parameters.AddWithValue("@id_cours", Convert.ToInt32(Cours_ID[cours]));
                        int exist_en_2eme_session = Convert.ToInt32(cqs2.ExecuteScalar());
                        if (exist_en_2eme_session == 0)
                        {
                            string sq9 = "SELECT note FROM etudiant_note  WHERE id_etudiant=@id_etudiant AND id_cours=@id_cours AND id_session=@id_session";
                            MySqlCommand cmd9 = new MySqlCommand(sq9, conn);
                            cmd9.Parameters.AddWithValue("@id_session", 1);
                            cmd9.Parameters.AddWithValue("@id_cours", Convert.ToInt32(Cours_ID[cours]));
                            cmd9.Parameters.AddWithValue("@id_etudiant", id_etudiant);
                            MySqlDataReader dr9 = cmd9.ExecuteReader();
                            while (dr9.Read())
                            {
                                ue_pondere += Convert.ToDouble(Cours_Credits[cours]) * Convert.ToDouble(dr9.GetString(0));
                            }
                            dr9.Close();
                        }
                        else
                        {
                            string sq9 = "SELECT note FROM etudiant_note  WHERE id_etudiant=@id_etudiant AND id_cours=@id_cours AND id_session=@id_session";
                            MySqlCommand cmd9 = new MySqlCommand(sq9, conn);
                            cmd9.Parameters.AddWithValue("@id_session", 2);
                            cmd9.Parameters.AddWithValue("@id_cours", Convert.ToInt32(Cours_ID[cours]));
                            cmd9.Parameters.AddWithValue("@id_etudiant", id_etudiant);
                            MySqlDataReader dr9 = cmd9.ExecuteReader();
                            while (dr9.Read())
                            {
                                ue_pondere += Convert.ToDouble(Cours_Credits[cours]) * Convert.ToDouble(dr9.GetString(0));
                            }
                            dr9.Close();
                        }
                    }

                    sous_cell_2 = new PdfPCell(new Phrase(ue_tot_credit.ToString(), headre3));
                    sous_cell_2.HorizontalAlignment = Element.ALIGN_CENTER;
                    sous_table_2.AddCell(sous_cell_2);

                    sous_cell_2 = new PdfPCell(new Phrase((ue_pondere / ue_tot_credit).ToString("#.#"), headre3));
                    sous_cell_2.HorizontalAlignment = Element.ALIGN_CENTER;
                    sous_table_2.AddCell(sous_cell_2);

                    sous_cell_2 = new PdfPCell(new Phrase(ue_pondere.ToString("#.#"), headre3));
                    sous_cell_2.HorizontalAlignment = Element.ALIGN_CENTER;
                    sous_table_2.AddCell(sous_cell_2);

                    for (int cours = 0; cours < nbre_ecue; cours++)
                    {
                        sous_cell_2 = new PdfPCell(new Phrase(Cours_Nom[cours], header4));
                        sous_cell_2.HorizontalAlignment = Element.ALIGN_LEFT;
                        sous_table_2.AddCell(sous_cell_2);

                        sous_cell_2 = new PdfPCell(new Phrase(Cours_Credits[cours], header4));
                        sous_cell_2.HorizontalAlignment = Element.ALIGN_CENTER;
                        sous_table_2.AddCell(sous_cell_2);

                        string sqs2 = "SELECT COUNT(*) FROM etudiant_note WHERE id_cours=@id_cours AND id_etudiant=@id_etudiant AND id_session=@id_session";
                        MySqlCommand cqs2 = new MySqlCommand(sqs2, conn);
                        cqs2.Parameters.AddWithValue("@id_etudiant", id_etudiant);
                        cqs2.Parameters.AddWithValue("@id_session", 2);
                        cqs2.Parameters.AddWithValue("@id_cours", Convert.ToInt32(Cours_ID[cours]));
                        int exist_en_2eme_session = Convert.ToInt32(cqs2.ExecuteScalar());
                        if (exist_en_2eme_session == 0)
                        {
                            string sq9 = "SELECT note FROM etudiant_note  WHERE id_etudiant=@id_etudiant AND id_cours=@id_cours AND id_session=@id_session";
                            MySqlCommand cmd9 = new MySqlCommand(sq9, conn);
                            cmd9.Parameters.AddWithValue("@id_session", 1);
                            cmd9.Parameters.AddWithValue("@id_cours", Convert.ToInt32(Cours_ID[cours]));
                            cmd9.Parameters.AddWithValue("@id_etudiant", id_etudiant);
                            MySqlDataReader dr9 = cmd9.ExecuteReader();
                            while (dr9.Read())
                            {
                                sous_cell_2 = new PdfPCell(new Phrase(Convert.ToDouble(dr9.GetString(0)).ToString("#.##"), header4));
                                sous_cell_2.HorizontalAlignment = Element.ALIGN_CENTER;
                                sous_table_2.AddCell(sous_cell_2);

                                sous_cell_2 = new PdfPCell(new Phrase((Convert.ToDouble(Cours_Credits[cours]) * Convert.ToDouble(dr9.GetString(0))).ToString("#.##"), header4));
                                sous_cell_2.HorizontalAlignment = Element.ALIGN_CENTER;
                                sous_table_2.AddCell(sous_cell_2);
                            }
                            dr9.Close();
                        }
                        else
                        {
                            string sq9 = "SELECT note FROM etudiant_note  WHERE id_etudiant=@id_etudiant AND id_cours=@id_cours AND id_session=@id_session";
                            MySqlCommand cmd9 = new MySqlCommand(sq9, conn);
                            cmd9.Parameters.AddWithValue("@id_session", 2);
                            cmd9.Parameters.AddWithValue("@id_cours", Convert.ToInt32(Cours_ID[cours]));
                            cmd9.Parameters.AddWithValue("@id_etudiant", id_etudiant);
                            MySqlDataReader dr9 = cmd9.ExecuteReader();
                            while (dr9.Read())
                            {
                                sous_cell_2 = new PdfPCell(new Phrase(Convert.ToDouble(dr9.GetString(0)).ToString("#.##"), header4));
                                sous_cell_2.HorizontalAlignment = Element.ALIGN_CENTER;
                                sous_table_2.AddCell(sous_cell_2);

                                sous_cell_2 = new PdfPCell(new Phrase((Convert.ToDouble(Cours_Credits[cours]) * Convert.ToDouble(dr9.GetString(0))).ToString("#.##"), header4));
                                sous_cell_2.HorizontalAlignment = Element.ALIGN_CENTER;
                                sous_table_2.AddCell(sous_cell_2);
                            }
                            dr9.Close();
                        }
                    }

                }
            }

            double pourcentage = 0.0, moyenne_ponderee = 0.0;
            sous_cell_2 = new PdfPCell(new Phrase("Total", headre3));
            sous_cell_2.HorizontalAlignment = Element.ALIGN_LEFT;
            sous_table_2.AddCell(sous_cell_2);

            sous_cell_2 = new PdfPCell(new Phrase(creditsAnnuel.ToString(), headre3));
            sous_cell_2.HorizontalAlignment = Element.ALIGN_CENTER;
            sous_table_2.AddCell(sous_cell_2);

            sous_cell_2 = new PdfPCell(new Phrase(" ", headre3));
            sous_cell_2.HorizontalAlignment = Element.ALIGN_CENTER;
            sous_table_2.AddCell(sous_cell_2);

            sous_cell_2 = new PdfPCell(new Phrase((creditsAnnuel * 20).ToString(), headre3));
            sous_cell_2.HorizontalAlignment = Element.ALIGN_CENTER;
            sous_table_2.AddCell(sous_cell_2);

            string sqf = "SELECT COUNT(*) FROM deliberation WHERE id_etudiant=@id_etudiant AND id_session=@id_session AND id_classe=@id_classe AND id_departement=@id_departement AND id_faculte=@id_faculte AND id_annee=@id_annee ";
            MySqlCommand cqf = new MySqlCommand(sqf, conn);
            cqf.Parameters.AddWithValue("@id_etudiant", id_etudiant);
            cqf.Parameters.AddWithValue("@id_session", 2);
            cqf.Parameters.AddWithValue("@id_classe", id_classe);
            cqf.Parameters.AddWithValue("@id_departement", id_departement);
            cqf.Parameters.AddWithValue("@id_faculte", id_faculte);
            cqf.Parameters.AddWithValue("@id_annee", id_annee);
            int exist_en_2emeS = Convert.ToInt32(cqf.ExecuteScalar());
            if (exist_en_2emeS == 0)
            {

                string sq_1 = "SELECT pourcentage FROM deliberation WHERE id_annee=@id_annee AND id_faculte=@id_faculte AND id_departement=@id_departement AND id_classe=@id_classe AND id_etudiant=@idetudiant AND id_session=@id_session";
                MySqlCommand cm_1 = new MySqlCommand(sq_1, conn);
                cm_1.Parameters.AddWithValue("@id_classe", id_classe);
                cm_1.Parameters.AddWithValue("@id_departement", id_departement);
                cm_1.Parameters.AddWithValue("@id_faculte", id_faculte);
                cm_1.Parameters.AddWithValue("@id_annee", id_annee);
                cm_1.Parameters.AddWithValue("@idetudiant", id_etudiant);
                cm_1.Parameters.AddWithValue("@id_session", 1);
                MySqlDataReader dr_1 = cm_1.ExecuteReader();
                while (dr_1.Read())
                {
                    pourcentage = dr_1.GetDouble(0);
                    moyenne_ponderee = pourcentage * creditsAnnuel * 20 / 100;
                }
                dr_1.Close();
            }
            else
            {
                string sq_1 = "SELECT pourcentage FROM deliberation WHERE id_annee=@id_annee AND id_faculte=@id_faculte AND id_departement=@id_departement AND id_classe=@id_classe AND id_etudiant=@idetudiant AND id_session=@id_session";
                MySqlCommand cm_1 = new MySqlCommand(sq_1, conn);
                cm_1.Parameters.AddWithValue("@id_classe", id_classe);
                cm_1.Parameters.AddWithValue("@id_departement", id_departement);
                cm_1.Parameters.AddWithValue("@id_faculte", id_faculte);
                cm_1.Parameters.AddWithValue("@id_annee", id_annee);
                cm_1.Parameters.AddWithValue("@idetudiant", id_etudiant);
                cm_1.Parameters.AddWithValue("@id_session", 2);
                MySqlDataReader dr_1 = cm_1.ExecuteReader();
                while (dr_1.Read())
                {
                    pourcentage = dr_1.GetDouble(0);
                    moyenne_ponderee = pourcentage * creditsAnnuel * 20 / 100;
                }
                dr_1.Close();
            }
            moyenne_2 = moyenne_ponderee;
            credit_2 = creditsAnnuel;

            sous_cell_2 = new PdfPCell(new Phrase("Moyenne pondérée", headre3));
            sous_cell_2.HorizontalAlignment = Element.ALIGN_LEFT;
            sous_cell_2.Colspan = 3;
            sous_table_2.AddCell(sous_cell_2);

            sous_cell_2 = new PdfPCell(new Phrase(moyenne_ponderee.ToString("#.##"), headre3));
            sous_cell_2.HorizontalAlignment = Element.ALIGN_CENTER;
            sous_table_2.AddCell(sous_cell_2);

            sous_cell_2 = new PdfPCell(new Phrase("Pourcentage", headre3));
            sous_cell_2.HorizontalAlignment = Element.ALIGN_LEFT;
            sous_cell_2.Colspan = 3;
            sous_table_2.AddCell(sous_cell_2);

            sous_cell_2 = new PdfPCell(new Phrase(pourcentage.ToString("#.##"), headre3));
            sous_cell_2.HorizontalAlignment = Element.ALIGN_CENTER;
            sous_table_2.AddCell(sous_cell_2);
            return sous_table_2;
        }
        private static PdfPTable get_BAC_3(int id_etudiant, MySqlConnection conn, iTextSharp.text.Font headre3, iTextSharp.text.Font header4, PdfPCell cell, int id_annee_3, string annee_3, int id_faculte_3, int id_departement_3, int id_classe_3, string[] SemestreArray_3, string[] SemestreID)
        {
            string[] UE_ID, UE_Array, UE_Code, Cours_ID, Cours_Nom, Cours_Credits;

            PdfPCell sous_cell_3 = new PdfPCell(new Phrase(""));
            PdfPTable sous_table_3 = new PdfPTable(4);
            float[] withs_3 = { 95f, 20f, 20f, 25f };
            sous_table_3.SetWidths(withs_3);

            sous_cell_3 = new PdfPCell(new Phrase("Eléments constitutifs des Unités d'Enseignement", headre3));
            sous_cell_3.HorizontalAlignment = Element.ALIGN_LEFT;
            sous_table_3.AddCell(sous_cell_3);

            sous_cell_3 = new PdfPCell(new Phrase("Crédits", headre3));
            sous_cell_3.HorizontalAlignment = Element.ALIGN_LEFT;
            sous_cell_3.Rotation = 90;
            sous_table_3.AddCell(sous_cell_3);

            sous_cell_3 = new PdfPCell(new Phrase("Note/20", headre3));
            sous_cell_3.HorizontalAlignment = Element.ALIGN_LEFT;
            sous_cell_3.Rotation = 90;
            sous_table_3.AddCell(sous_cell_3);

            sous_cell_3 = new PdfPCell(new Phrase("Note\nPondérée", headre3));
            sous_cell_3.HorizontalAlignment = Element.ALIGN_LEFT;
            sous_cell_3.Rotation = 90;
            sous_table_3.AddCell(sous_cell_3);

            sous_table_3.WidthPercentage = 100;


            int id_annee = id_annee_3;
            int id_faculte = id_faculte_3;
            int id_departement = id_departement_3;
            int id_classe = id_classe_3;

            int creditsAnnuel = 0;
            for (int i = 0; i < 2; i++)
            {
                sous_cell_3 = new PdfPCell(new Phrase(SemestreArray_3[i] + "" + annee_3, headre3));
                sous_cell_3.HorizontalAlignment = Element.ALIGN_CENTER;
                sous_cell_3.BackgroundColor = BaseColor.LIGHT_GRAY;
                sous_cell_3.Colspan = 4;
                cell.FixedHeight = 15f;
                sous_table_3.AddCell(sous_cell_3);

                string sq4 = "SELECT COUNT(DISTINCT id_unite) FROM unite WHERE id_classe=@idcl AND id_departement=@id_departement AND id_faculte=@id_faculte AND id_annee=@id_annee AND id_semestre=@id_semestre";
                MySqlCommand cmd4 = new MySqlCommand(sq4, conn);
                cmd4.Parameters.AddWithValue("@idcl", id_classe);
                cmd4.Parameters.AddWithValue("@id_departement", id_departement);
                cmd4.Parameters.AddWithValue("@id_faculte", id_faculte);
                cmd4.Parameters.AddWithValue("@id_annee", id_annee);
                cmd4.Parameters.AddWithValue("@id_semestre", Convert.ToInt32(SemestreID[i]));
                int nbre_ue = Convert.ToInt32(cmd4.ExecuteScalar());

                UE_ID = new string[nbre_ue];
                UE_Array = new string[nbre_ue];
                UE_Code = new string[nbre_ue];

                string sq5 = "SELECT DISTINCT id_unite,unite,code_unite FROM unite WHERE id_classe=@idcl AND id_departement=@id_departement AND id_faculte=@id_faculte AND id_annee=@id_annee AND id_semestre=@id_semestre";
                MySqlCommand cmd5 = new MySqlCommand(sq5, conn);
                cmd5.Parameters.AddWithValue("@id_faculte", id_faculte);
                cmd5.Parameters.AddWithValue("@id_annee", id_annee);
                cmd5.Parameters.AddWithValue("@id_departement", id_departement);
                cmd5.Parameters.AddWithValue("@idcl", id_classe);
                cmd5.Parameters.AddWithValue("@id_semestre", Convert.ToInt32(SemestreID[i]));
                MySqlDataReader dr5 = cmd5.ExecuteReader();
                int j = 0;
                while (dr5.Read())
                {
                    UE_ID[j] = string.Format("{0}", dr5.GetInt32(0).ToString());
                    UE_Array[j] = string.Format("{0}", dr5.GetString(1));
                    UE_Code[j] = string.Format("{0}", dr5.GetString(2));
                    j++;
                }
                dr5.Close();

                double ue_pondere = 0;
                int ue_tot_credit = 0;
                for (int unite = 0; unite < nbre_ue; unite++)
                {
                    sous_cell_3 = new PdfPCell(new Phrase(UE_Code[unite] + ":" + UE_Array[unite], headre3));
                    sous_cell_3.HorizontalAlignment = Element.ALIGN_LEFT;
                    sous_table_3.AddCell(sous_cell_3);

                    ue_pondere = 0;
                    ue_tot_credit = 0;
                    string sq6 = "SELECT COUNT(DISTINCT id_cours) FROM cours WHERE id_unite=@idue";
                    MySqlCommand cm6 = new MySqlCommand(sq6, conn);
                    cm6.Parameters.AddWithValue("@idue", Convert.ToInt32(UE_ID[unite]));
                    int nbre_ecue = Convert.ToInt32(cm6.ExecuteScalar());

                    Cours_ID = new string[nbre_ecue];
                    Cours_Credits = new string[nbre_ecue];
                    Cours_Nom = new string[nbre_ecue];

                    string sq7 = "SELECT DISTINCT id_cours,credits,cours FROM cours WHERE id_unite=@idue";
                    MySqlCommand cmd7 = new MySqlCommand(sq7, conn);
                    cmd7.Parameters.AddWithValue("@idue", Convert.ToInt32(UE_ID[unite]));
                    MySqlDataReader dr7 = cmd7.ExecuteReader();
                    int n = 0;
                    while (dr7.Read())
                    {
                        Cours_ID[n] = string.Format("{0}", dr7.GetInt32(0).ToString());
                        Cours_Credits[n] = string.Format("{0}", dr7.GetInt32(1).ToString());
                        Cours_Nom[n] = string.Format("{0}", dr7.GetString(2));
                        ue_tot_credit += Convert.ToInt32(Cours_Credits[n]);
                        creditsAnnuel += Convert.ToInt32(Cours_Credits[n]);
                        n++;
                    }
                    dr7.Close();

                    for (int cours = 0; cours < nbre_ecue; cours++)
                    {
                        string sqs2 = "SELECT COUNT(*) FROM etudiant_note WHERE id_cours=@id_cours AND id_etudiant=@id_etudiant AND id_session=@id_session";
                        MySqlCommand cqs2 = new MySqlCommand(sqs2, conn);
                        cqs2.Parameters.AddWithValue("@id_etudiant", id_etudiant);
                        cqs2.Parameters.AddWithValue("@id_session", 2);
                        cqs2.Parameters.AddWithValue("@id_cours", Convert.ToInt32(Cours_ID[cours]));
                        int exist_en_2eme_session = Convert.ToInt32(cqs2.ExecuteScalar());
                        if (exist_en_2eme_session == 0)
                        {
                            string sq9 = "SELECT note FROM etudiant_note  WHERE id_etudiant=@id_etudiant AND id_cours=@id_cours AND id_session=@id_session";
                            MySqlCommand cmd9 = new MySqlCommand(sq9, conn);
                            cmd9.Parameters.AddWithValue("@id_session", 1);
                            cmd9.Parameters.AddWithValue("@id_cours", Convert.ToInt32(Cours_ID[cours]));
                            cmd9.Parameters.AddWithValue("@id_etudiant", id_etudiant);
                            MySqlDataReader dr9 = cmd9.ExecuteReader();
                            while (dr9.Read())
                            {
                                ue_pondere += Convert.ToDouble(Cours_Credits[cours]) * Convert.ToDouble(dr9.GetString(0));
                            }
                            dr9.Close();
                        }
                        else
                        {
                            string sq9 = "SELECT note FROM etudiant_note  WHERE id_etudiant=@id_etudiant AND id_cours=@id_cours AND id_session=@id_session";
                            MySqlCommand cmd9 = new MySqlCommand(sq9, conn);
                            cmd9.Parameters.AddWithValue("@id_session", 2);
                            cmd9.Parameters.AddWithValue("@id_cours", Convert.ToInt32(Cours_ID[cours]));
                            cmd9.Parameters.AddWithValue("@id_etudiant", id_etudiant);
                            MySqlDataReader dr9 = cmd9.ExecuteReader();
                            while (dr9.Read())
                            {
                                ue_pondere += Convert.ToDouble(Cours_Credits[cours]) * Convert.ToDouble(dr9.GetString(0));
                            }
                            dr9.Close();
                        }
                    }

                    sous_cell_3 = new PdfPCell(new Phrase(ue_tot_credit.ToString(), headre3));
                    sous_cell_3.HorizontalAlignment = Element.ALIGN_CENTER;
                    sous_table_3.AddCell(sous_cell_3);

                    sous_cell_3 = new PdfPCell(new Phrase((ue_pondere / ue_tot_credit).ToString("#.#"), headre3));
                    sous_cell_3.HorizontalAlignment = Element.ALIGN_CENTER;
                    sous_table_3.AddCell(sous_cell_3);

                    sous_cell_3 = new PdfPCell(new Phrase(ue_pondere.ToString("#.#"), headre3));
                    sous_cell_3.HorizontalAlignment = Element.ALIGN_CENTER;
                    sous_table_3.AddCell(sous_cell_3);

                    for (int cours = 0; cours < nbre_ecue; cours++)
                    {
                        sous_cell_3 = new PdfPCell(new Phrase(Cours_Nom[cours], header4));
                        sous_cell_3.HorizontalAlignment = Element.ALIGN_LEFT;
                        sous_table_3.AddCell(sous_cell_3);

                        sous_cell_3 = new PdfPCell(new Phrase(Cours_Credits[cours], header4));
                        sous_cell_3.HorizontalAlignment = Element.ALIGN_CENTER;
                        sous_table_3.AddCell(sous_cell_3);

                        string sqs2 = "SELECT COUNT(*) FROM etudiant_note WHERE id_cours=@id_cours AND id_etudiant=@id_etudiant AND id_session=@id_session";
                        MySqlCommand cqs2 = new MySqlCommand(sqs2, conn);
                        cqs2.Parameters.AddWithValue("@id_etudiant", id_etudiant);
                        cqs2.Parameters.AddWithValue("@id_session", 2);
                        cqs2.Parameters.AddWithValue("@id_cours", Convert.ToInt32(Cours_ID[cours]));
                        int exist_en_2eme_session = Convert.ToInt32(cqs2.ExecuteScalar());
                        if (exist_en_2eme_session == 0)
                        {
                            string sq9 = "SELECT note FROM etudiant_note  WHERE id_etudiant=@id_etudiant AND id_cours=@id_cours AND id_session=@id_session";
                            MySqlCommand cmd9 = new MySqlCommand(sq9, conn);
                            cmd9.Parameters.AddWithValue("@id_session", 1);
                            cmd9.Parameters.AddWithValue("@id_cours", Convert.ToInt32(Cours_ID[cours]));
                            cmd9.Parameters.AddWithValue("@id_etudiant", id_etudiant);
                            MySqlDataReader dr9 = cmd9.ExecuteReader();
                            while (dr9.Read())
                            {
                                sous_cell_3 = new PdfPCell(new Phrase(Convert.ToDouble(dr9.GetString(0)).ToString("#.##"), header4));
                                sous_cell_3.HorizontalAlignment = Element.ALIGN_CENTER;
                                sous_table_3.AddCell(sous_cell_3);

                                sous_cell_3 = new PdfPCell(new Phrase((Convert.ToDouble(Cours_Credits[cours]) * Convert.ToDouble(dr9.GetString(0))).ToString("#.##"), header4));
                                sous_cell_3.HorizontalAlignment = Element.ALIGN_CENTER;
                                sous_table_3.AddCell(sous_cell_3);
                            }
                            dr9.Close();
                        }
                        else
                        {
                            string sq9 = "SELECT note FROM etudiant_note  WHERE id_etudiant=@id_etudiant AND id_cours=@id_cours AND id_session=@id_session";
                            MySqlCommand cmd9 = new MySqlCommand(sq9, conn);
                            cmd9.Parameters.AddWithValue("@id_session", 2);
                            cmd9.Parameters.AddWithValue("@id_cours", Convert.ToInt32(Cours_ID[cours]));
                            cmd9.Parameters.AddWithValue("@id_etudiant", id_etudiant);
                            MySqlDataReader dr9 = cmd9.ExecuteReader();
                            while (dr9.Read())
                            {
                                sous_cell_3 = new PdfPCell(new Phrase(Convert.ToDouble(dr9.GetString(0)).ToString("#.##"), header4));
                                sous_cell_3.HorizontalAlignment = Element.ALIGN_CENTER;
                                sous_table_3.AddCell(sous_cell_3);

                                sous_cell_3 = new PdfPCell(new Phrase((Convert.ToDouble(Cours_Credits[cours]) * Convert.ToDouble(dr9.GetString(0))).ToString("#.##"), header4));
                                sous_cell_3.HorizontalAlignment = Element.ALIGN_CENTER;
                                sous_table_3.AddCell(sous_cell_3);
                            }
                            dr9.Close();
                        }
                    }

                }
            }

            double pourcentage = 0.0, moyenne_ponderee = 0.0;
            sous_cell_3 = new PdfPCell(new Phrase("Total", headre3));
            sous_cell_3.HorizontalAlignment = Element.ALIGN_LEFT;
            sous_table_3.AddCell(sous_cell_3);

            sous_cell_3 = new PdfPCell(new Phrase(creditsAnnuel.ToString(), headre3));
            sous_cell_3.HorizontalAlignment = Element.ALIGN_CENTER;
            sous_table_3.AddCell(sous_cell_3);

            sous_cell_3 = new PdfPCell(new Phrase(" ", headre3));
            sous_cell_3.HorizontalAlignment = Element.ALIGN_CENTER;
            sous_table_3.AddCell(sous_cell_3);

            sous_cell_3 = new PdfPCell(new Phrase((creditsAnnuel * 20).ToString(), headre3));
            sous_cell_3.HorizontalAlignment = Element.ALIGN_CENTER;
            sous_table_3.AddCell(sous_cell_3);

            string sqf = "SELECT COUNT(*) FROM deliberation WHERE id_etudiant=@id_etudiant AND id_session=@id_session AND id_classe=@id_classe AND id_departement=@id_departement AND id_faculte=@id_faculte AND id_annee=@id_annee ";
            MySqlCommand cqf = new MySqlCommand(sqf, conn);
            cqf.Parameters.AddWithValue("@id_etudiant", id_etudiant);
            cqf.Parameters.AddWithValue("@id_session", 2);
            cqf.Parameters.AddWithValue("@id_classe", id_classe);
            cqf.Parameters.AddWithValue("@id_departement", id_departement);
            cqf.Parameters.AddWithValue("@id_faculte", id_faculte);
            cqf.Parameters.AddWithValue("@id_annee", id_annee);
            int exist_en_2emeS = Convert.ToInt32(cqf.ExecuteScalar());
            if (exist_en_2emeS == 0)
            {

                string sq_1 = "SELECT pourcentage FROM deliberation WHERE id_annee=@id_annee AND id_faculte=@id_faculte AND id_departement=@id_departement AND id_classe=@id_classe AND id_etudiant=@idetudiant AND id_session=@id_session";
                MySqlCommand cm_1 = new MySqlCommand(sq_1, conn);
                cm_1.Parameters.AddWithValue("@id_classe", id_classe);
                cm_1.Parameters.AddWithValue("@id_departement", id_departement);
                cm_1.Parameters.AddWithValue("@id_faculte", id_faculte);
                cm_1.Parameters.AddWithValue("@id_annee", id_annee);
                cm_1.Parameters.AddWithValue("@idetudiant", id_etudiant);
                cm_1.Parameters.AddWithValue("@id_session", 1);
                MySqlDataReader dr_1 = cm_1.ExecuteReader();
                while (dr_1.Read())
                {
                    pourcentage = dr_1.GetDouble(0);
                    moyenne_ponderee = pourcentage * creditsAnnuel * 20 / 100;
                }
                dr_1.Close();
            }
            else
            {
                string sq_1 = "SELECT pourcentage FROM deliberation WHERE id_annee=@id_annee AND id_faculte=@id_faculte AND id_departement=@id_departement AND id_classe=@id_classe AND id_etudiant=@idetudiant AND id_session=@id_session";
                MySqlCommand cm_1 = new MySqlCommand(sq_1, conn);
                cm_1.Parameters.AddWithValue("@id_classe", id_classe);
                cm_1.Parameters.AddWithValue("@id_departement", id_departement);
                cm_1.Parameters.AddWithValue("@id_faculte", id_faculte);
                cm_1.Parameters.AddWithValue("@id_annee", id_annee);
                cm_1.Parameters.AddWithValue("@idetudiant", id_etudiant);
                cm_1.Parameters.AddWithValue("@id_session", 2);
                MySqlDataReader dr_1 = cm_1.ExecuteReader();
                while (dr_1.Read())
                {
                    pourcentage = dr_1.GetDouble(0);
                    moyenne_ponderee = pourcentage * creditsAnnuel * 20 / 100;
                }
                dr_1.Close();
            }

            moyenne_3 = moyenne_ponderee;
            credit_3 = creditsAnnuel;

            sous_cell_3 = new PdfPCell(new Phrase("Moyenne pondérée", headre3));
            sous_cell_3.HorizontalAlignment = Element.ALIGN_LEFT;
            sous_cell_3.Colspan = 3;
            sous_table_3.AddCell(sous_cell_3);

            sous_cell_3 = new PdfPCell(new Phrase(moyenne_ponderee.ToString("#.##"), headre3));
            sous_cell_3.HorizontalAlignment = Element.ALIGN_CENTER;
            sous_table_3.AddCell(sous_cell_3);

            sous_cell_3 = new PdfPCell(new Phrase("Pourcentage", headre3));
            sous_cell_3.HorizontalAlignment = Element.ALIGN_LEFT;
            sous_cell_3.Colspan = 3;
            sous_table_3.AddCell(sous_cell_3);

            sous_cell_3 = new PdfPCell(new Phrase(pourcentage.ToString("#.##"), headre3));
            sous_cell_3.HorizontalAlignment = Element.ALIGN_CENTER;
            sous_table_3.AddCell(sous_cell_3);
            return sous_table_3;
        }


        //===================FICHE DE PAIE======================================//
        public void fiche_de_paie_personnel(int id_paie, string ann, int id_mo)
        {
            Create_Folder();

            int id_paiement = id_paie;
            int id_mois = id_mo;
            string annee = ann;
            int id_personnel = 0;

            DateTime dt = DateTime.Now;
            int year = dt.Year;
            int mois = dt.Month;
            int jour = dt.Day;
            int heure = dt.Hour;
            int min = dt.Minute;
            int sec = dt.Month;
            string date = jour + "-" + mois + "-" + year + "_à_" + heure + "h" + min + "min" + sec + "sec";

            iTextSharp.text.Document doc = new iTextSharp.text.Document(PageSize.A4, 10, 10, 20, 5);
            string docname = "FP_1S_" + date + ".pdf";
            string outputFile = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.Desktop), @"BMDSys", docname);
            FileStream fs = new FileStream(outputFile, FileMode.Create, FileAccess.Write, FileShare.None);
            PdfWriter wri = PdfWriter.GetInstance(doc, fs);
            doc.Open();

            Font times = new Font(BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, false), 14, Font.BOLD, BaseColor.BLACK);
            Font time_all_text = new Font(BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, false), 11, Font.BOLD, BaseColor.BLACK);
            Font time_all_text1 = new Font(BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, false), 10, Font.NORMAL, BaseColor.BLACK);
            Font timesmall = new Font(BaseFont.CreateFont(BaseFont.HELVETICA, BaseFont.CP1252, false), 10, Font.BOLD, BaseColor.BLACK);
            Font timesunderlined = new Font(Font.FontFamily.TIMES_ROMAN, 12, Font.BOLD | Font.UNDERLINE, BaseColor.BLACK);


            PdfPCell cell = new PdfPCell(new Phrase("", times));
            PdfPTable table2 = new PdfPTable(1);//Creer une table de 5 colonnes
            //float[] colwith1 = { 7f, 7f, 9f, 5f, 10f };//parametrer les domensions(largeur) de chacune des collonnes
            //table2.SetWidths(colwith1);//appliquer ces dimenstions a l atable

            conn = new MySqlConnection(Authentification.MyString);
            conn.Open();


            string universite = Load_Institution(conn);
            cell = new PdfPCell(new Phrase(universite, times));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidthLeft = 0;
            cell.BorderWidthRight = 0;
            cell.BorderWidthTop = 0;
            cell.BorderWidth = 0;
            table2.AddCell(cell);


            iTextSharp.text.Image myImage1 = Class_Reports.Get_LogoImage(conn);
            cell = new PdfPCell(myImage1);
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidthLeft = 0;
            cell.BorderWidthRight = 0;
            cell.BorderWidthTop = 0;
            cell.BorderWidth = 0;
            table2.AddCell(cell);


            string adress = Load_Adress(conn);
            cell = new PdfPCell(new Phrase(adress, timesmall));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidthLeft = 0;
            cell.BorderWidthRight = 0;
            cell.BorderWidthTop = 0;
            cell.BorderWidth = 0;
            table2.AddCell(cell);
            doc.Add(table2);

            int nbre = 0;
            string code = "";
            string annee_header = "";

            string req = "SELECT COUNT(*) FROM signataire_document_delivre";
            MySqlCommand com = new MySqlCommand(req, conn);
            int nbre_livre = Convert.ToInt32(com.ExecuteScalar());
            if (nbre_livre > 0)
            {
                nbre = nbre_livre + 1;
            }
            else
            {
                nbre = nbre + 1;
            }

            string sla = "SELECT annee  FROM annee WHERE etat_annee=@etat_annee";
            MySqlCommand cma = new MySqlCommand(sla, conn);
            cma.Parameters.AddWithValue("@etat_annee", "Encours");
            MySqlDataReader da = cma.ExecuteReader();
            while (da.Read())
            {
                annee_header = da.GetString(0);
            }
            da.Close();

            code = nbre + "/" + annee_header;


            iTextSharp.text.Paragraph txt_titre1 = new iTextSharp.text.Paragraph("FICHE DE PAIE N° " + code, timesunderlined);
            txt_titre1.Alignment = Element.ALIGN_CENTER;
            txt_titre1.SpacingBefore = 40;
            txt_titre1.SpacingAfter = 20;
            doc.Add(txt_titre1);




            PdfPTable table = new PdfPTable(2);
            table.HorizontalAlignment = Element.ALIGN_CENTER;
            float[] colwiths = { 70f, 40f };
            table.SetWidths(colwiths);
            try
            {
                string nom_perso = "", month = "";
                string sql = "SELECT DISTINCT plein_paiement.id_personnel, personnel.nom, personnel.prenom, plein_paiement.id_mois" +
                    " FROM personnel INNER JOIN plein_paiement ON personnel.id_personnel = plein_paiement.id_personnel" +
                    " WHERE plein_paiement.id_plein_paiement=@id_paiement";
                MySqlCommand cmd = new MySqlCommand(sql, conn);
                cmd.Parameters.AddWithValue("@id_paiement", id_paiement);
                MySqlDataReader dr = cmd.ExecuteReader();
                while (dr.Read())
                {
                    id_personnel = dr.GetInt32(0);
                    nom_perso = dr.GetString(1) + " " + dr.GetString(2);
                    switch (dr.GetInt32(3))
                    {
                        case 1:
                            month = "Janvier";
                            break;
                        case 2:
                            month = "Fevrier";
                            break;
                        case 3:
                            month = "Mars";
                            break;
                        case 4:
                            month = "Avril";
                            break;
                        case 5:
                            month = "Mai";
                            break;
                        case 6:
                            month = "Juin";
                            break;
                        case 7:
                            month = "Juillet";
                            break;
                        case 8:
                            month = "Aout";
                            break;
                        case 9:
                            month = "Septembre";
                            break;
                        case 10:
                            month = "Octobre";
                            break;
                        case 11:
                            month = "Novembre";
                            break;
                        case 12:
                            month = "Decembre";
                            break;
                        default:
                            month = "";
                            break;

                    }
                }
                dr.Close();



                cell = new PdfPCell(new Phrase("Employé(e): ", time_all_text1));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidthBottom = 0;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidthRight = 0;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(nom_perso, time_all_text1));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidthBottom = 0;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidthRight = 0;
                table.AddCell(cell);


                cell = new PdfPCell(new Phrase("Employeur: ", time_all_text1));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidthBottom = 0;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidthRight = 0;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("Université de Ngozi", time_all_text1));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidthBottom = 0;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidthRight = 0;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("Mois: ", time_all_text1));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidthBottom = 0;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidthRight = 0;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase(month + " de " + annee, time_all_text1));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidthBottom = 0;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidthRight = 0;
                table.AddCell(cell);
                doc.Add(table);



                iTextSharp.text.Paragraph txt_titre2 = new iTextSharp.text.Paragraph("GRILLE SALARIALE", timesmall);
                txt_titre2.Alignment = Element.ALIGN_CENTER;
                txt_titre2.SpacingAfter = 8;
                doc.Add(txt_titre2);

                string[] Element_ID = new string[100];
                string[] Element_Nom = new string[100];
                string[] Element_Taux = new string[100];
                string[] Element_Montant = new string[100];

                string sql0 = "SELECT COUNT(id_element) FROM plein_paiement_details WHERE id_plein_paiement=@id_paiement";
                MySqlCommand cmd0 = new MySqlCommand(sql0, conn);
                cmd0.Parameters.AddWithValue("@id_paiement", id_paiement);
                int nbre_element = Convert.ToInt32(cmd0.ExecuteScalar());



                string sql1 = "SELECT id_element,nom_element,taux,montant FROM plein_paiement_details WHERE id_plein_paiement=@id_paiement";
                MySqlCommand cmd1 = new MySqlCommand(sql1, conn);
                cmd1.Parameters.AddWithValue("@id_paiement", id_paiement);
                MySqlDataReader dr1 = cmd1.ExecuteReader();
                int j = 0;
                while (dr1.Read() && j < nbre_element)
                {
                    Element_ID[j] = string.Format("{0}", dr1.GetInt32(0).ToString());
                    Element_Nom[j] = string.Format("{0}", dr1.GetString(1));
                    Element_Taux[j] = string.Format("{0}", dr1.GetDouble(2).ToString());
                    Element_Montant[j] = string.Format("{0}", dr1.GetDouble(3).ToString());
                    j++;
                }
                dr1.Close();

                PdfPTable table1 = new PdfPTable(3);
                table1.HorizontalAlignment = Element.ALIGN_CENTER;
                float[] colwiths1 = { 60f, 10f, 20f };
                table1.SetWidths(colwiths1);

                for (int el = 0; el < nbre_element; el++)
                {
                    if (Element_Taux[el] == "1000")
                    {
                        cell = new PdfPCell(new Phrase(Element_Nom[el], times));
                        cell.HorizontalAlignment = Element.ALIGN_LEFT;
                        cell.FixedHeight = 20f;
                        cell.BorderWidthBottom = 1;
                        cell.BorderWidthLeft = 1;
                        cell.BorderWidthTop = 1;
                        cell.BorderWidthRight = 0;
                        table1.AddCell(cell);

                        cell = new PdfPCell(new Phrase("", time_all_text1));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.FixedHeight = 20f;
                        cell.BorderWidthBottom = 1;
                        cell.BorderWidthLeft = 1;
                        cell.BorderWidthTop = 1;
                        cell.BorderWidthRight = 0;
                        table1.AddCell(cell);

                        cell = new PdfPCell(new Phrase(Element_Montant[el], times));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.FixedHeight = 20f;
                        cell.BorderWidthBottom = 1;
                        cell.BorderWidthLeft = 0;
                        cell.BorderWidthTop = 1;
                        cell.BorderWidthRight = 1;
                        table1.AddCell(cell);
                    }
                    else if (Element_Taux[el] == "1")
                    {
                        cell = new PdfPCell(new Phrase(Element_Nom[el], time_all_text1));
                        cell.HorizontalAlignment = Element.ALIGN_LEFT;
                        cell.FixedHeight = 15f;
                        cell.BorderWidthBottom = 0;
                        cell.BorderWidthLeft = 1;
                        cell.BorderWidthTop = 0;
                        cell.BorderWidthRight = 0;
                        table1.AddCell(cell);

                        cell = new PdfPCell(new Phrase("", time_all_text1));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.FixedHeight = 15f;
                        cell.BorderWidthBottom = 0;
                        cell.BorderWidthLeft = 1;
                        cell.BorderWidthTop = 0;
                        cell.BorderWidthRight = 0;
                        table1.AddCell(cell);

                        cell = new PdfPCell(new Phrase(Element_Montant[el], time_all_text1));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.FixedHeight = 15f;
                        cell.BorderWidthBottom = 0;
                        cell.BorderWidthLeft = 0;
                        cell.BorderWidthTop = 0;
                        cell.BorderWidthRight = 1;
                        table1.AddCell(cell);
                    }
                    else if (Element_Taux[el] == "1001")
                    {
                        cell = new PdfPCell(new Phrase(Element_Nom[el], time_all_text1));
                        cell.HorizontalAlignment = Element.ALIGN_LEFT;
                        cell.FixedHeight = 15f;
                        cell.BorderWidthBottom = 0;
                        cell.BorderWidthLeft = 1;
                        cell.BorderWidthTop = 0;
                        cell.BorderWidthRight = 0;
                        table1.AddCell(cell);

                        cell = new PdfPCell(new Phrase("", time_all_text));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.FixedHeight = 15f;
                        cell.BorderWidthBottom = 0;
                        cell.BorderWidthLeft = 1;
                        cell.BorderWidthTop = 0;
                        cell.BorderWidthRight = 0;
                        table1.AddCell(cell);

                        cell = new PdfPCell(new Phrase(Element_Montant[el], time_all_text));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.FixedHeight = 15f;
                        cell.BorderWidthBottom = 0;
                        cell.BorderWidthLeft = 0;
                        cell.BorderWidthTop = 0;
                        cell.BorderWidthRight = 1;
                        table1.AddCell(cell);
                    }
                    else
                    {
                        cell = new PdfPCell(new Phrase(Element_Nom[el], time_all_text1));
                        cell.HorizontalAlignment = Element.ALIGN_LEFT;
                        cell.FixedHeight = 15f;
                        cell.BorderWidthBottom = 0;
                        cell.BorderWidthLeft = 1;
                        cell.BorderWidthTop = 0;
                        cell.BorderWidthRight = 0;
                        table1.AddCell(cell);

                        cell = new PdfPCell(new Phrase(Element_Taux[el], time_all_text1));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.FixedHeight = 15f;
                        cell.BorderWidthBottom = 0;
                        cell.BorderWidthLeft = 1;
                        cell.BorderWidthTop = 0;
                        cell.BorderWidthRight = 0;
                        table1.AddCell(cell);

                        cell = new PdfPCell(new Phrase(Element_Montant[el], time_all_text1));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.FixedHeight = 15f;
                        cell.BorderWidthBottom = 0;
                        cell.BorderWidthLeft = 0;
                        cell.BorderWidthTop = 0;
                        cell.BorderWidthRight = 1;
                        table1.AddCell(cell);
                    }
                }
                doc.Add(table1);

                PdfPTable tVisa = new PdfPTable(5);//Creer une table de 5 colonnes
                float[] colwithv = { 7f, 7f, 7f, 7f, 12f };//parametrer les domensions(largeur) de chacune des collonnes
                tVisa.SetWidths(colwithv);//appliquer ces dimenstions a l atable


                cell = new PdfPCell(new Phrase("\n\nPOUR ACQUIS\n\n" + nom_perso, timesmall));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 2;
                tVisa.AddCell(cell);

                cell = new PdfPCell(new Phrase("", timesmall));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;

                tVisa.AddCell(cell);

                string dat = "Fait à " + siege + " ,le " + DateTime.Today.Date.ToShortDateString();
                string nom_rect = "VISA DU SERVICE DE LA COMPTABILITE";
                cell = new PdfPCell(new Phrase(dat + "\n\n" + nom_rect, timesmall));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 2;
                tVisa.AddCell(cell);

                Paragraph pVisa = new Paragraph();
                //parf.IndentationLeft = 240;
                pVisa.Alignment = Element.ALIGN_CENTER;
                //pVisa.SpacingAfter = 6;
                pVisa.SpacingBefore = 8;
                pVisa.Add(tVisa);

                doc.Add(pVisa);
                conn.Close();

            }
            catch (Exception ex)
            {
                //MessageBox.Show(ex.Message);
            }

            wri.PageEvent = new Foot();
            doc.Close();
            System.Diagnostics.Process.Start(outputFile);
        }





        /*public void Etat_Avancement(int idan, int idf)
        {
            try
            {
                Connection conn = new Connection();
                conn.Open();

                int id_annee = idan;
                int id_faculte = idf;

                DateTime dt = DateTime.Now;
                int annee = dt.Year;
                int mois = dt.Month;
                int jour = dt.Day;
                int heure = dt.Hour;
                int min = dt.Minute;
                int sec = dt.Month;
                string date = jour + "-" + mois + "-" + annee + "_à_" + heure + "h" + min + "min" + sec + "sec";

                iTextSharp.text.Document doc = new iTextSharp.text.Document(iTextSharp.text.PageSize.A4.Rotate(), 0, 0, 50, 10);
                string docname = "Etat d'avancement genere le " + date + ".pdf";
                string outputFile = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.Desktop), @"iDocument", docname);
                FileStream fs = new FileStream(outputFile, FileMode.Create, FileAccess.Write, FileShare.None);
                PdfWriter wri = PdfWriter.GetInstance(doc, fs);
                doc.Open();


                iTextSharp.text.pdf.BaseFont bfTimes = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, false);
                iTextSharp.text.pdf.BaseFont bfTimes1 = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, false);
                iTextSharp.text.pdf.BaseFont bfTimes2 = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, false);

                iTextSharp.text.Font entete = new iTextSharp.text.Font(bfTimes, 10, iTextSharp.text.Font.BOLD, iTextSharp.text.BaseColor.BLACK);
                iTextSharp.text.Font enteteValue = new iTextSharp.text.Font(bfTimes, 10, iTextSharp.text.Font.NORMAL, iTextSharp.text.BaseColor.BLACK);
                iTextSharp.text.Font Font_Normal = new iTextSharp.text.Font(bfTimes, 7, iTextSharp.text.Font.NORMAL, iTextSharp.text.BaseColor.BLACK);
                iTextSharp.text.Font critereEntete = new iTextSharp.text.Font(bfTimes, 9, iTextSharp.text.Font.NORMAL, iTextSharp.text.BaseColor.BLACK);
                iTextSharp.text.Font classeEntete = new iTextSharp.text.Font(bfTimes, 11, iTextSharp.text.Font.BOLD, iTextSharp.text.BaseColor.BLACK);
                iTextSharp.text.Font classeDepartement = new iTextSharp.text.Font(bfTimes, 12, iTextSharp.text.Font.BOLD, iTextSharp.text.BaseColor.BLACK);
                iTextSharp.text.Font entete_decision_font = new iTextSharp.text.Font(bfTimes1, 6, iTextSharp.text.Font.BOLD, iTextSharp.text.BaseColor.BLACK);
                iTextSharp.text.Font note_font = new iTextSharp.text.Font(bfTimes2, 7, iTextSharp.text.Font.NORMAL, iTextSharp.text.BaseColor.DARK_GRAY);
                iTextSharp.text.Font timesunderlined = new iTextSharp.text.Font(bfTimes, 7, iTextSharp.text.Font.BOLD | iTextSharp.text.Font.UNDERLINE, BaseColor.BLACK);

                string institution = "", type_fac_or_institut = "", enseignant = "", vh = "";

                string req = "SELECT  nom_institution FROM institution";
                MySqlCommand cmd = new MySqlCommand(req, conn);
                MySqlDataReader dr = cmd.ExecuteReader();
                while (dr.Read())
                {
                    institution = dr.GetString(0);
                }
                dr.Close();

                string req1 = "SELECT faculte_type.type FROM faculte_type INNER JOIN faculte ON faculte_type.id_type = faculte.id_type WHERE faculte.id_faculte=@id_faculte";
                MySqlCommand cd1 = new MySqlCommand(req1, conn);
                cd1.Parameters.AddWithValue("id_faculte", id_faculte);
                MySqlDataReader d1 = cd1.ExecuteReader();
                while (d1.Read())
                {
                    type_fac_or_institut = d1.GetString(0);
                }
                d1.Close();

                PdfPCell cell = new PdfPCell(new Phrase("", entete_decision_font));
                PdfPTable table1 = new PdfPTable(5);//Creer une table de 5 colonnes
                float[] colwith1 = { 7f, 7f, 9f, 5f, 12f };//parametrer les domensions(largeur) de chacune des collonnes
                table1.SetWidths(colwith1);//appliquer ces dimenstions a l atable

                string universite = Load_Institution(conn);
                cell = new PdfPCell(new Phrase(universite, enteteValue));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 2;
                table1.AddCell(cell);

                cell = new PdfPCell(new Phrase("", Font_Normal));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 3;
                table1.AddCell(cell);


                iTextSharp.text.Image myImage1 = rapports.Get_LogoImage(conn);
                cell = new PdfPCell(myImage1);
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 2;
                cell.Rowspan = 6;
                table1.AddCell(cell);

                cell = new PdfPCell(new Phrase("", Font_Normal));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 3;
                table1.AddCell(cell);

                cell = new PdfPCell(new Phrase("", Font_Normal));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 3;
                table1.AddCell(cell);

                cell = new PdfPCell(new Phrase("", Font_Normal));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 3;
                table1.AddCell(cell);

                cell = new PdfPCell(new Phrase("", Font_Normal));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 3;
                table1.AddCell(cell);

                cell = new PdfPCell(new Phrase("", Font_Normal));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 3;
                table1.AddCell(cell);

                cell = new PdfPCell(new Phrase("", Font_Normal));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 3;
                table1.AddCell(cell);

                string adress = Load_Adress(conn);
                cell = new PdfPCell(new Phrase(adress, enteteValue));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Rowspan = 3;
                cell.Colspan = 2;
                table1.AddCell(cell);

                cell = new PdfPCell(new Phrase("", Font_Normal));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                table1.AddCell(cell);

                cell = new PdfPCell(new Phrase("A.A:", entete));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                table1.AddCell(cell);

                cell = new PdfPCell(new Phrase(annee, enteteValue));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                table1.AddCell(cell);




                cell = new PdfPCell(new Phrase("", entete));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                table1.AddCell(cell);


                cell = new PdfPCell(new Phrase(type_fac_or_institut + ": ", entete));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                table1.AddCell(cell);

                cell = new PdfPCell(new Phrase(faculte, enteteValue));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                table1.AddCell(cell);



                cell = new PdfPCell(new Phrase("", Font_Normal));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                table1.AddCell(cell);

                cell = new PdfPCell(new Phrase("Semestre : ", entete));
                cell.HorizontalAlignment = Element.ALIGN_RIGHT;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                table1.AddCell(cell);


                cell = new PdfPCell(new Phrase(avancement_par_departement.semestre, enteteValue));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                table1.AddCell(cell);

                doc.Add(table1);


                Paragraph parf = new Paragraph();
                //parf.IndentationLeft = 240;
                string ta = "ETAT D'AVANCEMENT DES ENSEIGNEMENTS ";
                parf.Add(new Phrase(ta, timesunderlined));
                parf.Alignment = Element.ALIGN_CENTER;
                parf.SpacingAfter = 6;
                parf.SpacingBefore = 10;
                doc.Add(parf);


                PdfPTable table = new PdfPTable(20);
                table.HorizontalAlignment = Element.ALIGN_CENTER;
                float[] colwiths = { 8f, 6f, 12f, 3f, 4f, 5f, 4f, 5f, 4f, 5f, 4f, 5f, 4f, 5f, 4f, 5f, 4f, 5f, 4f, 5f };
                table.SetWidths(colwiths);

                cell = new PdfPCell(new Phrase("", entete_decision_font));
                cell.Colspan = 3;
                //cell.BorderWidthLeft = 0;
                //cell.BorderWidthTop = 0;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("Nbre total de cours ", critereEntete));
                cell.Rotation = 90;
                cell.Rowspan = 2;
                cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("\n\nCours encours ", critereEntete));
                cell.Rotation = 90;
                cell.Colspan = 2;
                cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
                //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("\n\nCours déjà enseignés ", critereEntete));
                cell.Rotation = 90;
                cell.Colspan = 2;
                cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
                //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("\n\nCours en attente ", critereEntete));
                cell.Rotation = 90;
                cell.Colspan = 2;
                cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
                //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("\n\nCours attribués", critereEntete));
                cell.Rotation = 90;
                cell.Colspan = 2;
                cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
                //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("\n\nCours sans enseignant", critereEntete));
                cell.Rotation = 90;
                cell.Colspan = 2;
                cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
                //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("\n\nCours programmés", critereEntete));
                cell.Rotation = 90;
                cell.Colspan = 2;
                cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
                //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("\n\nCours évalués", critereEntete));
                cell.Rotation = 90;
                cell.Colspan = 2;
                cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
                //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("\n\nCours avec résultats", critereEntete));
                cell.Rotation = 90;
                cell.Colspan = 2;
                cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
                //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);


                cell = new PdfPCell(new Phrase("Département", critereEntete));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.FixedHeight = 16f;
                //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("Classe", entete_decision_font));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                cell.FixedHeight = 16f;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("Semestre", entete_decision_font));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                cell.FixedHeight = 16f;
                table.AddCell(cell);

                for (int ce = 0; ce < 8; ce++)
                {
                    cell = new PdfPCell(new Phrase("Nbre", entete_decision_font));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    cell.FixedHeight = 16f;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase("%", entete_decision_font));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    cell.FixedHeight = 16f;
                    table.AddCell(cell);
                }
                //Departements
                string[] Departement_ID, Departement_Nom, Classe_ID, Classe_Nom, Cours_ID;
                string[] Semestre_ID = new string[2] { "1", "2" };
                string[] Semestre_Nom = new string[2] { "1er", "2eme" };
                int nbre_departement, nbre_classe, nbre_cours;

                string sq0 = "SELECT COUNT(DISTINCT id_departement) FROM departement WHERE id_faculte=@id_faculte";
                MySqlCommand cmd0 = new MySqlCommand(sq0, conn);
                cmd0.Parameters.AddWithValue("@id_faculte", id_faculte);
                nbre_departement = Convert.ToInt32(cmd0.ExecuteScalar());
                if (nbre_departement == 0)
                {
                }
                else
                {
                    Departement_ID = new string[nbre_departement];
                    Departement_Nom = new string[nbre_departement];
                    string sq1 = "SELECT DISTINCT id_departement, departement FROM departement WHERE id_faculte=@id_faculte";
                    MySqlCommand cmd1 = new MySqlCommand(sq1, conn);
                    cmd1.Parameters.AddWithValue("@id_faculte", id_faculte);
                    MySqlDataReader dr1 = cmd1.ExecuteReader();
                    int i = 0;
                    while (dr1.Read())
                    {
                        Departement_ID[i] = string.Format("{0}", dr1.GetInt32(0).ToString());
                        Departement_Nom[i] = string.Format("{0}", dr1.GetString(1));
                        i++;
                    }
                    dr1.Close();
                    for (int dep = 0; dep < nbre_departement; dep++)
                    {
                        string sq2 = "SELECT COUNT(DISTINCT id_classe) FROM classe_par_departement WHERE id_departement=@id_departement";
                        MySqlCommand cmd2 = new MySqlCommand(sq2, conn);
                        cmd2.Parameters.AddWithValue("@id_departement", Convert.ToInt32(Departement_ID[dep]));
                        nbre_classe = Convert.ToInt32(cmd2.ExecuteScalar());

                        cell = new PdfPCell(new Phrase("\n\n"+Departement_Nom[dep], entete));
                        cell.HorizontalAlignment = Element.ALIGN_LEFT;
                        cell.Rowspan = nbre_classe * 3;
                        cell.Rotation = 90;
                        table.AddCell(cell);

                        Classe_ID = new string[nbre_classe];
                        Classe_Nom = new string[nbre_classe];

                        string sq3 = "SELECT classe.id_classe, classe.classe" +
                            " FROM classe INNER JOIN classe_par_departement ON classe.id_classe = classe_par_departement.id_classe" +
                            " WHERE classe_par_departement.id_departement=@id_departement";
                        MySqlCommand cmd3 = new MySqlCommand(sq3, conn);
                        cmd3.Parameters.AddWithValue("@id_departement", Convert.ToInt32(Departement_ID[dep]));
                        MySqlDataReader dr3 = cmd3.ExecuteReader();
                        i = 0;
                        while (dr3.Read())
                        {
                            Classe_ID[i] = string.Format("{0}", dr3.GetInt32(0).ToString());
                            Classe_Nom[i] = string.Format("{0}", dr3.GetString(1));
                            i++;
                        }
                        dr3.Close();

                        for (int cla = 0; cla < nbre_classe; cla++)
                        {
                            cell = new PdfPCell(new Phrase(Classe_Nom[cla], Font_Normal));
                            cell.HorizontalAlignment = Element.ALIGN_LEFT;
                            cell.Rowspan = 2;
                            table.AddCell(cell);
                            for (int sem = 0; sem < 2; sem++)
                            {
                                cell = new PdfPCell(new Phrase(Semestre_Nom[sem] + " Semestre", Font_Normal));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                table.AddCell(cell);

                                string sq4 = "SELECT COUNT(cours.id_cours)" +
                                " FROM unite INNER JOIN cours ON unite.id_unite = cours.id_unite" +
                                " WHERE unite.id_departement=@id_departement AND unite.id_classe=@id_classe AND unite.id_semestre=@id_semestre";
                                MySqlCommand cmd4 = new MySqlCommand(sq4, conn);
                                cmd4.Parameters.AddWithValue("@id_semestre", Convert.ToInt32(Semestre_ID[sem]));
                                cmd4.Parameters.AddWithValue("@id_classe", Convert.ToInt32(Classe_ID[cla]));
                                cmd4.Parameters.AddWithValue("@id_departement", Convert.ToInt32(Departement_ID[dep]));
                                nbre_cours = Convert.ToInt32(cmd4.ExecuteScalar());

                                cell = new PdfPCell(new Phrase(nbre_cours.ToString(), Font_Normal));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                                table.AddCell(cell);

                                Cours_ID = new string[nbre_cours];

                                string sq5 = "SELECT cours.id_cours" +
                                " FROM unite INNER JOIN cours ON unite.id_unite = cours.id_unite" +
                                " WHERE unite.id_departement=@id_departement AND unite.id_classe=@id_classe AND unite.id_semestre=@id_semestre";
                                MySqlCommand cmd5 = new MySqlCommand(sq5, conn);
                                cmd5.Parameters.AddWithValue("@id_semestre", Convert.ToInt32(Semestre_ID[sem]));
                                cmd5.Parameters.AddWithValue("@id_classe", Convert.ToInt32(Classe_ID[cla]));
                                cmd5.Parameters.AddWithValue("@id_departement", Convert.ToInt32(Departement_ID[dep]));
                                MySqlDataReader dr5 = cmd5.ExecuteReader();
                                i = 0;
                                while (dr5.Read())
                                {
                                    Cours_ID[i] = string.Format("{0}", dr5.GetInt32(0).ToString());
                                    i++;
                                }
                                dr5.Close();

                                int cours_encours = 0, cours_termine = 0, cours_attente = 0, cours_attribue = 0, cours_non_attribue = 0, cours_programme = 0, cours_examine = 0, cours_avec_resultat = 0;

                                for (int cours = 0; cours < nbre_cours; cours++)
                                {
                                    string sq6 = "SELECT COUNT(*) FROM attribution_cours WHERE id_cours=@id_cours";
                                    MySqlCommand cmd6 = new MySqlCommand(sq6, conn);
                                    cmd6.Parameters.AddWithValue("@id_cours", Convert.ToInt32(Cours_ID[cours]));
                                    int exist = Convert.ToInt32(cmd6.ExecuteScalar());
                                    if (exist == 0)
                                    {
                                        cours_non_attribue++;
                                    }
                                    else
                                    {
                                        cours_attribue++;
                                        string sq7 = "SELECT etat FROM  attribution_cours  WHERE id_cours=@id_cours";
                                        MySqlCommand cmd7 = new MySqlCommand(sq7, conn);
                                        cmd7.Parameters.AddWithValue("@id_cours", Convert.ToInt32(Cours_ID[cours]));
                                        MySqlDataReader dr7 = cmd7.ExecuteReader();
                                        string etat_cloture = "";
                                        while (dr7.Read())
                                        {
                                            etat_cloture = dr7.GetString(0);
                                        }
                                        dr7.Close();
                                        if (etat_cloture == "Cloturee")
                                        {
                                            cours_termine++;
                                            string sq10 = "SELECT COUNT(*) FROM etudiant_note WHERE id_cours=@id_cours";
                                            MySqlCommand cmd10 = new MySqlCommand(sq10, conn);
                                            cmd10.Parameters.AddWithValue("@id_cours", Convert.ToInt32(Cours_ID[cours]));
                                            int exist3 = Convert.ToInt32(cmd10.ExecuteScalar());
                                            if (exist3 > 0)
                                            {
                                                cours_avec_resultat++;
                                            }
                                            else if (exist3 == 0)
                                            {
                                                string sq11 = "SELECT COUNT(*) FROM horaire INNER JOIN prestation ON horaire.id_horaire = prestation.id_horaire WHERE horaire.id_cours=@id_cours AND horaire.id_horaire_type=@id_type";
                                                MySqlCommand cmd11 = new MySqlCommand(sq11, conn);
                                                cmd11.Parameters.AddWithValue("@id_cours", Convert.ToInt32(Cours_ID[cours]));
                                                cmd11.Parameters.AddWithValue("@id_type", 2);
                                                int exist4 = Convert.ToInt32(cmd11.ExecuteScalar());
                                                if (exist4 > 0)
                                                {
                                                    cours_examine++;
                                                }
                                            }
                                        }
                                        else
                                        {
                                            string sq8 = "SELECT COUNT(*) FROM horaire WHERE horaire.id_cours=@id_cours";
                                            MySqlCommand cmd8 = new MySqlCommand(sq8, conn);
                                            cmd8.Parameters.AddWithValue("@id_cours", Convert.ToInt32(Cours_ID[cours]));
                                            int exist1 = Convert.ToInt32(cmd8.ExecuteScalar());
                                            if (exist1 == 0)
                                            {
                                                cours_attente++;
                                            }
                                            else
                                            {
                                                string sq9 = "SELECT COUNT(*) FROM horaire INNER JOIN prestation ON horaire.id_horaire = prestation.id_horaire WHERE horaire.id_cours=@id_cours";
                                                MySqlCommand cmd9 = new MySqlCommand(sq9, conn);
                                                cmd9.Parameters.AddWithValue("@id_cours", Convert.ToInt32(Cours_ID[cours]));
                                                int exist2 = Convert.ToInt32(cmd9.ExecuteScalar());
                                                if (exist2 == 0)
                                                {

                                                }
                                                else
                                                {
                                                    cours_encours++;
                                                }
                                                string sq12 = "SELECT COUNT(*) FROM horaire WHERE id_cours=@id_cours AND id_horaire_type=@id_type";
                                                MySqlCommand cmd12 = new MySqlCommand(sq12, conn);
                                                cmd12.Parameters.AddWithValue("@id_cours", Convert.ToInt32(Cours_ID[cours]));
                                                cmd12.Parameters.AddWithValue("@id_type", 2);
                                                int exist5 = Convert.ToInt32(cmd12.ExecuteScalar());
                                                if (exist5 > 0)
                                                {
                                                    cours_programme++;
                                                }
                                            }
                                        }
                                    }

                                }

                                cell = new PdfPCell(new Phrase(cours_encours.ToString(), Font_Normal));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                cell.FixedHeight = 13f;
                                table.AddCell(cell);

                                cell = new PdfPCell(new Phrase("", Font_Normal));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                cell.FixedHeight = 13f;
                                table.AddCell(cell);

                                cell = new PdfPCell(new Phrase(cours_termine.ToString(), Font_Normal));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                cell.FixedHeight = 13f;
                                table.AddCell(cell);

                                cell = new PdfPCell(new Phrase("", Font_Normal));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                cell.FixedHeight = 13f;
                                table.AddCell(cell);

                                cell = new PdfPCell(new Phrase(cours_attente.ToString(), Font_Normal));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                cell.FixedHeight = 13f;
                                table.AddCell(cell);

                                cell = new PdfPCell(new Phrase("", Font_Normal));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                cell.FixedHeight = 13f;
                                table.AddCell(cell);

                                cell = new PdfPCell(new Phrase(cours_attribue.ToString(), Font_Normal));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                cell.FixedHeight = 13f;
                                table.AddCell(cell);

                                cell = new PdfPCell(new Phrase("", Font_Normal));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                cell.FixedHeight = 13f;
                                table.AddCell(cell);

                                cell = new PdfPCell(new Phrase(cours_non_attribue.ToString(), Font_Normal));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                cell.FixedHeight = 13f;
                                table.AddCell(cell);

                                cell = new PdfPCell(new Phrase("", Font_Normal));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                cell.FixedHeight = 13f;
                                table.AddCell(cell);

                                cell = new PdfPCell(new Phrase(cours_programme.ToString(), Font_Normal));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                cell.FixedHeight = 13f;
                                table.AddCell(cell);

                                cell = new PdfPCell(new Phrase("", Font_Normal));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                cell.FixedHeight = 13f;
                                table.AddCell(cell);

                                cell = new PdfPCell(new Phrase(cours_examine.ToString(), Font_Normal));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                cell.FixedHeight = 13f;
                                table.AddCell(cell);

                                cell = new PdfPCell(new Phrase("", Font_Normal));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                cell.FixedHeight = 13f;
                                table.AddCell(cell);

                                cell = new PdfPCell(new Phrase(cours_avec_resultat.ToString(), Font_Normal));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                cell.FixedHeight = 13f;
                                table.AddCell(cell);

                                cell = new PdfPCell(new Phrase("", Font_Normal));
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                cell.FixedHeight = 13f;
                                table.AddCell(cell);
                            }

                            cell = new PdfPCell(new Phrase("Etat d'avancement des ensengement par classe", classeEntete));
                            cell.HorizontalAlignment = Element.ALIGN_LEFT;
                            //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            //cell.FixedHeight = 13f;
                            cell.Colspan = 17;
                            table.AddCell(cell);

                            cell = new PdfPCell(new Phrase("0 %", entete_decision_font));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            //cell.FixedHeight = 13f;
                            cell.Colspan = 2;
                            table.AddCell(cell);
                        }
                        cell = new PdfPCell(new Phrase("Etat d'avancement des ensengement par departement", classeDepartement));
                        cell.HorizontalAlignment = Element.ALIGN_LEFT;
                        //cell.BackgroundColor = BaseColor.CYAN;
                        //cell.FixedHeight = 13f;
                        cell.Colspan = 18;
                        table.AddCell(cell);

                        cell = new PdfPCell(new Phrase("0 %", entete_decision_font));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.CYAN;
                        cell.FixedHeight = 13f;
                        cell.Colspan = 2;
                        table.AddCell(cell);
                    }
                }


                doc.Add(table);

                PdfPTable tVisa = new PdfPTable(5);//Creer une table de 5 colonnes
                float[] colwithv = { 7f, 7f, 7f, 7f, 12f };//parametrer les domensions(largeur) de chacune des collonnes
                tVisa.SetWidths(colwithv);//appliquer ces dimenstions a l atable


                cell = new PdfPCell(new Phrase("", Font_Normal));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 5;
                tVisa.AddCell(cell);

                cell = new PdfPCell(new Phrase("", Font_Normal));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 5;
                tVisa.AddCell(cell);

                cell = new PdfPCell(new Phrase("", Font_Normal));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 5;
                tVisa.AddCell(cell);

                cell = new PdfPCell(new Phrase("\nVISA DU DECANAT", Font_Normal));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 2;
                tVisa.AddCell(cell);

                cell = new PdfPCell(new Phrase("", Font_Normal));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 2;
                tVisa.AddCell(cell);

                string dat = "Fait à Ngozi, le " + DateTime.Today.Date.ToShortDateString();
                string nom_rect = "";

                cell = new PdfPCell(new Phrase(dat + "\n\n" + nom_rect, Font_Normal));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                tVisa.AddCell(cell);

                Paragraph pVisa = new Paragraph();
                //parf.IndentationLeft = 240;
                pVisa.Alignment = Element.ALIGN_CENTER;
                //pVisa.SpacingAfter = 6;
                pVisa.SpacingBefore = 8;
                pVisa.Add(tVisa);

                doc.Add(pVisa);

                wri.PageEvent = new Foot();
                doc.Close();
                System.Diagnostics.Process.Start(outputFile);
                conn.Close();
            }
            catch (Exception ex)
            {
                //MessageBox.Show(ex.Message);
            }
        }
        public void Etat_Avancement_Semestriel(int idan, int idf, int ids)
        {
            try
            {
                Connection conn = new Connection();
                conn.Open();
                int id_annee = idan;
                int id_faculte = idf;
                int id_semestre = ids;

                DateTime dt = DateTime.Now;
                int annee = dt.Year;
                int mois = dt.Month;
                int jour = dt.Day;
                int heure = dt.Hour;
                int min = dt.Minute;
                int sec = dt.Month;
                string date = jour + "-" + mois + "-" + annee + "_à_" + heure + "h" + min + "min" + sec + "sec";

                iTextSharp.text.Document doc = new iTextSharp.text.Document(iTextSharp.text.PageSize.A4.Rotate(), 0, 0, 50, 10);
                string docname = "Etat d'avancement genere le " + date + ".pdf";
                string outputFile = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.Desktop), @"iDocument", docname);
                FileStream fs = new FileStream(outputFile, FileMode.Create, FileAccess.Write, FileShare.None);
                PdfWriter wri = PdfWriter.GetInstance(doc, fs);
                doc.Open();


                iTextSharp.text.pdf.BaseFont bfTimes = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, false);
                iTextSharp.text.pdf.BaseFont bfTimes1 = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, false);
                iTextSharp.text.pdf.BaseFont bfTimes2 = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, false);

                iTextSharp.text.Font Font_Normal = new iTextSharp.text.Font(bfTimes, 10, iTextSharp.text.Font.NORMAL, iTextSharp.text.BaseColor.BLACK);
                iTextSharp.text.Font entete_decision_font = new iTextSharp.text.Font(bfTimes1, 10, iTextSharp.text.Font.BOLD, iTextSharp.text.BaseColor.BLACK);
                iTextSharp.text.Font Entete_font = new iTextSharp.text.Font(bfTimes1, 10, iTextSharp.text.Font.BOLD, iTextSharp.text.BaseColor.BLACK);
                iTextSharp.text.Font note_font = new iTextSharp.text.Font(bfTimes2, 10, iTextSharp.text.Font.NORMAL, iTextSharp.text.BaseColor.DARK_GRAY);
                iTextSharp.text.Font timesunderlined = new iTextSharp.text.Font(bfTimes, 10, iTextSharp.text.Font.BOLD | iTextSharp.text.Font.UNDERLINE, BaseColor.BLACK);



                string institution = "", type_fac_or_institut = "", enseignant = "", vh = "";

                string req = "SELECT  nom_institution FROM institution";
                MySqlCommand cmd = new MySqlCommand(req, conn);
                MySqlDataReader dr = cmd.ExecuteReader();
                while (dr.Read())
                {
                    institution = dr.GetString(0);
                }
                dr.Close();

                string req1 = "SELECT faculte_type.type FROM faculte_type INNER JOIN faculte ON faculte_type.id_type = faculte.id_type WHERE faculte.id_faculte=@id_faculte";
                MySqlCommand cd1 = new MySqlCommand(req1, conn);
                cd1.Parameters.AddWithValue("id_faculte", id_faculte);
                MySqlDataReader d1 = cd1.ExecuteReader();
                while (d1.Read())
                {
                    type_fac_or_institut = d1.GetString(0);
                }
                d1.Close();


                string instit = institution;
                string an = "A.A:  " + annee;
                string typ = type_fac_or_institut + ":  " + faculte;
                string sems = "Semestre:  " + avancement_par_departement.semestre;
                string titl = "Etat d'avancement des enseignements";

                



                PdfPTable table = new PdfPTable(19);
                table.HorizontalAlignment = Element.ALIGN_CENTER;
                float[] colwiths = { 20f, 6f, 3f, 4f, 5f, 4f, 5f, 4f, 5f, 4f, 5f, 4f, 5f, 4f, 5f, 4f, 5f, 4f, 5f };
                table.SetWidths(colwiths);

                PdfPCell cell = new PdfPCell(new Phrase(instit + "\n" + an + "\n" + typ + "\n" + sems + "\n" + titl, Entete_font));
                cell.Colspan = 2;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthTop = 0;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("Nbre total de cours ", entete_decision_font));
                cell.Rotation = 90;
                cell.Rowspan = 2;
                cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("\n\nCours encours ", entete_decision_font));
                cell.Rotation = 90;
                cell.Colspan = 2;
                cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
                //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("\n\nCours déjà enseignés ", entete_decision_font));
                cell.Rotation = 90;
                cell.Colspan = 2;
                cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
                //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("\n\nCours en attente ", entete_decision_font));
                cell.Rotation = 90;
                cell.Colspan = 2;
                cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
                //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("\n\nCours attribués", entete_decision_font));
                cell.Rotation = 90;
                cell.Colspan = 2;
                cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
                //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("\n\nCours sans enseignant", entete_decision_font));
                cell.Rotation = 90;
                cell.Colspan = 2;
                cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
                //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("\n\nCours programmés", entete_decision_font));
                cell.Rotation = 90;
                cell.Colspan = 2;
                cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
                //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("\n\nCours évalués", entete_decision_font));
                cell.Rotation = 90;
                cell.Colspan = 2;
                cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
                //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("\n\nCours avec résultats", entete_decision_font));
                cell.Rotation = 90;
                cell.Colspan = 2;
                cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
                //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);


                cell = new PdfPCell(new Phrase("Département", entete_decision_font));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.FixedHeight = 18f;
                //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell = new PdfPCell(new Phrase("Classe", entete_decision_font));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                cell.FixedHeight = 18f;
                table.AddCell(cell);



                for (int ce = 0; ce < 8; ce++)
                {
                    cell = new PdfPCell(new Phrase("Nbre", entete_decision_font));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    cell.FixedHeight = 18f;
                    table.AddCell(cell);

                    cell = new PdfPCell(new Phrase("%", entete_decision_font));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    //cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    cell.FixedHeight = 18f;
                    table.AddCell(cell);
                }

                //Departements
                string[] Departement_ID, Departement_Nom, Classe_ID, Classe_Nom, Cours_ID;
                //string[] Semestre_ID = new string[2] { "1", "2" };
                //string[] Semestre_Nom = new string[2] { "1er", "2eme" };
                int nbre_departement, nbre_classe, nbre_cours;

                string sq0 = "SELECT COUNT(DISTINCT id_departement) FROM departement WHERE id_faculte=@id_faculte";
                MySqlCommand cmd0 = new MySqlCommand(sq0, conn);
                cmd0.Parameters.AddWithValue("@id_faculte", id_faculte);
                nbre_departement = Convert.ToInt32(cmd0.ExecuteScalar());
                if (nbre_departement == 0)
                {
                }
                else
                {
                    Departement_ID = new string[nbre_departement];
                    Departement_Nom = new string[nbre_departement];
                    string sq1 = "SELECT DISTINCT id_departement, departement FROM departement WHERE id_faculte=@id_faculte";
                    MySqlCommand cmd1 = new MySqlCommand(sq1, conn);
                    cmd1.Parameters.AddWithValue("@id_faculte", id_faculte);
                    MySqlDataReader dr1 = cmd1.ExecuteReader();
                    int i = 0;
                    while (dr1.Read())
                    {
                        Departement_ID[i] = string.Format("{0}", dr1.GetInt32(0).ToString());
                        Departement_Nom[i] = string.Format("{0}", dr1.GetString(1));
                        i++;
                    }
                    dr1.Close();
                    for (int dep = 0; dep < nbre_departement; dep++)
                    {
                        string sq2 = "SELECT COUNT(DISTINCT id_classe) FROM classe_par_departement WHERE id_departement=@id_departement";
                        MySqlCommand cmd2 = new MySqlCommand(sq2, conn);
                        cmd2.Parameters.AddWithValue("@id_departement", Convert.ToInt32(Departement_ID[dep]));
                        nbre_classe = Convert.ToInt32(cmd2.ExecuteScalar());

                        cell = new PdfPCell(new Phrase(Departement_Nom[dep], Font_Normal));
                        cell.HorizontalAlignment = Element.ALIGN_LEFT;
                        cell.FixedHeight = 18f;
                        cell.Rowspan = nbre_classe * 2;
                        table.AddCell(cell);

                        Classe_ID = new string[nbre_classe];
                        Classe_Nom = new string[nbre_classe];

                        string sq3 = "SELECT classe.id_classe, classe.classe" +
                            " FROM classe INNER JOIN classe_par_departement ON classe.id_classe = classe_par_departement.id_classe" +
                            " WHERE classe_par_departement.id_departement=@id_departement";
                        MySqlCommand cmd3 = new MySqlCommand(sq3, conn);
                        cmd3.Parameters.AddWithValue("@id_departement", Convert.ToInt32(Departement_ID[dep]));
                        MySqlDataReader dr3 = cmd3.ExecuteReader();
                        i = 0;
                        while (dr3.Read())
                        {
                            Classe_ID[i] = string.Format("{0}", dr3.GetInt32(0).ToString());
                            Classe_Nom[i] = string.Format("{0}", dr3.GetString(1));
                            i++;
                        }
                        dr3.Close();

                        for (int cla = 0; cla < nbre_classe; cla++)
                        {
                            cell = new PdfPCell(new Phrase(Classe_Nom[cla], Font_Normal));
                            cell.HorizontalAlignment = Element.ALIGN_LEFT;
                            cell.FixedHeight = 18f;
                            cell.Rowspan = 2;
                            table.AddCell(cell);



                            string sq4 = "SELECT COUNT(cours.id_cours)" +
                            " FROM unite INNER JOIN cours ON unite.id_unite = cours.id_unite" +
                            " WHERE unite.id_departement=@id_departement AND unite.id_classe=@id_classe AND unite.id_semestre=@id_semestre";
                            MySqlCommand cmd4 = new MySqlCommand(sq4, conn);
                            cmd4.Parameters.AddWithValue("@id_semestre", id_semestre);
                            cmd4.Parameters.AddWithValue("@id_classe", Convert.ToInt32(Classe_ID[cla]));
                            cmd4.Parameters.AddWithValue("@id_departement", Convert.ToInt32(Departement_ID[dep]));
                            nbre_cours = Convert.ToInt32(cmd4.ExecuteScalar());

                            cell = new PdfPCell(new Phrase(nbre_cours.ToString(), Font_Normal));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            cell.FixedHeight = 18f;
                            table.AddCell(cell);

                            Cours_ID = new string[nbre_cours];

                            string sq5 = "SELECT cours.id_cours" +
                            " FROM unite INNER JOIN cours ON unite.id_unite = cours.id_unite" +
                            " WHERE unite.id_departement=@id_departement AND unite.id_classe=@id_classe AND unite.id_semestre=@id_semestre";
                            MySqlCommand cmd5 = new MySqlCommand(sq5, conn);
                            cmd5.Parameters.AddWithValue("@id_semestre", id_semestre);
                            cmd5.Parameters.AddWithValue("@id_classe", Convert.ToInt32(Classe_ID[cla]));
                            cmd5.Parameters.AddWithValue("@id_departement", Convert.ToInt32(Departement_ID[dep]));
                            MySqlDataReader dr5 = cmd5.ExecuteReader();
                            i = 0;
                            while (dr5.Read())
                            {
                                Cours_ID[i] = string.Format("{0}", dr5.GetInt32(0).ToString());
                                i++;
                            }
                            dr5.Close();
                            int cours_encours = 0, cours_termine = 0, cours_attente = 0, cours_attribue = 0, cours_non_attribue = 0, cours_programme = 0, cours_examine = 0, cours_avec_resultat = 0;
                            for (int cours = 0; cours < nbre_cours; cours++)
                            {
                                string sq6 = "SELECT COUNT(*) FROM attribution_cours WHERE id_cours=@id_cours";
                                MySqlCommand cmd6 = new MySqlCommand(sq6, conn);
                                cmd6.Parameters.AddWithValue("@id_cours", Convert.ToInt32(Cours_ID[cours]));
                                int exist = Convert.ToInt32(cmd6.ExecuteScalar());
                                if (exist == 0)
                                {
                                    cours_non_attribue++;
                                }
                                else
                                {
                                    cours_attribue++;
                                    string sq7 = "SELECT etat FROM  attribution_cours  WHERE id_cours=@id_cours";
                                    MySqlCommand cmd7 = new MySqlCommand(sq7, conn);
                                    cmd7.Parameters.AddWithValue("@id_cours", Convert.ToInt32(Cours_ID[cours]));
                                    MySqlDataReader dr7 = cmd7.ExecuteReader();
                                    string etat_cloture = "";
                                    while (dr7.Read())
                                    {
                                        etat_cloture = dr7.GetString(0);
                                    }
                                    dr7.Close();
                                    if (etat_cloture == "Cloturee")
                                    {
                                        cours_termine++;
                                        string sq10 = "SELECT COUNT(*) FROM etudiant_note WHERE id_cours=@id_cours";
                                        MySqlCommand cmd10 = new MySqlCommand(sq10, conn);
                                        cmd10.Parameters.AddWithValue("@id_cours", Convert.ToInt32(Cours_ID[cours]));
                                        int exist3 = Convert.ToInt32(cmd10.ExecuteScalar());
                                        if (exist3 > 0)
                                        {
                                            cours_avec_resultat++;
                                        }
                                        else if (exist3 == 0)
                                        {
                                            string sq11 = "SELECT COUNT(*) FROM horaire INNER JOIN prestation ON horaire.id_horaire = prestation.id_horaire WHERE horaire.id_cours=@id_cours AND horaire.id_horaire_type=@id_type";
                                            MySqlCommand cmd11 = new MySqlCommand(sq11, conn);
                                            cmd11.Parameters.AddWithValue("@id_cours", Convert.ToInt32(Cours_ID[cours]));
                                            cmd11.Parameters.AddWithValue("@id_type", 2);
                                            int exist4 = Convert.ToInt32(cmd11.ExecuteScalar());
                                            if (exist4 > 0)
                                            {
                                                cours_examine++;
                                            }
                                        }
                                    }
                                    else
                                    {
                                        string sq8 = "SELECT COUNT(*) FROM horaire WHERE horaire.id_cours=@id_cours";
                                        MySqlCommand cmd8 = new MySqlCommand(sq8, conn);
                                        cmd8.Parameters.AddWithValue("@id_cours", Convert.ToInt32(Cours_ID[cours]));
                                        int exist1 = Convert.ToInt32(cmd8.ExecuteScalar());
                                        if (exist1 == 0)
                                        {
                                            cours_attente++;
                                        }
                                        else
                                        {
                                            string sq9 = "SELECT COUNT(*) FROM horaire INNER JOIN prestation ON horaire.id_horaire = prestation.id_horaire WHERE horaire.id_cours=@id_cours";
                                            MySqlCommand cmd9 = new MySqlCommand(sq9, conn);
                                            cmd9.Parameters.AddWithValue("@id_cours", Convert.ToInt32(Cours_ID[cours]));
                                            int exist2 = Convert.ToInt32(cmd9.ExecuteScalar());
                                            if (exist2 == 0)
                                            {

                                            }
                                            else
                                            {
                                                cours_encours++;
                                            }
                                            string sq12 = "SELECT COUNT(*) FROM horaire WHERE id_cours=@id_cours AND id_horaire_type=@id_type";
                                            MySqlCommand cmd12 = new MySqlCommand(sq12, conn);
                                            cmd12.Parameters.AddWithValue("@id_cours", Convert.ToInt32(Cours_ID[cours]));
                                            cmd12.Parameters.AddWithValue("@id_type", 2);
                                            int exist5 = Convert.ToInt32(cmd12.ExecuteScalar());
                                            if (exist5 > 0)
                                            {
                                                cours_programme++;
                                            }
                                        }
                                    }
                                }

                            }

                            cell = new PdfPCell(new Phrase(cours_encours.ToString(), Font_Normal));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.FixedHeight = 18f;
                            table.AddCell(cell);

                            cell = new PdfPCell(new Phrase("", Font_Normal));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.FixedHeight = 18f;
                            table.AddCell(cell);

                            cell = new PdfPCell(new Phrase(cours_termine.ToString(), Font_Normal));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.FixedHeight = 18f;
                            table.AddCell(cell);

                            cell = new PdfPCell(new Phrase("", Font_Normal));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.FixedHeight = 18f;
                            table.AddCell(cell);

                            cell = new PdfPCell(new Phrase(cours_attente.ToString(), Font_Normal));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.FixedHeight = 18f;
                            table.AddCell(cell);

                            cell = new PdfPCell(new Phrase("", Font_Normal));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.FixedHeight = 18f;
                            table.AddCell(cell);

                            cell = new PdfPCell(new Phrase(cours_attribue.ToString(), Font_Normal));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.FixedHeight = 18f;
                            table.AddCell(cell);

                            cell = new PdfPCell(new Phrase("", Font_Normal));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.FixedHeight = 18f;
                            table.AddCell(cell);

                            cell = new PdfPCell(new Phrase(cours_non_attribue.ToString(), Font_Normal));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.FixedHeight = 13f;
                            table.AddCell(cell);

                            cell = new PdfPCell(new Phrase("", Font_Normal));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.FixedHeight = 18f;
                            table.AddCell(cell);

                            cell = new PdfPCell(new Phrase(cours_programme.ToString(), Font_Normal));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.FixedHeight = 18f;
                            table.AddCell(cell);

                            cell = new PdfPCell(new Phrase("", Font_Normal));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.FixedHeight = 18f;
                            table.AddCell(cell);

                            cell = new PdfPCell(new Phrase(cours_examine.ToString(), Font_Normal));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.FixedHeight = 18f;
                            table.AddCell(cell);

                            cell = new PdfPCell(new Phrase("", Font_Normal));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.FixedHeight = 18f;
                            table.AddCell(cell);

                            cell = new PdfPCell(new Phrase(cours_avec_resultat.ToString(), Font_Normal));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.FixedHeight = 18f;
                            table.AddCell(cell);

                            cell = new PdfPCell(new Phrase("", Font_Normal));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.FixedHeight = 18f;
                            table.AddCell(cell);

                            cell = new PdfPCell(new Phrase("Etat d'avancement des ensengement par classe", entete_decision_font));
                            cell.HorizontalAlignment = Element.ALIGN_LEFT;
                            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            cell.FixedHeight = 18f;
                            cell.Colspan = 15;
                            table.AddCell(cell);

                            cell = new PdfPCell(new Phrase("0 %", entete_decision_font));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                            cell.FixedHeight = 18f;
                            cell.Colspan = 2;
                            table.AddCell(cell);
                        }
                        cell = new PdfPCell(new Phrase("Etat d'avancement des ensengement par departement", entete_decision_font));
                        cell.HorizontalAlignment = Element.ALIGN_LEFT;
                        cell.BackgroundColor = BaseColor.CYAN;
                        cell.FixedHeight = 18f;
                        cell.Colspan = 17;
                        table.AddCell(cell);

                        cell = new PdfPCell(new Phrase("0 %", entete_decision_font));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.CYAN;
                        cell.FixedHeight = 18f;
                        cell.Colspan = 2;
                        table.AddCell(cell);
                    }
                }


                doc.Add(table);

                PdfPTable tVisa = new PdfPTable(5);//Creer une table de 5 colonnes
                float[] colwithv = { 7f, 7f, 7f, 7f, 12f };//parametrer les domensions(largeur) de chacune des collonnes
                tVisa.SetWidths(colwithv);//appliquer ces dimenstions a l atable


                cell = new PdfPCell(new Phrase("", Font_Normal));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 5;
                tVisa.AddCell(cell);

                cell = new PdfPCell(new Phrase("", Font_Normal));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 5;
                tVisa.AddCell(cell);

                cell = new PdfPCell(new Phrase("", Font_Normal));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 5;
                tVisa.AddCell(cell);

                cell = new PdfPCell(new Phrase("\nVISA DU DECANAT", Font_Normal));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 2;
                tVisa.AddCell(cell);

                cell = new PdfPCell(new Phrase("", Font_Normal));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                cell.Colspan = 2;
                tVisa.AddCell(cell);

                string dat = "Fait à Ngozi, le " + DateTime.Today.Date.ToShortDateString();
                string nom_rect = "";

                cell = new PdfPCell(new Phrase(dat + "\n\n" + nom_rect, Font_Normal));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidthLeft = 0;
                cell.BorderWidthRight = 0;
                cell.BorderWidthTop = 0;
                cell.BorderWidth = 0;
                tVisa.AddCell(cell);

                Paragraph pVisa = new Paragraph();
                //parf.IndentationLeft = 240;
                pVisa.Alignment = Element.ALIGN_CENTER;
                //pVisa.SpacingAfter = 6;
                pVisa.SpacingBefore = 8;
                pVisa.Add(tVisa);

                doc.Add(pVisa);

                wri.PageEvent = new Foot();
                doc.Close();
                System.Diagnostics.Process.Start(outputFile);
                conn.Close();
            }
            catch (Exception ex)
            {
                //MessageBox.Show(ex.Message);
            }
        }
        public void horaire_par_departement(int id_dep, string date_debut, string date_fin)
        {
            Font times = new Font(BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, false), 14, Font.BOLD, BaseColor.BLACK);
            Font time_all_text = new Font(BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, false), 11, Font.BOLD, BaseColor.BLACK);
            Font time_all_text1 = new Font(BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, false), 10, Font.NORMAL, BaseColor.BLACK);
            Font timesmall = new Font(BaseFont.CreateFont(BaseFont.COURIER_BOLD, BaseFont.CP1252, false), 10, Font.NORMAL, BaseColor.BLUE);
            Font timesunderlined = new Font(Font.FontFamily.TIMES_ROMAN, 12, Font.BOLD | Font.UNDERLINE, BaseColor.BLACK);

            int id_departement = id_dep;
            string date1 = date_debut;
            string date2 = date_fin;


            iTextSharp.text.Document doc = new iTextSharp.text.Document(iTextSharp.text.PageSize.A4.Rotate(), 5, 5, 5, 5);
            string docname = "horaire_" + rapports_statistique.date_op + ".pdf";
            string outputFile = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments), @"iDocument", docname);
            FileStream fs = new FileStream(outputFile, FileMode.Create, FileAccess.Write, FileShare.None);
            PdfWriter wri = PdfWriter.GetInstance(doc, fs);
            doc.Open();

            MakeEntete(doc);


            iTextSharp.text.Paragraph txt_titre1 = new iTextSharp.text.Paragraph("Departement: " + horaire_historique.nom_departement, times);
            txt_titre1.Alignment = Element.ALIGN_CENTER;
            txt_titre1.SpacingAfter = 10;
            doc.Add(txt_titre1);

            iTextSharp.text.Paragraph txt_titre = new iTextSharp.text.Paragraph("HORAIRE DU " + date1 + "  AU  " + date2, timesunderlined);
            txt_titre.Alignment = Element.ALIGN_CENTER;
            txt_titre.SpacingAfter = 14;
            doc.Add(txt_titre);

            //CORPS DU RAPPORT 
            PdfPTable table = new PdfPTable(9);
            table.HorizontalAlignment = Element.ALIGN_CENTER;
            float[] colwiths = { 45f, 20f, 60f, 60f, 60f, 60f, 60f, 60f, 50f };//parametrer les domensions(largeur) de chacune des collonnes
            table.SetWidths(colwiths);//appliquer ces dimenstions a l atable

            string[] Classe_ID = new string[100];
            string[] Classe_Nom = new string[100];
            string[] jour = new string[] { "Lundi", "Mardi", "Mercredi", "Jeudi", "Vendredi", "Samedi", "Dimanche" };
            string[] dates = new string[] { horaire.lu, horaire.mar, horaire.mer, horaire.jeu, horaire.ve, horaire.sam, horaire.dim };
            string[] periodes = new string[] { "AM", "PM" };
            try
            {
                Connection conn = new Connection();
                conn.Open();
                PdfPCell cell = new PdfPCell(new Phrase(""));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.VerticalAlignment = Element.ALIGN_CENTER;
                cell.Rowspan = 2;
                cell.Colspan = 2;
                table.AddCell(cell);

                for (int m = 0; m < 7; m++)
                {
                    cell = new PdfPCell(new Phrase(jour[m], times));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);
                }

                for (int m = 0; m < 7; m++)
                {
                    cell = new PdfPCell(new Phrase(dates[m], time_all_text));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);
                }

                string sqlv = "SELECT COUNT( DISTINCT id_classe) FROM classe_par_departement WHERE id_departement=@id_departement";
                MySqlCommand cmdv = new MySqlCommand(sqlv, conn);
                cmdv.Parameters.AddWithValue("@id_departement", id_departement);
                int nbre_classe = Convert.ToInt32(cmdv.ExecuteScalar());

                string sqlvv = "SELECT classe.id_classe, classe.classe" +
                    " FROM classe_par_departement INNER JOIN classe ON classe_par_departement.id_classe = classe.id_classe" +
                    " WHERE classe_par_departement.id_departement=@id_departement";
                MySqlCommand cmdvv = new MySqlCommand(sqlvv, conn);
                cmdvv.Parameters.AddWithValue("@id_departement", id_departement);
                MySqlDataReader drvv = cmdvv.ExecuteReader();
                int j = 0;
                while (drvv.Read() && j < nbre_classe)
                {
                    Classe_ID[j] = string.Format("{0}", drvv.GetInt32(0).ToString());
                    Classe_Nom[j] = string.Format("{0}", drvv.GetString(1));
                    j++;
                }
                drvv.Close();


                for (int a = 0; a < nbre_classe; a++)
                {
                    cell = new PdfPCell(new Phrase(Classe_Nom[a], times));
                    cell.Rowspan = 2;
                    cell.Rotation = 90;
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.VerticalAlignment = Element.ALIGN_CENTER;
                    table.AddCell(cell);
                    for (int p = 0; p < 2; p++)
                    {
                        cell = new PdfPCell(new Phrase(periodes[p], times));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        table.AddCell(cell);
                        for (int da = 0; da < 7; da++)
                        {
                            string sql0 = "SELECT COUNT(id_cours) FROM horaire WHERE id_classe=@id_classe AND id_departement=@id_departement AND date=@date AND jour=@jour AND periode=@periode";
                            MySqlCommand cmd0 = new MySqlCommand(sql0, conn);
                            cmd0.Parameters.AddWithValue("@id_classe", Convert.ToInt32(Classe_ID[a]));
                            cmd0.Parameters.AddWithValue("@id_departement", id_departement);
                            cmd0.Parameters.AddWithValue("@date", dates[da]);
                            cmd0.Parameters.AddWithValue("@jour", jour[da]);
                            cmd0.Parameters.AddWithValue("@periode", periodes[p]);
                            int hor_exist = Convert.ToInt32(cmd0.ExecuteScalar());
                            if (hor_exist == 0)
                            {
                                cell = new PdfPCell(new Phrase("", time_all_text1));
                                //cell.FixedHeight = 35f;
                                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                table.AddCell(cell);
                            }
                            else
                            {
                                string sql1 = "SELECT cours.cours, horaire.id_horaire_type" +
                                    " FROM cours INNER JOIN horaire ON cours.id_cours = horaire.id_cours" +
                                    " WHERE horaire.id_departement=@id_departement AND horaire.id_classe=@id_classe AND horaire.date=@date AND horaire.jour=@jour AND horaire.periode=@periode";
                                MySqlCommand cmd1 = new MySqlCommand(sql1, conn);
                                cmd1.Parameters.AddWithValue("@id_departement", id_departement);
                                cmd1.Parameters.AddWithValue("@id_classe", Convert.ToInt32(Classe_ID[a]));
                                cmd1.Parameters.AddWithValue("@date", dates[da]);
                                cmd1.Parameters.AddWithValue("@jour", jour[da]);
                                cmd1.Parameters.AddWithValue("@periode", periodes[p]);
                                MySqlDataReader drm = cmd1.ExecuteReader();
                                while (drm.Read())
                                {
                                    if (drm.GetInt32(1) == 2)
                                    {
                                        cell = new PdfPCell(new Phrase("Examen de " + drm.GetString(0), time_all_text1));
                                        //cell.FixedHeight = 45f;
                                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                        table.AddCell(cell);
                                    }
                                    else
                                    {
                                        cell = new PdfPCell(new Phrase(drm.GetString(0), time_all_text1));
                                        //cell.FixedHeight = 45f;
                                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                                        table.AddCell(cell);
                                    }
                                }
                                drm.Close();
                            }
                        }

                    }
                }
                conn.Close();
            }
            catch (Exception ex)
            {
                //MessageBox.Show(ex.Message);
            }
            doc.Add(table);
            wri.PageEvent = new Foot();
            doc.Close();
            System.Diagnostics.Process.Start(outputFile);
        }
        */




        public void SetHeig(PdfPCell cell)
        {
            cell.FixedHeight = 30f;
        }
        public void MakeEntete(iTextSharp.text.Document doc)
        {
            Font times = new Font(BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, false), 14, Font.BOLD, BaseColor.BLACK);
            Font time_all_text = new Font(BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, false), 11, Font.BOLD, BaseColor.BLACK);
            Font time_all_text1 = new Font(BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, false), 10, Font.NORMAL, BaseColor.BLACK);
            Font timesmall = new Font(BaseFont.CreateFont(BaseFont.COURIER_BOLD, BaseFont.CP1252, false), 10, Font.NORMAL, BaseColor.BLUE);
            Font timesunderlined = new Font(Font.FontFamily.TIMES_ROMAN, 12, Font.BOLD | Font.UNDERLINE, BaseColor.BLACK);

            iTextSharp.text.Paragraph txt_unif = new iTextSharp.text.Paragraph("UNIVERSITE DE NGOZI", times);
            txt_unif.Alignment = Element.ALIGN_JUSTIFIED;
            txt_unif.IndentationLeft = 20;
            doc.Add(txt_unif);

            iTextSharp.text.Paragraph txt_logo = new iTextSharp.text.Paragraph();
            iTextSharp.text.Image jeepg = iTextSharp.text.Image.GetInstance("logoung_doc.jpg");
            txt_logo.Add(jeepg);
            txt_logo.IndentationLeft = 45;
            doc.Add(txt_logo);

            iTextSharp.text.Paragraph txt_adress_tel = new iTextSharp.text.Paragraph("Tel: (+257) 22 30 22 29", timesmall);
            txt_adress_tel.Alignment = Element.ALIGN_JUSTIFIED;
            txt_adress_tel.IndentationLeft = 20;
            doc.Add(txt_adress_tel);


            iTextSharp.text.Paragraph txt_adress_email = new iTextSharp.text.Paragraph("E-mail: ungozi@univ-ngozi.bi", timesmall);
            txt_adress_email.Alignment = Element.ALIGN_JUSTIFIED;
            txt_adress_email.IndentationLeft = 20;
            doc.Add(txt_adress_email);


            iTextSharp.text.Paragraph txt_adress = new iTextSharp.text.Paragraph("Site web: www.univ-ngozi.bi", timesmall);
            txt_adress.Alignment = Element.ALIGN_JUSTIFIED;
            txt_adress.IndentationLeft = 20;
            txt_adress.SpacingAfter = 35;
            doc.Add(txt_adress);
        }
        private static PdfPCell MainHeader(iTextSharp.text.Font Header, PdfPCell cell, PdfPTable tab)
        {
            cell = new PdfPCell(new Phrase("ORIGINES ET VACATIONS", Header));
            cell.Colspan = 2;
            cell.Rowspan = 2;
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            tab.AddCell(cell);

            cell = new PdfPCell(new Phrase("AL", Header));
            cell.Colspan = 2;
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            tab.AddCell(cell);


            cell = new PdfPCell(new Phrase("AI", Header));
            cell.Colspan = 2;
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            tab.AddCell(cell);

            cell = new PdfPCell(new Phrase("MA", Header));
            cell.Colspan = 2;
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            tab.AddCell(cell);

            cell = new PdfPCell(new Phrase("CE", Header));
            cell.Colspan = 2;
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            tab.AddCell(cell);

            cell = new PdfPCell(new Phrase("CC", Header));
            cell.Colspan = 2;
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            tab.AddCell(cell);


            cell = new PdfPCell(new Phrase("PA", Header));
            cell.Colspan = 2;
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            tab.AddCell(cell);


            cell = new PdfPCell(new Phrase("PO", Header));
            cell.Colspan = 2;
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            tab.AddCell(cell);


            cell = new PdfPCell(new Phrase("PC", Header));
            cell.Colspan = 2;
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            tab.AddCell(cell);


            cell = new PdfPCell(new Phrase("TOT", Header));
            cell.Colspan = 2;
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            tab.AddCell(cell);

            cell = new PdfPCell(new Phrase("F", Header));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            tab.AddCell(cell);
            cell = new PdfPCell(new Phrase("F+M", Header));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            tab.AddCell(cell);
            cell = new PdfPCell(new Phrase("F", Header));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            tab.AddCell(cell);
            cell = new PdfPCell(new Phrase("F+M", Header));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            tab.AddCell(cell);
            cell = new PdfPCell(new Phrase("F", Header));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            tab.AddCell(cell);
            cell = new PdfPCell(new Phrase("F+M", Header));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            tab.AddCell(cell);
            cell = new PdfPCell(new Phrase("F", Header));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            tab.AddCell(cell);
            cell = new PdfPCell(new Phrase("F+M", Header));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            tab.AddCell(cell);
            cell = new PdfPCell(new Phrase("F", Header));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            tab.AddCell(cell);
            cell = new PdfPCell(new Phrase("F+M", Header));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            tab.AddCell(cell);
            cell = new PdfPCell(new Phrase("F", Header));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            tab.AddCell(cell);
            cell = new PdfPCell(new Phrase("F+M", Header));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            tab.AddCell(cell);
            cell = new PdfPCell(new Phrase("F", Header));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            tab.AddCell(cell);
            cell = new PdfPCell(new Phrase("F+M", Header));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            tab.AddCell(cell);
            cell = new PdfPCell(new Phrase("F", Header));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            tab.AddCell(cell);
            cell = new PdfPCell(new Phrase("F+M", Header));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            tab.AddCell(cell);
            cell = new PdfPCell(new Phrase("F", Header));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            tab.AddCell(cell);
            cell = new PdfPCell(new Phrase("F+M", Header));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            tab.AddCell(cell);

            return cell;
        }
        private static PdfPCell MainHeader1(iTextSharp.text.Font Header, PdfPCell cell, PdfPTable tab)
        {
            cell = new PdfPCell(new Phrase("ORIGINES ET VACATIONS", Header));
            cell.Colspan = 2;
            cell.Rowspan = 2;
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            tab.AddCell(cell);

            cell = new PdfPCell(new Phrase("AL", Header));
            cell.Colspan = 2;
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            tab.AddCell(cell);


            cell = new PdfPCell(new Phrase("AI", Header));
            cell.Colspan = 2;
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            tab.AddCell(cell);

            cell = new PdfPCell(new Phrase("MA", Header));
            cell.Colspan = 2;
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            tab.AddCell(cell);

            cell = new PdfPCell(new Phrase("CE", Header));
            cell.Colspan = 2;
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            tab.AddCell(cell);

            cell = new PdfPCell(new Phrase("CC", Header));
            cell.Colspan = 2;
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            tab.AddCell(cell);


            cell = new PdfPCell(new Phrase("PA", Header));
            cell.Colspan = 2;
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            tab.AddCell(cell);


            cell = new PdfPCell(new Phrase("PO", Header));
            cell.Colspan = 2;
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            tab.AddCell(cell);


            cell = new PdfPCell(new Phrase("PC", Header));
            cell.Colspan = 2;
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            tab.AddCell(cell);


            cell = new PdfPCell(new Phrase("TOT", Header));
            cell.Colspan = 2;
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            tab.AddCell(cell);

            cell = new PdfPCell(new Phrase("F", Header));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            tab.AddCell(cell);
            cell = new PdfPCell(new Phrase("F+M", Header));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            tab.AddCell(cell);
            cell = new PdfPCell(new Phrase("F", Header));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            tab.AddCell(cell);
            cell = new PdfPCell(new Phrase("F+M", Header));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            tab.AddCell(cell);
            cell = new PdfPCell(new Phrase("F", Header));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            tab.AddCell(cell);
            cell = new PdfPCell(new Phrase("F+M", Header));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            tab.AddCell(cell);
            cell = new PdfPCell(new Phrase("F", Header));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            tab.AddCell(cell);
            cell = new PdfPCell(new Phrase("F+M", Header));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            tab.AddCell(cell);
            cell = new PdfPCell(new Phrase("F", Header));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            tab.AddCell(cell);
            cell = new PdfPCell(new Phrase("F+M", Header));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            tab.AddCell(cell);
            cell = new PdfPCell(new Phrase("F", Header));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            tab.AddCell(cell);
            cell = new PdfPCell(new Phrase("F+M", Header));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            tab.AddCell(cell);
            cell = new PdfPCell(new Phrase("F", Header));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            tab.AddCell(cell);
            cell = new PdfPCell(new Phrase("F+M", Header));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            tab.AddCell(cell);
            cell = new PdfPCell(new Phrase("F", Header));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            tab.AddCell(cell);
            cell = new PdfPCell(new Phrase("F+M", Header));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            tab.AddCell(cell);
            cell = new PdfPCell(new Phrase("F", Header));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            tab.AddCell(cell);
            cell = new PdfPCell(new Phrase("F+M", Header));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            tab.AddCell(cell);

            return cell;
        }

        public void Etudiant_Rapport_Presence_par_Classe(int id_a, int id_f, int id_d, int id_cl, string nom_anne, string nom_fac, string nom_dep, string nom_cl, int has_depart, int nb_crs)
        {
            int id_anne = id_a;
            int id_faculte = id_f;
            int id_departement = id_d;
            int id_classe = id_cl;
            int nb_cours = nb_crs;
            int has_departement = has_depart;
            string nom_anneee = nom_anne, nom_faculte = nom_fac, nom_departement = nom_dep, nom_classe = nom_cl;

            Create_Folder();


            DateTime dt = DateTime.Now;
            int year = dt.Year;
            int mois = dt.Month;
            int jour = dt.Day;
            int heure = dt.Hour;
            int min = dt.Minute;
            int sec = dt.Month;
            string date = jour + "-" + mois + "-" + year + "_à_" + heure + "h" + min + "min" + sec + "sec";

            iTextSharp.text.Document doc = new iTextSharp.text.Document(PageSize.A4.Rotate(), 0, 0, 5, 5);
            string docname = "Rapport_pointage" + date + ".pdf";
            string outputFile = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.Desktop), @"BMDSys", docname);
            FileStream fs = new FileStream(outputFile, FileMode.Create, FileAccess.Write, FileShare.None);
            PdfWriter wri = PdfWriter.GetInstance(doc, fs);
            doc.Open();

            conn = new MySqlConnection(Authentification.MyString);
            conn.Open();

            string universite = Load_Institution(conn);

            string coordonee = Load_Adress(conn);
            string value = coordonee;
            string[] op = value.Split('-');
            site = op[0];
            siege = op[1];
            telephone = op[2];
            b_postale = op[3];

            PdfPCell cell = new PdfPCell(new Phrase("", font_bold_10));
            PdfPTable table1 = first_header(conn, universite, ref cell, "");
            doc.Add(table1);

            iTextSharp.text.Paragraph txt_t = new iTextSharp.text.Paragraph(" ", font_bold_8_black);
            txt_t.Alignment = Element.ALIGN_CENTER;
            txt_t.SpacingBefore = 10;
            txt_t.SpacingAfter = 10;
            doc.Add(txt_t);

            PdfPTable taba = new PdfPTable(4);//Creer une table de 5 colonnes
            float[] coltaba = { 10f, 12f, 6f, 15f };//parametrer les domensions(largeur) de chacune des collonnes
            taba.SetWidths(coltaba);

            cell = new PdfPCell(new Phrase("Année Academique", font_bold_8_black));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidth = 0;
            taba.AddCell(cell);

            cell = new PdfPCell(new Phrase(": " + nom_anneee, font_bold_8_black));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidth = 0;
            taba.AddCell(cell);

            cell = new PdfPCell(new Phrase(" ", font_bold_8_black));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidth = 0;
            cell.Colspan = 2;
            cell.Rowspan = 4;
            taba.AddCell(cell);

            cell = new PdfPCell(new Phrase("Faculte", font_bold_8_black));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidth = 0;
            taba.AddCell(cell);

            cell = new PdfPCell(new Phrase(": " + nom_faculte, font_bold_8_black));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidth = 0;
            taba.AddCell(cell);
            cell = new PdfPCell(new Phrase("Département", font_bold_8_black));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidth = 0;
            taba.AddCell(cell);

            if (has_departement == 0 || has_departement == 1)
            {
                cell = new PdfPCell(new Phrase(": ", font_bold_8_black));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);
            }
            else if (has_departement > 1)
            {
                cell = new PdfPCell(new Phrase(": " + nom_departement, font_bold_8_black));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);
            }

            cell = new PdfPCell(new Phrase("Classe", font_bold_8_black));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidth = 0;
            taba.AddCell(cell);

            cell = new PdfPCell(new Phrase(": " + nom_classe, font_bold_8_black));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidth = 0;
            taba.AddCell(cell);
            doc.Add(taba);

            Paragraph parf = new Paragraph();
            //parf.IndentationLeft = 240;
            string ta = "RAPPORT DES PRESENCES PAR CLASSE";
            parf.Add(new Phrase(ta, font_underlined_9_bold));
            parf.Alignment = Element.ALIGN_CENTER;
            parf.SpacingAfter = 10;
            parf.SpacingBefore = 10;
            doc.Add(parf);

            PdfPTable tab = new PdfPTable(nb_cours + 5);
            List<float> widthsList = new List<float>();
            float[] widths = new float[nb_cours + 5];
            widthsList.Add(2f);
            widthsList.Add(13f);
            widthsList.Add(2f);
            widthsList.Add(2f);
            widthsList.Add(2f);

            for (int i = 0; i < nb_cours; i++)
            {
                widthsList.Add(2f);
            }
            widths = widthsList.ToArray();
            tab.SetWidths(widths);

            cell = new PdfPCell(new Phrase("", font_bold_8_black));
            cell.Colspan = 2;
            cell.Rowspan = 3;
            cell.BorderWidthLeft = 0;
            cell.BorderWidthTop = 0;
            cell.BorderWidthBottom = 0;
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.VerticalAlignment = Element.ALIGN_CENTER;
            //cell.FixedHeight = 18f;
            tab.AddCell(cell);

            int[] nb_cours_sem = new int[10];
            int[] id_sem = new int[10];
            int[] id_uni = new int[30];

            int semComp = 0, unitComp = 0; int nb_Semestre = 0;

            string rqt0 = "select count(DISTINCT semestre) from semestre INNER JOIN unite ON unite.id_semestre=semestre.id_semestre"
                            + "  WHERE unite.id_annee=@anne AND unite.id_faculte=@faculte AND unite.id_departement=@departement AND unite.id_classe=@classe";
            MySqlCommand cmd0 = new MySqlCommand(rqt0, conn);
            cmd0.Parameters.AddWithValue("@anne", id_anne);
            cmd0.Parameters.AddWithValue("@faculte", id_faculte);
            cmd0.Parameters.AddWithValue("@departement", id_departement);
            cmd0.Parameters.AddWithValue("@classe", id_classe);
            nb_Semestre = Convert.ToInt32(cmd0.ExecuteScalar());

            string rqt1 = "select DISTINCT semestre.id_semestre,semestre.semestre, COUNT(cours) as cour"
                         + " from semestre INNER JOIN unite ON semestre.id_semestre=unite.id_semestre INNER JOIN cours"
                         + " ON cours.id_unite=unite.id_unite WHERE cours.id_annee=@anne AND cours.id_faculte=@faculte AND "
                         + " cours.id_departement=@departement AND cours.id_classe=@classe GROUP BY semestre.id_semestre";
            MySqlCommand cmd1 = new MySqlCommand(rqt1, conn);
            cmd1.Parameters.AddWithValue("@anne", id_anne);
            cmd1.Parameters.AddWithValue("@faculte", id_faculte);
            cmd1.Parameters.AddWithValue("@departement", id_departement);
            cmd1.Parameters.AddWithValue("@classe", id_classe);
            MySqlDataReader dr1 = cmd1.ExecuteReader();

            while (dr1.Read())
            {
                cell = new PdfPCell(new Phrase(dr1.GetString(1) + " Semestre", font_bold_8));
                cell.Colspan = dr1.GetInt32(2) + 1;
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                //cell.FixedHeight = 18f;
                tab.AddCell(cell);
                id_sem[semComp] = dr1.GetInt32(0);
                nb_cours_sem[semComp] = dr1.GetInt32(2);
                semComp++;
            }
            dr1.Close();

            cell = new PdfPCell(new Phrase("TOTAL", font_bold_8));
            cell.Rotation = 90;
            cell.Rowspan = 3;
            cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            tab.AddCell(cell);

            for (int j = 0; j < nb_Semestre; j++)
            {
                string rqt2 = "SELECT unite.id_unite,unite.unite,COUNT(cours) FROM unite INNER JOIN cours "
                                + " ON unite.id_unite=cours.id_unite WHERE unite.id_semestre=@semestre AND cours.id_annee=@annee "
                                + " AND cours.id_faculte=@faculte AND cours.id_departement=@departement AND cours.id_classe=@classe GROUP BY unite.id_unite;";
                MySqlCommand cmd2 = new MySqlCommand(rqt2, conn);
                cmd2.Parameters.AddWithValue("@faculte", id_faculte);
                cmd2.Parameters.AddWithValue("@departement", id_departement);
                cmd2.Parameters.AddWithValue("@classe", id_classe);
                cmd2.Parameters.AddWithValue("@annee", id_anne);
                cmd2.Parameters.AddWithValue("@semestre", id_sem[j]);
                MySqlDataReader dr2 = cmd2.ExecuteReader();
                while (dr2.Read())
                {
                    cell = new PdfPCell(new Phrase(dr2.GetString(1), font_bold_8));
                    cell.Colspan = dr2.GetInt32(2);
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    //cell.FixedHeight = 18f;
                    tab.AddCell(cell);
                    id_uni[unitComp] = dr2.GetInt32(0);
                    unitComp++;
                }

                cell = new PdfPCell(new Phrase("Total", font_bold_8));
                cell.Rotation = 90;
                cell.Rowspan = 2;
                cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                tab.AddCell(cell);

                dr2.Close();
            }

            List<int> cours_List = new List<int>();
            int[] hre = new int[50];
            int heureCompt = 0;
            for (int p = 0; p < id_uni.Length; p++)
            {
                string rqt3 = "SELECT cours.id_cours,cours.cours,(cours.credits*15) as heure FROM cours INNER JOIN unite "
                                + " ON unite.id_unite=cours.id_unite WHERE unite.id_unite=@id_unit";
                MySqlCommand cmd3 = new MySqlCommand(rqt3, conn);
                cmd3.Parameters.AddWithValue("@id_unit", id_uni[p]);
                MySqlDataReader dr3 = cmd3.ExecuteReader();

                while (dr3.Read())
                {
                    cell = new PdfPCell(new Phrase(dr3.GetString(1), font_normal_7));
                    cell.Rotation = 90;
                    cell.HorizontalAlignment = Element.ALIGN_BOTTOM;
                    tab.AddCell(cell);
                    hre[heureCompt] = dr3.GetInt32(2);
                    cours_List.Add(dr3.GetInt32(0));
                    heureCompt++;
                }
                dr3.Close();
            }

            int[] cours_List_Id = cours_List.ToArray();

            cell = new PdfPCell(new Phrase(" ", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidth = 0;
            tab.AddCell(cell);

            cell = new PdfPCell(new Phrase("Nom et Prenom ", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            tab.AddCell(cell);

            int compt = 0;
            int totalHrs = 0;
            for (int i = 0; i < nb_Semestre; i++)
            {
                int somme = 0;
                for (int j = 0; j < nb_cours_sem[i]; j++)
                {
                    cell = new PdfPCell(new Phrase("" + hre[compt] + "H", font_bold_8));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    tab.AddCell(cell);
                    somme = somme + hre[compt];
                    compt++;
                }

                totalHrs = totalHrs + somme;
                cell = new PdfPCell(new Phrase("" + somme + "H", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                tab.AddCell(cell);

            }

            cell = new PdfPCell(new Phrase(totalHrs + "H", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BackgroundColor = BaseColor.LIGHT_GRAY;
            tab.AddCell(cell);


            /*----------------------------------ETUDIANTS--------------------------------------------*/
            List<string> etud_List = new List<string>();
            List<int> etud_List_id = new List<int>();
            int num_Etud = 1;
            string rqt4 = "SELECT DISTINCT etu.id_etudiant, CONCAT(etu.nom," + "  " + "etu.prenom) as fullname "
                            + " FROM etudiant etu INNER JOIN etudiant_inscription etIns ON etu.id_etudiant=etIns.id_etudiant"
                            + " WHERE etIns.id_annee=@id_an AND etIns.id_faculte=@id_fac AND etIns.id_departement=@id_dep"
                            + " AND etIns.id_classe=@id_cl ORDER BY fullname";
            MySqlCommand cmd4 = new MySqlCommand(rqt4, conn);
            cmd4.Parameters.AddWithValue("@id_an", id_anne);
            cmd4.Parameters.AddWithValue("@id_fac", id_faculte);
            cmd4.Parameters.AddWithValue("@id_dep", id_departement);
            cmd4.Parameters.AddWithValue("@id_cl", id_classe);
            MySqlDataReader dr4 = cmd4.ExecuteReader();

            while (dr4.Read())
            {
                etud_List.Add(dr4.GetString(1));
                etud_List_id.Add(dr4.GetInt32(0));
            }
            dr4.Close();

            string[] etudiants = etud_List.ToArray();
            int[] etidiant_Id = etud_List_id.ToArray();

            for (int n = 0; n < etudiants.Length; n++)
            {
                List<DateTime> List_Date_Point = new List<DateTime>();
                List<TimeSpan> List_H_Entre_Point = new List<TimeSpan>();
                List<TimeSpan> List_H_Sortie_Point = new List<TimeSpan>();

                TimeSpan mention_An = new TimeSpan();
                int etComp = 0;

                cell = new PdfPCell(new Phrase("" + num_Etud, font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                tab.AddCell(cell);

                cell = new PdfPCell(new Phrase("" + etudiants[n], font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                tab.AddCell(cell);

                string rqt5 = "SELECT etudiant.nom, etudiant.prenom,pointage.heure_entre,pointage.heure_sortie, pointage.date "
                               + " FROM etudiant INNER JOIN etudiant_inscription etIns ON etudiant.id_etudiant=etIns.id_etudiant "
                               + " INNER JOIN pointage ON pointage.id_inscription=etIns.id_inscription WHERE etIns.id_annee=@id_ann "
                               + " AND etIns.id_faculte=@id_fac AND etIns.id_departement=@id_dep AND etIns.id_classe=@id_cla AND"
                               + " pointage.heure_sortie!='00:00:00' AND etudiant.id_etudiant=@id_etud";

                MySqlCommand cmd5 = new MySqlCommand(rqt5, conn);
                cmd5.Parameters.AddWithValue("@id_ann", id_anne);
                cmd5.Parameters.AddWithValue("@id_fac", id_faculte);
                cmd5.Parameters.AddWithValue("@id_dep", id_departement);
                cmd5.Parameters.AddWithValue("@id_cla", id_classe);
                cmd5.Parameters.AddWithValue("@id_etud", etidiant_Id[n]);
                MySqlDataReader dr5 = cmd5.ExecuteReader();

                while (dr5.Read())
                {
                    List_Date_Point.Add(dr5.GetDateTime(4));
                    List_H_Entre_Point.Add(dr5.GetTimeSpan(2));
                    List_H_Sortie_Point.Add(dr5.GetTimeSpan(3));
                }
                dr5.Close();

                DateTime[] Date_Point = List_Date_Point.ToArray();
                TimeSpan[] H_Entre_Point = List_H_Entre_Point.ToArray();
                TimeSpan[] H_Sortie_Point = List_H_Sortie_Point.ToArray();

                int compteur_Cours = 0;

                for (int i = 0; i < nb_Semestre; i++)
                {
                    TimeSpan somme_Sem = new TimeSpan();
                    int somme_Sem_Hr = 0;

                    for (int j = 0; j < nb_cours_sem[i]; j++)
                    {
                        TimeSpan somme = new TimeSpan();
                        for (int p = 0; p < Date_Point.Length; p++)
                        {
                            string laDate = Date_Point[p].ToString("dd-MM-yyyy");

                            string rqt6 = "SELECT horaire.id_horaire, horaire.date, prestation.heureD,prestation.heureF,"
                                         + " cours.cours FROM horaire INNER JOIN cours ON cours.id_cours=horaire.id_cours "
                                         + " INNER JOIN prestation ON prestation.id_horaire=horaire.id_horaire WHERE"
                                         + " cours.id_annee=@id_annee AND cours.id_faculte=@id_fac AND cours.id_departement=@id_dep AND "
                                         + " cours.id_classe=@id_classe AND horaire.date=@dateP AND cours.id_cours=@id_cour";
                            MySqlCommand cmd6 = new MySqlCommand(rqt6, conn);
                            cmd6.Parameters.AddWithValue("@id_annee", id_anne);
                            cmd6.Parameters.AddWithValue("@id_fac", id_faculte);
                            cmd6.Parameters.AddWithValue("@id_dep", id_departement);
                            cmd6.Parameters.AddWithValue("@id_classe", id_classe);
                            cmd6.Parameters.AddWithValue("@dateP", laDate);
                            cmd6.Parameters.AddWithValue("@id_cour", cours_List_Id[compteur_Cours]);
                            MySqlDataReader dr6 = cmd6.ExecuteReader();

                            while (dr6.Read())
                            {
                                string H_D = dr6.GetString(2);
                                string H_F = dr6.GetString(3);

                                string[] H_D_tab = H_D.Split('h');
                                string[] H_F_tab = H_F.Split('h');

                                TimeSpan h_d1 = TimeSpan.FromHours(Convert.ToDouble(H_D_tab[0]));
                                TimeSpan h_d2 = TimeSpan.FromMinutes(Convert.ToDouble(H_D_tab[1]));
                                TimeSpan Prest_Hr_Debut = h_d1.Add(h_d2);

                                TimeSpan h_d3 = TimeSpan.FromHours(Convert.ToDouble(H_F_tab[0]));
                                TimeSpan h_d4 = TimeSpan.FromMinutes(Convert.ToDouble(H_F_tab[1]));
                                TimeSpan Prest_Hr_Fin = h_d3.Add(h_d4);

                                if (Prest_Hr_Fin <= H_Entre_Point[p])
                                {
                                }
                                else if (Prest_Hr_Debut >= H_Sortie_Point[p])
                                {
                                }
                                else if (Prest_Hr_Debut <= H_Entre_Point[p] && Prest_Hr_Fin <= H_Sortie_Point[p])
                                {
                                    // Si vrai, on va faire la difference entre (Prest_Hr_Fin - H_Entre_Point[p])
                                    somme = somme.Add(Prest_Hr_Fin.Subtract(H_Entre_Point[p]));
                                }
                                else if (Prest_Hr_Debut <= H_Entre_Point[p] && Prest_Hr_Fin >= H_Sortie_Point[p])
                                {
                                    //Si vrai, on va faire la difference entre (H_Sortie_Point[p] - H_Entre_Point[p])
                                    somme = somme.Add(H_Sortie_Point[p].Subtract(H_Entre_Point[p]));
                                }
                                else if (Prest_Hr_Debut >= H_Entre_Point[p] && Prest_Hr_Fin <= H_Sortie_Point[p])
                                {
                                    //Si vrai, on va faire la difference entre (Prest_Hr_Fin - Prest_Hr_Debut)
                                    somme = somme.Add(Prest_Hr_Fin.Subtract(Prest_Hr_Debut));
                                }
                                else if (Prest_Hr_Debut >= H_Entre_Point[p] && Prest_Hr_Fin >= H_Sortie_Point[p])
                                {
                                    //Si vrai, on va faire la difference entre (H_Sortie_Point[p] - Prest_Hr_Debut)
                                    somme = somme.Add(H_Sortie_Point[p].Subtract(Prest_Hr_Debut));
                                }

                            }
                            dr6.Close();
                        }

                        int heure_Cons = (hre[compteur_Cours] * 2) / 3;
                        somme_Sem_Hr = somme_Sem_Hr + hre[compteur_Cours];


                        if (somme.TotalHours < heure_Cons)
                        {
                            cell = new PdfPCell(new Phrase("" + somme.TotalHours + "", font_bold_8_white));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.RED;
                            tab.AddCell(cell);
                            somme_Sem = somme_Sem.Add(somme);
                            compteur_Cours++;
                        }
                        else
                        {
                            cell = new PdfPCell(new Phrase("" + somme.TotalHours + "", font_bold_8));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            tab.AddCell(cell);
                            somme_Sem = somme_Sem.Add(somme);
                            compteur_Cours++;
                        }

                    }

                    int h_Cons_Sem = (somme_Sem_Hr * 2) / 3;

                    if (somme_Sem.TotalHours < h_Cons_Sem)
                    {
                        mention_An = mention_An.Add(somme_Sem);
                        cell = new PdfPCell(new Phrase("" + somme_Sem.TotalHours + "", font_bold_8_white));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.RED;
                        tab.AddCell(cell);
                    }
                    else
                    {
                        mention_An = mention_An.Add(somme_Sem);
                        cell = new PdfPCell(new Phrase("" + somme_Sem.TotalHours + "", font_bold_8));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        tab.AddCell(cell);
                    }
                }

                int h_Cons_An = (totalHrs * 2) / 3;

                if (mention_An.TotalHours < h_Cons_An)
                {
                    cell = new PdfPCell(new Phrase(mention_An.TotalHours + "", font_bold_8_white));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.RED;
                    tab.AddCell(cell);
                }
                else
                {
                    cell = new PdfPCell(new Phrase(mention_An.TotalHours + "", font_bold_8));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    tab.AddCell(cell);
                }
                num_Etud++;
            }

            /*------------------------------------------------------------------------------*/

            doc.Add(tab);


            PdfPTable tVisa = new PdfPTable(5);//Creer une table de 5 colonnes
            float[] colwithv = { 7f, 7f, 7f, 7f, 12f };//parametrer les domensions(largeur) de chacune des collonnes
            tVisa.SetWidths(colwithv);//appliquer ces dimenstions a l atable


            cell = new PdfPCell(new Phrase("", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidthLeft = 0;
            cell.BorderWidthRight = 0;
            cell.BorderWidthTop = 0;
            cell.BorderWidth = 0;
            cell.Colspan = 5;
            cell.Rowspan = 3;
            tVisa.AddCell(cell);

            cell = new PdfPCell(new Phrase("", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidthLeft = 0;
            cell.BorderWidthRight = 0;
            cell.BorderWidthTop = 0;
            cell.BorderWidth = 0;
            cell.Colspan = 4;
            tVisa.AddCell(cell);

            string dat = "Fait à " + siege + " ,le " + DateTime.Today.Date.ToShortDateString();

            cell = new PdfPCell(new Phrase(dat, font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidthLeft = 0;
            cell.BorderWidthRight = 0;
            cell.BorderWidthTop = 0;
            cell.BorderWidth = 0;
            tVisa.AddCell(cell);

            Paragraph pVisa = new Paragraph();
            //parf.IndentationLeft = 240;
            pVisa.Alignment = Element.ALIGN_CENTER;
            //pVisa.SpacingAfter = 6;
            pVisa.SpacingBefore = 8;
            pVisa.Add(tVisa);
            doc.Add(pVisa);

            doc.Close();

            System.Diagnostics.Process.Start(outputFile);
            conn.Close();
        }

        public void Etudiant_Rapport_Presence_par_Cours(int id_a, int id_f, int id_d, int id_cl, string nom_anne, string nom_fac, string nom_dep, string nom_cl, int has_depart, int nb_crs, string nom_cou, int h_cours, int id_cou)
        {

            int id_anne = id_a;
            int id_faculte = id_f;
            int id_departement = id_d;
            int id_classe = id_cl;
            int nb_cours = nb_crs;
            int has_departement = has_depart;
            int heure_Cours = h_cours;
            int id_cours = id_cou;
            string nom_anneee = nom_anne, nom_faculte = nom_fac, nom_departement = nom_dep, nom_classe = nom_cl, nom_cours = nom_cou;

            Create_Folder();


            DateTime dt = DateTime.Now;
            int year = dt.Year;
            int mois = dt.Month;
            int jour = dt.Day;
            int heure = dt.Hour;
            int min = dt.Minute;
            int sec = dt.Month;
            string date = jour + "-" + mois + "-" + year + "_à_" + heure + "h" + min + "min" + sec + "sec";

            iTextSharp.text.Document doc = new iTextSharp.text.Document(PageSize.A4.Rotate(), 0, 0, 5, 5);
            string docname = "Rapport_Pointage_Par_Cours" + date + ".pdf";
            string outputFile = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.Desktop), @"BMDSys", docname);
            FileStream fs = new FileStream(outputFile, FileMode.Create, FileAccess.Write, FileShare.None);
            PdfWriter wri = PdfWriter.GetInstance(doc, fs);
            doc.Open();

            conn = new MySqlConnection(Authentification.MyString);
            conn.Open();

            string universite = Load_Institution(conn);

            string coordonee = Load_Adress(conn);
            string value = coordonee;
            string[] op = value.Split('-');
            site = op[0];
            siege = op[1];
            telephone = op[2];
            b_postale = op[3];

            PdfPCell cell = new PdfPCell(new Phrase("", font_bold_10));
            PdfPTable table1 = first_header(conn, universite, ref cell, "");
            doc.Add(table1);

            iTextSharp.text.Paragraph txt_t = new iTextSharp.text.Paragraph(" ", font_bold_8_black);
            txt_t.Alignment = Element.ALIGN_CENTER;
            txt_t.SpacingBefore = 10;
            txt_t.SpacingAfter = 10;
            doc.Add(txt_t);

            PdfPTable taba = new PdfPTable(4);//Creer une table de 5 colonnes
            float[] coltaba = { 10f, 12f, 6f, 15f };//parametrer les domensions(largeur) de chacune des collonnes
            taba.SetWidths(coltaba);

            cell = new PdfPCell(new Phrase("Année Academique", font_bold_8_black));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidth = 0;
            taba.AddCell(cell);

            cell = new PdfPCell(new Phrase(": " + nom_anneee, font_bold_8_black));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidth = 0;
            taba.AddCell(cell);

            cell = new PdfPCell(new Phrase(" ", font_bold_8_black));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidth = 0;
            cell.Colspan = 2;
            cell.Rowspan = 6;
            taba.AddCell(cell);

            cell = new PdfPCell(new Phrase("Faculte", font_bold_8_black));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidth = 0;
            taba.AddCell(cell);

            cell = new PdfPCell(new Phrase(": " + nom_faculte, font_bold_8_black));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidth = 0;
            taba.AddCell(cell);
            cell = new PdfPCell(new Phrase("Département", font_bold_8_black));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidth = 0;
            taba.AddCell(cell);

            if (has_departement == 0 || has_departement == 1)
            {
                cell = new PdfPCell(new Phrase(": ", font_bold_8_black));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);
            }
            else if (has_departement > 1)
            {
                cell = new PdfPCell(new Phrase(": " + nom_departement, font_bold_8_black));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);
            }

            cell = new PdfPCell(new Phrase("Classe", font_bold_8_black));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidth = 0;
            taba.AddCell(cell);

            cell = new PdfPCell(new Phrase(": " + nom_classe, font_bold_8_black));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidth = 0;
            taba.AddCell(cell);

            cell = new PdfPCell(new Phrase("Cours", font_bold_8_black));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidth = 0;
            taba.AddCell(cell);

            cell = new PdfPCell(new Phrase(": " + nom_cours, font_bold_8_black));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidth = 0;
            taba.AddCell(cell);

            cell = new PdfPCell(new Phrase("V.H", font_bold_8_black));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidth = 0;
            taba.AddCell(cell);

            cell = new PdfPCell(new Phrase(": " + heure_Cours + " H", font_bold_8_black));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidth = 0;
            taba.AddCell(cell);
            doc.Add(taba);

            Paragraph parf = new Paragraph();
            //parf.IndentationLeft = 240;
            string ta = "RAPPORT DES PRESENCES PAR COURS";
            parf.Add(new Phrase(ta, font_underlined_9_bold));
            parf.Alignment = Element.ALIGN_CENTER;
            parf.SpacingAfter = 10;
            parf.SpacingBefore = 10;
            doc.Add(parf);

            PdfPTable tab = new PdfPTable(3);
            float[] widths = { 4f, 15f, 7f };
            tab.SetWidths(widths);

            cell = new PdfPCell(new Phrase("Numero", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            tab.AddCell(cell);

            cell = new PdfPCell(new Phrase("Nom et Prenom ", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            tab.AddCell(cell);

            cell = new PdfPCell(new Phrase("Heure de Presence", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            tab.AddCell(cell);

            /*----------------------------------ETUDIANTS--------------------------------------------*/
            List<string> etud_List = new List<string>();
            List<int> etud_List_id = new List<int>();
            int num_Etud = 1;
            string rqt4 = "SELECT DISTINCT etu.id_etudiant, CONCAT(etu.nom," + "  " + "etu.prenom) as fullname "
                            + " FROM etudiant etu INNER JOIN etudiant_inscription etIns ON etu.id_etudiant=etIns.id_etudiant"
                            + " WHERE etIns.id_annee=@id_an AND etIns.id_faculte=@id_fac AND etIns.id_departement=@id_dep"
                            + " AND etIns.id_classe=@id_cl ORDER BY fullname";
            MySqlCommand cmd4 = new MySqlCommand(rqt4, conn);
            cmd4.Parameters.AddWithValue("@id_an", id_anne);
            cmd4.Parameters.AddWithValue("@id_fac", id_faculte);
            cmd4.Parameters.AddWithValue("@id_dep", id_departement);
            cmd4.Parameters.AddWithValue("@id_cl", id_classe);
            MySqlDataReader dr4 = cmd4.ExecuteReader();

            while (dr4.Read())
            {
                etud_List.Add(dr4.GetString(1));
                etud_List_id.Add(dr4.GetInt32(0));
            }
            dr4.Close();

            string[] etudiants = etud_List.ToArray();
            int[] etidiant_Id = etud_List_id.ToArray();

            for (int n = 0; n < etudiants.Length; n++)
            {
                List<DateTime> List_Date_Point = new List<DateTime>();
                List<TimeSpan> List_H_Entre_Point = new List<TimeSpan>();
                List<TimeSpan> List_H_Sortie_Point = new List<TimeSpan>();

                // TimeSpan mention_An = new TimeSpan();
                int etComp = 0;

                cell = new PdfPCell(new Phrase("" + num_Etud, font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                tab.AddCell(cell);

                cell = new PdfPCell(new Phrase("" + etudiants[n], font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                tab.AddCell(cell);

                string rqt5 = "SELECT etudiant.nom, etudiant.prenom,pointage.heure_entre,pointage.heure_sortie, pointage.date "
                               + " FROM etudiant INNER JOIN etudiant_inscription etIns ON etudiant.id_etudiant=etIns.id_etudiant "
                               + " INNER JOIN pointage ON pointage.id_inscription=etIns.id_inscription WHERE etIns.id_annee=@id_ann "
                               + " AND etIns.id_faculte=@id_fac AND etIns.id_departement=@id_dep AND etIns.id_classe=@id_cla AND"
                               + " pointage.heure_sortie!='00:00:00' AND etudiant.id_etudiant=@id_etud";

                MySqlCommand cmd5 = new MySqlCommand(rqt5, conn);
                cmd5.Parameters.AddWithValue("@id_ann", id_anne);
                cmd5.Parameters.AddWithValue("@id_fac", id_faculte);
                cmd5.Parameters.AddWithValue("@id_dep", id_departement);
                cmd5.Parameters.AddWithValue("@id_cla", id_classe);
                cmd5.Parameters.AddWithValue("@id_etud", etidiant_Id[n]);
                MySqlDataReader dr5 = cmd5.ExecuteReader();

                while (dr5.Read())
                {
                    List_Date_Point.Add(dr5.GetDateTime(4));
                    List_H_Entre_Point.Add(dr5.GetTimeSpan(2));
                    List_H_Sortie_Point.Add(dr5.GetTimeSpan(3));
                }
                dr5.Close();

                DateTime[] Date_Point = List_Date_Point.ToArray();
                TimeSpan[] H_Entre_Point = List_H_Entre_Point.ToArray();
                TimeSpan[] H_Sortie_Point = List_H_Sortie_Point.ToArray();


                TimeSpan somme = new TimeSpan();
                for (int p = 0; p < Date_Point.Length; p++)
                {
                    string laDate = Date_Point[p].ToString("dd-MM-yyyy");

                    string rqt6 = "SELECT horaire.id_horaire, horaire.date, prestation.heureD,prestation.heureF,"
                                 + " cours.cours FROM horaire INNER JOIN cours ON cours.id_cours=horaire.id_cours "
                                 + " INNER JOIN prestation ON prestation.id_horaire=horaire.id_horaire WHERE"
                                 + " cours.id_annee=@id_annee AND cours.id_faculte=@id_fac AND cours.id_departement=@id_dep AND "
                                 + " cours.id_classe=@id_classe AND horaire.date=@dateP AND cours.id_cours=@id_cour";
                    MySqlCommand cmd6 = new MySqlCommand(rqt6, conn);
                    cmd6.Parameters.AddWithValue("@id_annee", id_anne);
                    cmd6.Parameters.AddWithValue("@id_fac", id_faculte);
                    cmd6.Parameters.AddWithValue("@id_dep", id_departement);
                    cmd6.Parameters.AddWithValue("@id_classe", id_classe);
                    cmd6.Parameters.AddWithValue("@dateP", laDate);
                    cmd6.Parameters.AddWithValue("@id_cour", id_cours);
                    MySqlDataReader dr6 = cmd6.ExecuteReader();

                    while (dr6.Read())
                    {
                        string H_D = dr6.GetString(2);
                        string H_F = dr6.GetString(3);

                        string[] H_D_tab = H_D.Split('h');
                        string[] H_F_tab = H_F.Split('h');

                        TimeSpan h_d1 = TimeSpan.FromHours(Convert.ToDouble(H_D_tab[0]));
                        TimeSpan h_d2 = TimeSpan.FromMinutes(Convert.ToDouble(H_D_tab[1]));
                        TimeSpan Prest_Hr_Debut = h_d1.Add(h_d2);

                        TimeSpan h_d3 = TimeSpan.FromHours(Convert.ToDouble(H_F_tab[0]));
                        TimeSpan h_d4 = TimeSpan.FromMinutes(Convert.ToDouble(H_F_tab[1]));
                        TimeSpan Prest_Hr_Fin = h_d3.Add(h_d4);

                        if (Prest_Hr_Fin <= H_Entre_Point[p])
                        {
                        }
                        else if (Prest_Hr_Debut >= H_Sortie_Point[p])
                        {
                        }
                        else if (Prest_Hr_Debut <= H_Entre_Point[p] && Prest_Hr_Fin <= H_Sortie_Point[p])
                        {
                            // Si vrai, on va faire la difference entre (Prest_Hr_Fin - H_Entre_Point[p])
                            somme = somme.Add(Prest_Hr_Fin.Subtract(H_Entre_Point[p]));
                        }
                        else if (Prest_Hr_Debut <= H_Entre_Point[p] && Prest_Hr_Fin >= H_Sortie_Point[p])
                        {
                            //Si vrai, on va faire la difference entre (H_Sortie_Point[p] - H_Entre_Point[p])
                            somme = somme.Add(H_Sortie_Point[p].Subtract(H_Entre_Point[p]));
                        }
                        else if (Prest_Hr_Debut >= H_Entre_Point[p] && Prest_Hr_Fin <= H_Sortie_Point[p])
                        {
                            //Si vrai, on va faire la difference entre (Prest_Hr_Fin - Prest_Hr_Debut)
                            somme = somme.Add(Prest_Hr_Fin.Subtract(Prest_Hr_Debut));
                        }
                        else if (Prest_Hr_Debut >= H_Entre_Point[p] && Prest_Hr_Fin >= H_Sortie_Point[p])
                        {
                            //Si vrai, on va faire la difference entre (H_Sortie_Point[p] - Prest_Hr_Debut)
                            somme = somme.Add(H_Sortie_Point[p].Subtract(Prest_Hr_Debut));
                        }

                    }
                    dr6.Close();
                }

                int heure_Cons = (heure_Cours * 2) / 3;

                if (somme.TotalHours < heure_Cons)
                {
                    cell = new PdfPCell(new Phrase("" + somme.TotalHours + ":" + somme.Minutes, font_bold_8_white));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.RED;
                    tab.AddCell(cell);
                }
                else
                {
                    cell = new PdfPCell(new Phrase("" + somme.TotalHours + ":" + somme.Minutes, font_bold_8));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    tab.AddCell(cell);
                }

                num_Etud++;
            }



            doc.Add(tab);

            PdfPTable tVisa = new PdfPTable(5);//Creer une table de 5 colonnes
            float[] colwithv = { 7f, 7f, 7f, 7f, 12f };//parametrer les domensions(largeur) de chacune des collonnes
            tVisa.SetWidths(colwithv);//appliquer ces dimenstions a l atable


            cell = new PdfPCell(new Phrase("", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidthLeft = 0;
            cell.BorderWidthRight = 0;
            cell.BorderWidthTop = 0;
            cell.BorderWidth = 0;
            cell.Colspan = 5;
            cell.Rowspan = 3;
            tVisa.AddCell(cell);

            cell = new PdfPCell(new Phrase("", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidthLeft = 0;
            cell.BorderWidthRight = 0;
            cell.BorderWidthTop = 0;
            cell.BorderWidth = 0;
            cell.Colspan = 4;
            tVisa.AddCell(cell);

            string dat = "Fait à " + siege + " ,le " + DateTime.Today.Date.ToShortDateString();

            cell = new PdfPCell(new Phrase(dat, font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidthLeft = 0;
            cell.BorderWidthRight = 0;
            cell.BorderWidthTop = 0;
            cell.BorderWidth = 0;
            tVisa.AddCell(cell);

            Paragraph pVisa = new Paragraph();
            //parf.IndentationLeft = 240;
            pVisa.Alignment = Element.ALIGN_CENTER;
            //pVisa.SpacingAfter = 6;
            pVisa.SpacingBefore = 8;
            pVisa.Add(tVisa);
            doc.Add(pVisa);

            doc.Close();

            System.Diagnostics.Process.Start(outputFile);
            conn.Close();

        }

        public void etudiant_matricule_Generate_pdf(string nom, string prenom, string matricule)
        {
            DateTime dt = DateTime.Now;
            int year = dt.Year;
            int mois = dt.Month;
            int jour = dt.Day;
            int heure = dt.Hour;
            int min = dt.Minute;
            int sec = dt.Month;
            string date = jour + "-" + mois + "-" + year + "_à_" + heure + "h" + min + "min" + sec + "sec";

            Create_Folder();

            PdfPCell cell;

            iTextSharp.text.Document doc = new iTextSharp.text.Document(PageSize.A4.Rotate(), 0, 0, 5, 5);
            string docname = "matricule_" + date + ".pdf";
            string outputFile = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.Desktop), @"BMDSys", docname);
            FileStream fs = new FileStream(outputFile, FileMode.Create, FileAccess.Write, FileShare.None);
            PdfWriter wri = PdfWriter.GetInstance(doc, fs);
            doc.Open();

            PdfPTable taba = new PdfPTable(4);//Creer une table de 5 colonnes
            float[] coltaba = { 10f, 12f, 6f, 15f };//parametrer les domensions(largeur) de chacune des collonnes
            taba.SetWidths(coltaba);

            cell = new PdfPCell(new Phrase("Nom de l'etudiant  ", font_normal_9));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidth = 0;
            taba.AddCell(cell);

            cell = new PdfPCell(new Phrase(": " + nom, font_normal_9));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidth = 0;
            taba.AddCell(cell);

            cell = new PdfPCell(new Phrase(" ", font_normal_9));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidth = 0;
            cell.Colspan = 2;
            cell.Rowspan = 6;
            taba.AddCell(cell);

            cell = new PdfPCell(new Phrase("Son prenom  ", font_normal_9));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidth = 0;
            taba.AddCell(cell);

            cell = new PdfPCell(new Phrase(": " + prenom, font_normal_9));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidth = 0;
            taba.AddCell(cell);

            cell = new PdfPCell(new Phrase("Sa matricule  ", font_normal_9));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidth = 0;
            taba.AddCell(cell);

            cell = new PdfPCell(new Phrase(": " + matricule, font_normal_9));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidth = 0;
            taba.AddCell(cell);

            doc.Add(taba);
            doc.Close();

            System.Diagnostics.Process.Start(outputFile);

        }


        public void Rapport_Presence_par_etudiant(int id_a, int id_f, int id_d, int id_cl, string nom_anne, string nom_fac, string nom_dep, string nom_cl, int id_etud,string nom_etud, string txt_date)
        {

            int id_anne = id_a;
            int id_faculte = id_f;
            int id_departement = id_d;
            int id_classe = id_cl;
            int id_etudiant = id_etud;

            string nom_anneee = nom_anne, nom_faculte = nom_fac, nom_departement = nom_dep, nom_classe = nom_cl, nom_etudiant=nom_etud;

            Create_Folder();


            DateTime dt = DateTime.Now;
            int year = dt.Year;
            int mois = dt.Month;
            int jour = dt.Day;
            int heure = dt.Hour;
            int min = dt.Minute;
            int sec = dt.Month;
            string date = jour + "-" + mois + "-" + year + "_à_" + heure + "h" + min + "min" + sec + "sec";

            iTextSharp.text.Document doc = new iTextSharp.text.Document(PageSize.A4.Rotate(), 0, 0, 5, 5);
            string docname = "Rapport_Pointage_Par_etudiant" + date + ".pdf";
            string outputFile = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.Desktop), @"BMDSys", docname);
            FileStream fs = new FileStream(outputFile, FileMode.Create, FileAccess.Write, FileShare.None);
            PdfWriter wri = PdfWriter.GetInstance(doc, fs);
            doc.Open();

            conn = new MySqlConnection(Authentification.MyString);
            conn.Open();

            string universite = Load_Institution(conn);

            string coordonee = Load_Adress(conn);
            string value = coordonee;
            string[] op = value.Split('-');
            site = op[0];
            siege = op[1];
            telephone = op[2];
            b_postale = op[3];

            PdfPCell cell = new PdfPCell(new Phrase("", font_bold_10));
            PdfPTable table1 = first_header(conn, universite, ref cell, "");
            doc.Add(table1);

            iTextSharp.text.Paragraph txt_t = new iTextSharp.text.Paragraph(" ", font_bold_8_black);
            txt_t.Alignment = Element.ALIGN_CENTER;
            txt_t.SpacingBefore = 10;
            txt_t.SpacingAfter = 10;
            doc.Add(txt_t);

            PdfPTable taba = new PdfPTable(4);//Creer une table de 5 colonnes
            float[] coltaba = { 10f, 12f, 6f, 15f };//parametrer les domensions(largeur) de chacune des collonnes
            taba.SetWidths(coltaba);

            cell = new PdfPCell(new Phrase("Année Academique", font_bold_8_black));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidth = 0;
            taba.AddCell(cell);

            cell = new PdfPCell(new Phrase(": " + nom_anneee, font_bold_8_black));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidth = 0;
            taba.AddCell(cell);

            cell = new PdfPCell(new Phrase(" ", font_bold_8_black));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidth = 0;
            cell.Colspan = 2;
            cell.Rowspan = 6;
            taba.AddCell(cell);

            cell = new PdfPCell(new Phrase("Faculte", font_bold_8_black));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidth = 0;
            taba.AddCell(cell);

            cell = new PdfPCell(new Phrase(": " + nom_faculte, font_bold_8_black));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidth = 0;
            taba.AddCell(cell);
            cell = new PdfPCell(new Phrase("Département", font_bold_8_black));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidth = 0;
            taba.AddCell(cell);

                cell = new PdfPCell(new Phrase(": " + nom_departement, font_bold_8_black));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);
            

            cell = new PdfPCell(new Phrase("Classe", font_bold_8_black));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidth = 0;
            taba.AddCell(cell);

            cell = new PdfPCell(new Phrase(": " + nom_classe, font_bold_8_black));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidth = 0;
            taba.AddCell(cell);

            cell = new PdfPCell(new Phrase("Nom et prenom", font_bold_8_black));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidth = 0;
            taba.AddCell(cell);

            cell = new PdfPCell(new Phrase(": " + nom_etudiant, font_bold_8_black));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidth = 0;
            taba.AddCell(cell);

            cell = new PdfPCell(new Phrase("Date", font_bold_8_black));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidth = 0;
            taba.AddCell(cell);

            cell = new PdfPCell(new Phrase(": " + txt_date, font_bold_8_black));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidth = 0;
            taba.AddCell(cell);

            doc.Add(taba);

            Paragraph parf = new Paragraph();
            //parf.IndentationLeft = 240;
            string ta = "RAPPORT DE POINTAGE POUR UN ETUDIANT";
            parf.Add(new Phrase(ta, font_underlined_9_bold));
            parf.Alignment = Element.ALIGN_CENTER;
            parf.SpacingAfter = 10;
            parf.SpacingBefore = 10;
            doc.Add(parf);


            PdfPTable tV = new PdfPTable(4);//Creer une table de 5 colonnes
            float[] colwithv = { 12f, 7f, 7f, 12f};//parametrer les domensions(largeur) de chacune des collonnes
            tV.SetWidths(colwithv);//appliquer ces dimenstions a l atable

            string req1 = "select count(*) from pointage inner join etudiant_inscription on" 
                        +" etudiant_inscription.id_inscription=pointage.id_inscription  where date ='" + txt_date + "' and etudiant_inscription.id_etudiant='" + id_etudiant + "'";
            MySqlConnection con = new MySqlConnection(Authentification.MyString);
            con.Open();
            MySqlCommand cmd = new MySqlCommand(req1, con);
            int nbr = Convert.ToInt32(cmd.ExecuteScalar());
        
            
            cell = new PdfPCell(new Phrase("", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidthLeft = 0;
            cell.BorderWidthRight = 0;
            cell.BorderWidthTop = 0;
            cell.BorderWidth = 0;
            cell.Rowspan = nbr+1;
            tV.AddCell(cell);

            cell = new PdfPCell(new Phrase("Heure d'entrée", font_bold_10));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 1;
            tV.AddCell(cell);

            cell = new PdfPCell(new Phrase("Heure de sortie", font_bold_10));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidth = 1;
            tV.AddCell(cell);

            cell = new PdfPCell(new Phrase("", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidthLeft = 0;
            cell.BorderWidthRight = 0;
            cell.BorderWidthTop = 0;
            cell.BorderWidth = 0;
            cell.Rowspan = nbr+1;
            tV.AddCell(cell);

           

            string req2 = "select heure_entre, heure_sortie from pointage inner join etudiant_inscription on"
                         + " etudiant_inscription.id_inscription=pointage.id_inscription  where date ='" + txt_date + "' and etudiant_inscription.id_etudiant='" + id_etudiant + "'";


            MySqlCommand cm = new MySqlCommand(req2, con);
            MySqlDataReader rd = cm.ExecuteReader();
            while (rd.Read())
            {
                
                cell = new PdfPCell(new Phrase(rd.GetString(0), font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidth = 1;
                tV.AddCell(cell);

                cell = new PdfPCell(new Phrase(rd.GetString(1), font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                cell.BorderWidth = 1;
                tV.AddCell(cell);


            }
            doc.Add(tV);
            rd.Close();

            PdfPTable tVisa = new PdfPTable(5);//Creer une table de 5 colonnes
            float[] colwith = { 7f, 7f, 7f, 7f, 12f };//parametrer les domensions(largeur) de chacune des collonnes
            tVisa.SetWidths(colwith);//appliquer ces dimenstions a l atable


            cell = new PdfPCell(new Phrase("", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidthLeft = 0;
            cell.BorderWidthRight = 0;
            cell.BorderWidthTop = 0;
            cell.BorderWidth = 0;
            cell.Colspan = 5;
            cell.Rowspan = 3;
            tVisa.AddCell(cell);

            cell = new PdfPCell(new Phrase("", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidthLeft = 0;
            cell.BorderWidthRight = 0;
            cell.BorderWidthTop = 0;
            cell.BorderWidth = 0;
            cell.Colspan = 4;
            tVisa.AddCell(cell);

            string dat = "Fait à " + siege + " ,le " + DateTime.Today.Date.ToShortDateString();

            cell = new PdfPCell(new Phrase(dat, font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidthLeft = 0;
            cell.BorderWidthRight = 0;
            cell.BorderWidthTop = 0;
            cell.BorderWidth = 0;
            tVisa.AddCell(cell);

            Paragraph pVisa = new Paragraph();
            //parf.IndentationLeft = 240;
            pVisa.Alignment = Element.ALIGN_CENTER;
            //pVisa.SpacingAfter = 6;
            pVisa.SpacingBefore = 8;
            pVisa.Add(tVisa);
            doc.Add(pVisa);

            doc.Close();

            System.Diagnostics.Process.Start(outputFile);
            conn.Close();

        }


        public void rapprochement_presence_reussite(int id_a, int id_f, int id_d, int id_cl, string nom_anne, string nom_fac, string nom_dep, string nom_cl, int has_depart)
        {
            int id_anne = id_a;
            int id_faculte = id_f;
            int id_departement = id_d;
            int id_classe = id_cl;
            int has_departement = has_depart;

            string nom_anneee = nom_anne, nom_faculte = nom_fac, nom_departement = nom_dep, nom_classe = nom_cl;

            Create_Folder();


            DateTime dt = DateTime.Now;
            int year = dt.Year;
            int mois = dt.Month;
            int jour = dt.Day;
            int heure = dt.Hour;
            int min = dt.Minute;
            int sec = dt.Month;
            string date = jour + "-" + mois + "-" + year + "_à_" + heure + "h" + min + "min" + sec + "sec";

            iTextSharp.text.Document doc = new iTextSharp.text.Document(PageSize.A4,10,10,10,10);
            string docname = "Rapport_raprochement_note_presence" + date + ".pdf";
            string outputFile = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.Desktop), @"BMDSys", docname);
            FileStream fs = new FileStream(outputFile, FileMode.Create, FileAccess.Write, FileShare.None);
            PdfWriter wri = PdfWriter.GetInstance(doc, fs);
            doc.Open();

            conn = new MySqlConnection(Authentification.MyString);
            conn.Open();

            string universite = Load_Institution(conn);

            string coordonee = Load_Adress(conn);
            string value = coordonee;
            string[] op = value.Split('-');
            site = op[0];
            siege = op[1];
            telephone = op[2];
            b_postale = op[3];

            PdfPCell cell = new PdfPCell(new Phrase("", font_bold_10));
            PdfPTable table1 = first_header(conn, universite, ref cell, "");
            doc.Add(table1);

            iTextSharp.text.Paragraph txt_t = new iTextSharp.text.Paragraph(" ", font_bold_8_black);
            txt_t.Alignment = Element.ALIGN_CENTER;
            txt_t.SpacingBefore = 10;
            txt_t.SpacingAfter = 10;
            doc.Add(txt_t);

            PdfPTable taba = new PdfPTable(4);//Creer une table de 5 colonnes
            float[] coltaba = { 10f, 12f, 6f, 15f };//parametrer les domensions(largeur) de chacune des collonnes
            taba.SetWidths(coltaba);

            cell = new PdfPCell(new Phrase("Année Academique", font_bold_8_black));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidth = 0;
            taba.AddCell(cell);

            cell = new PdfPCell(new Phrase(": " + nom_anneee, font_bold_8_black));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidth = 0;
            taba.AddCell(cell);

            cell = new PdfPCell(new Phrase(" ", font_bold_8_black));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidth = 0;
            cell.Colspan = 2;
            cell.Rowspan = 4;
            taba.AddCell(cell);

            cell = new PdfPCell(new Phrase("Faculte", font_bold_8_black));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidth = 0;
            taba.AddCell(cell);

            cell = new PdfPCell(new Phrase(": " + nom_faculte, font_bold_8_black));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidth = 0;
            taba.AddCell(cell);
            cell = new PdfPCell(new Phrase("Département", font_bold_8_black));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidth = 0;
            taba.AddCell(cell);

            if (has_departement == 0 || has_departement == 1)
            {
                cell = new PdfPCell(new Phrase(": ", font_bold_8_black));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);
            }
            else if (has_departement > 1)
            {
                cell = new PdfPCell(new Phrase(": " + nom_departement, font_bold_8_black));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                cell.BorderWidth = 0;
                taba.AddCell(cell);
            }

            cell = new PdfPCell(new Phrase("Classe", font_bold_8_black));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidth = 0;
            taba.AddCell(cell);

            cell = new PdfPCell(new Phrase(": " + nom_classe, font_bold_8_black));
            cell.HorizontalAlignment = Element.ALIGN_LEFT;
            cell.BorderWidth = 0;
            taba.AddCell(cell);
            doc.Add(taba);

            Paragraph parf = new Paragraph();
            //parf.IndentationLeft = 240;
            string ta = "Rapprochement PRESENCE-REUSSITE";
            parf.Add(new Phrase(ta, font_underlined_9_bold));
            parf.Alignment = Element.ALIGN_CENTER;
            parf.SpacingAfter = 10;
            parf.SpacingBefore = 10;
            doc.Add(parf);


            PdfPTable tab = new PdfPTable(6);
            float[] coltba = { 1f, 10f, 3f, 4f, 3f, 3f};//parametrer les domensions(largeur) de chacune des collonnes
            tab.SetWidths(coltba);

            cell = new PdfPCell(new Phrase(" ", font_bold_8_black));
            cell.Colspan = 2;
            cell.Border = 0;
            tab.AddCell(cell);


            cell = new PdfPCell(new Phrase("Taux de presence", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            tab.AddCell(cell);

            cell = new PdfPCell(new Phrase("Pourcentage annuel", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            tab.AddCell(cell);

            cell = new PdfPCell(new Phrase("Mention", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            tab.AddCell(cell);

            cell = new PdfPCell(new Phrase("Decision", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            tab.AddCell(cell);


            /*----------------------------------ETUDIANTS--------------------------------------------*/
            List<string> etud_List = new List<string>();
            List<int> etud_List_id = new List<int>();
            int num_Etud = 1;
            string rqt4 = "SELECT DISTINCT etu.id_etudiant, CONCAT(etu.nom," + "  " + "etu.prenom) as fullname "
                            + " FROM etudiant etu INNER JOIN deliberation etIns ON etu.id_etudiant=etIns.id_etudiant"
                            + " WHERE etIns.id_annee=@id_an AND etIns.id_faculte=@id_fac AND etIns.id_departement=@id_dep"
                            + " AND etIns.id_classe=@id_cl AND etIns.id_session=@id_sess ORDER BY fullname";
            MySqlCommand cmd4 = new MySqlCommand(rqt4, conn);
            cmd4.Parameters.AddWithValue("@id_an", id_anne);
            cmd4.Parameters.AddWithValue("@id_fac", id_faculte);
            cmd4.Parameters.AddWithValue("@id_dep", id_departement);
            cmd4.Parameters.AddWithValue("@id_cl", id_classe);
            cmd4.Parameters.AddWithValue("@id_sess", 1);
            MySqlDataReader dr4 = cmd4.ExecuteReader();

            while (dr4.Read())
            {
                etud_List.Add(dr4.GetString(1));
                etud_List_id.Add(dr4.GetInt32(0));
            }
            dr4.Close();

            string[] etudiants = etud_List.ToArray();
            int[] etidiant_Id = etud_List_id.ToArray();

            int total_prestations_requises_en_seconde = 0;
            int total_prestations_effective_en_seconde = 0;


            string sq0 = "SELECT prestation.heureD, prestation.heureF "
                            + " FROM horaire INNER JOIN prestation ON horaire.id_horaire = prestation.id_horaire"
                            + " WHERE horaire.id_annee=@id_an AND horaire.id_faculte=@id_fac AND horaire.id_departement=@id_dep AND horaire.id_classe=@id_cl";
            MySqlCommand cm0 = new MySqlCommand(sq0, conn);
            cm0.Parameters.AddWithValue("@id_an", id_anne);
            cm0.Parameters.AddWithValue("@id_fac", id_faculte);
            cm0.Parameters.AddWithValue("@id_dep", id_departement);
            cm0.Parameters.AddWithValue("@id_cl", id_classe);
            MySqlDataReader dr0 = cm0.ExecuteReader();

            //while (dr0.Read())
            //{
              
            //    string debut = dr0.GetString(0);
            //    string[] d1 = debut.Split('h');
            //    int seconde11 = 3600 * Convert.ToInt32(d1[0]);
            //    int seconde12 = 60 * Convert.ToInt32(d1[1]);

            //    string fin = dr0.GetString(1);
            //    string[] f1 = fin.Split('h');
            //    int seconde21 = 3600 * Convert.ToInt32(f1[0]);
            //    int seconde22 = 60 * Convert.ToInt32(f1[1]);
            //    total_prestations_requises_en_seconde += (seconde11 + seconde12 + seconde21 + seconde22);
            //}
            //dr0.Close();


            
            //List<string> Prest_Date_List = new List<string>();
            //int n_date=0;
            //string sq = "SELECT DISTINCT horaire.date "
            //                + " FROM horaire INNER JOIN prestation ON horaire.id_horaire = prestation.id_horaire"
            //                + " WHERE horaire.id_annee=@id_an AND horaire.id_faculte=@id_fac AND horaire.id_departement=@id_dep AND horaire.id_classe=@id_cl"
            //                + " ORDER BY horaire.date";
            //MySqlCommand cm = new MySqlCommand(sq, conn);
            //cm.Parameters.AddWithValue("@id_an", id_anne);
            //cm.Parameters.AddWithValue("@id_fac", id_faculte);
            //cm.Parameters.AddWithValue("@id_dep", id_departement);
            //cm.Parameters.AddWithValue("@id_cl", id_classe);
            //MySqlDataReader dr = cm.ExecuteReader();
            //while (dr.Read())
            //{   n_date++;
            //    Prest_Date_List.Add(dr.GetString(0));
            //}
            //dr.Close();

            //string[] Prest_Date = Prest_Date_List.ToArray();



            //List<int> Prest_Debut_List_en_seconde = new List<int>();
            //List<int> Prest_Fin_List_en_seconde = new List<int>();

            //for (int dat = 0; dat < Prest_Date.Length; dat++)
            //{

            //    string sqx = "SELECT prestation.heureD, prestation.heureF "
            //                    + " FROM horaire INNER JOIN prestation ON horaire.id_horaire = prestation.id_horaire"
            //                    + " WHERE horaire.date=@date AND horaire.id_annee=@id_an AND horaire.id_faculte=@id_fac AND horaire.id_departement=@id_dep AND horaire.id_classe=@id_cl"
            //                    + " ORDER BY horaire.date, horaire.periode";
            //    MySqlCommand cmx = new MySqlCommand(sqx, conn);
            //    cmx.Parameters.AddWithValue("@id_an", id_anne);
            //    cmx.Parameters.AddWithValue("@id_fac", id_faculte);
            //    cmx.Parameters.AddWithValue("@id_dep", id_departement);
            //    cmx.Parameters.AddWithValue("@id_cl", id_classe);
            //    cmx.Parameters.AddWithValue("@date", Prest_Date[dat]);
            //    MySqlDataReader drx = cmx.ExecuteReader();

            //    while (drx.Read())
            //    {
            //        string debut = drx.GetString(0);
            //        string[] d1 = debut.Split('h');
            //        int seconde11 = 3600 * Convert.ToInt32(d1[0]);
            //        int seconde12 = 60 * Convert.ToInt32(d1[1]);
            //        int sum1 = seconde11 + seconde12;
            //        Prest_Debut_List_en_seconde.Add(sum1);

            //        string fin = dr.GetString(1);
            //        string[] f1 = fin.Split('h');
            //        int seconde21 = 3600 * Convert.ToInt32(f1[0]);
            //        int seconde22 = 60 * Convert.ToInt32(f1[1]);
            //        Prest_Fin_List_en_seconde.Add(seconde21 + seconde22);
            //    }
            //    dr.Close();
            //}

            //int[] Prest_Debut = Prest_Debut_List_en_seconde.ToArray();
            //int[] Prest_Fin = Prest_Fin_List_en_seconde.ToArray();
            


            for (int n = 0; n < etudiants.Length; n++)
            {
                /*string sq1 = "SELECT COUNT(id_pointage)"
                            + " FROM etudiant_inscription INNER JOIN pointage ON etudiant_inscription.id_inscription = pointage.id_inscription"
                            + " WHERE pointage.date=@date_pointage AND etudiant_inscription.id_etudiant=id_etudiant AND etudiant_inscription.id_session=@id_session";
                MySqlCommand cm1 = new MySqlCommand(sq1, conn);
                cm1.Parameters.AddWithValue("@date", Prest_Date[n]);
                cm1.Parameters.AddWithValue("@id_etudiant", etidiant_Id[n]);
                cm1.Parameters.AddWithValue("@id_session", 1);
                int nbre_prst = Convert.ToInt32(cm1.ExecuteScalar());
                if (nbre_prst > 0) 
                {
                    string sq2 = "SELECT pointage.heure_entre, pointage.heure_sortie"
                            + " FROM etudiant_inscription INNER JOIN pointage ON etudiant_inscription.id_inscription = pointage.id_inscription"
                            + " WHERE pointage.date=@date_pointage AND etudiant_inscription.id_etudiant=id_etudiant AND etudiant_inscription.id_session=@id_session";
                    MySqlCommand cm2 = new MySqlCommand(sq2, conn);
                    cm2.Parameters.AddWithValue("@date", Prest_Date[n]);
                    cm2.Parameters.AddWithValue("@id_etudiant", etidiant_Id[n]);
                    cm2.Parameters.AddWithValue("@id_session", 1);
                    MySqlDataReader dr2 = cm2.ExecuteReader();
                    while(dr2.Read())
                    {

                    }
                    dr2.Close();
                }
                */
                /*List<DateTime> List_Date_Point = new List<DateTime>();
                List<TimeSpan> List_H_Entre_Point = new List<TimeSpan>();
                List<TimeSpan> List_H_Sortie_Point = new List<TimeSpan>();

                TimeSpan mention_An = new TimeSpan();
                int etComp = 0;*/

                cell = new PdfPCell(new Phrase("" + num_Etud, font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                tab.AddCell(cell);

                cell = new PdfPCell(new Phrase("" + etudiants[n], font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_LEFT;
                tab.AddCell(cell);

                cell = new PdfPCell(new Phrase("%", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                tab.AddCell(cell);

                cell = new PdfPCell(new Phrase("%", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                tab.AddCell(cell);

                cell = new PdfPCell(new Phrase(" ", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                tab.AddCell(cell);

                cell = new PdfPCell(new Phrase(" ", font_bold_8));
                cell.HorizontalAlignment = Element.ALIGN_CENTER;
                tab.AddCell(cell);



                /*string rqt5 = "SELECT etudiant.nom, etudiant.prenom,pointage.heure_entre,pointage.heure_sortie, pointage.date "
                               + " FROM etudiant INNER JOIN etudiant_inscription etIns ON etudiant.id_etudiant=etIns.id_etudiant "
                               + " INNER JOIN pointage ON pointage.id_inscription=etIns.id_inscription WHERE etIns.id_annee=@id_ann "
                               + " AND etIns.id_faculte=@id_fac AND etIns.id_departement=@id_dep AND etIns.id_classe=@id_cla AND"
                               + " pointage.heure_sortie!='00:00:00' AND etudiant.id_etudiant=@id_etud";

                MySqlCommand cmd5 = new MySqlCommand(rqt5, conn);
                cmd5.Parameters.AddWithValue("@id_ann", id_anne);
                cmd5.Parameters.AddWithValue("@id_fac", id_faculte);
                cmd5.Parameters.AddWithValue("@id_dep", id_departement);
                cmd5.Parameters.AddWithValue("@id_cla", id_classe);
                cmd5.Parameters.AddWithValue("@id_etud", etidiant_Id[n]);
                MySqlDataReader dr5 = cmd5.ExecuteReader();

                while (dr5.Read())
                {
                    List_Date_Point.Add(dr5.GetDateTime(4));
                    List_H_Entre_Point.Add(dr5.GetTimeSpan(2));
                    List_H_Sortie_Point.Add(dr5.GetTimeSpan(3));
                }
                dr5.Close();

                DateTime[] Date_Point = List_Date_Point.ToArray();
                TimeSpan[] H_Entre_Point = List_H_Entre_Point.ToArray();
                TimeSpan[] H_Sortie_Point = List_H_Sortie_Point.ToArray();

                int compteur_Cours = 0;

                for (int i = 0; i < nb_Semestre; i++)
                {
                    TimeSpan somme_Sem = new TimeSpan();
                    int somme_Sem_Hr = 0;

                    for (int j = 0; j < nb_cours_sem[i]; j++)
                    {
                        TimeSpan somme = new TimeSpan();
                        for (int p = 0; p < Date_Point.Length; p++)
                        {
                            string laDate = Date_Point[p].ToString("dd-MM-yyyy");

                            string rqt6 = "SELECT horaire.id_horaire, horaire.date, prestation.heureD,prestation.heureF,"
                                         + " cours.cours FROM horaire INNER JOIN cours ON cours.id_cours=horaire.id_cours "
                                         + " INNER JOIN prestation ON prestation.id_horaire=horaire.id_horaire WHERE"
                                         + " cours.id_annee=@id_annee AND cours.id_faculte=@id_fac AND cours.id_departement=@id_dep AND "
                                         + " cours.id_classe=@id_classe AND horaire.date=@dateP AND cours.id_cours=@id_cour";
                            MySqlCommand cmd6 = new MySqlCommand(rqt6, conn);
                            cmd6.Parameters.AddWithValue("@id_annee", id_anne);
                            cmd6.Parameters.AddWithValue("@id_fac", id_faculte);
                            cmd6.Parameters.AddWithValue("@id_dep", id_departement);
                            cmd6.Parameters.AddWithValue("@id_classe", id_classe);
                            cmd6.Parameters.AddWithValue("@dateP", laDate);
                            cmd6.Parameters.AddWithValue("@id_cour", cours_List_Id[compteur_Cours]);
                            MySqlDataReader dr6 = cmd6.ExecuteReader();

                            while (dr6.Read())
                            {
                                string H_D = dr6.GetString(2);
                                string H_F = dr6.GetString(3);

                                string[] H_D_tab = H_D.Split('h');
                                string[] H_F_tab = H_F.Split('h');

                                TimeSpan h_d1 = TimeSpan.FromHours(Convert.ToDouble(H_D_tab[0]));
                                TimeSpan h_d2 = TimeSpan.FromMinutes(Convert.ToDouble(H_D_tab[1]));
                                TimeSpan Prest_Hr_Debut = h_d1.Add(h_d2);

                                TimeSpan h_d3 = TimeSpan.FromHours(Convert.ToDouble(H_F_tab[0]));
                                TimeSpan h_d4 = TimeSpan.FromMinutes(Convert.ToDouble(H_F_tab[1]));
                                TimeSpan Prest_Hr_Fin = h_d3.Add(h_d4);

                                if (Prest_Hr_Fin <= H_Entre_Point[p])
                                {
                                }
                                else if (Prest_Hr_Debut >= H_Sortie_Point[p])
                                {
                                }
                                else if (Prest_Hr_Debut <= H_Entre_Point[p] && Prest_Hr_Fin <= H_Sortie_Point[p])
                                {
                                    // Si vrai, on va faire la difference entre (Prest_Hr_Fin - H_Entre_Point[p])
                                    somme = somme.Add(Prest_Hr_Fin.Subtract(H_Entre_Point[p]));
                                }
                                else if (Prest_Hr_Debut <= H_Entre_Point[p] && Prest_Hr_Fin >= H_Sortie_Point[p])
                                {
                                    //Si vrai, on va faire la difference entre (H_Sortie_Point[p] - H_Entre_Point[p])
                                    somme = somme.Add(H_Sortie_Point[p].Subtract(H_Entre_Point[p]));
                                }
                                else if (Prest_Hr_Debut >= H_Entre_Point[p] && Prest_Hr_Fin <= H_Sortie_Point[p])
                                {
                                    //Si vrai, on va faire la difference entre (Prest_Hr_Fin - Prest_Hr_Debut)
                                    somme = somme.Add(Prest_Hr_Fin.Subtract(Prest_Hr_Debut));
                                }
                                else if (Prest_Hr_Debut >= H_Entre_Point[p] && Prest_Hr_Fin >= H_Sortie_Point[p])
                                {
                                    //Si vrai, on va faire la difference entre (H_Sortie_Point[p] - Prest_Hr_Debut)
                                    somme = somme.Add(H_Sortie_Point[p].Subtract(Prest_Hr_Debut));
                                }

                            }
                            dr6.Close();
                        }

                        int heure_Cons = (hre[compteur_Cours] * 2) / 3;
                        somme_Sem_Hr = somme_Sem_Hr + hre[compteur_Cours];


                        if (somme.TotalHours < heure_Cons)
                        {
                            cell = new PdfPCell(new Phrase("" + somme.TotalHours + "", font_bold_8_white));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            cell.BackgroundColor = BaseColor.RED;
                            tab.AddCell(cell);
                            somme_Sem = somme_Sem.Add(somme);
                            compteur_Cours++;
                        }
                        else
                        {
                            cell = new PdfPCell(new Phrase("" + somme.TotalHours + "", font_bold_8));
                            cell.HorizontalAlignment = Element.ALIGN_CENTER;
                            tab.AddCell(cell);
                            somme_Sem = somme_Sem.Add(somme);
                            compteur_Cours++;
                        }

                    }

                    int h_Cons_Sem = (somme_Sem_Hr * 2) / 3;

                    if (somme_Sem.TotalHours < h_Cons_Sem)
                    {
                        mention_An = mention_An.Add(somme_Sem);
                        cell = new PdfPCell(new Phrase("" + somme_Sem.TotalHours + "", font_bold_8_white));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.RED;
                        tab.AddCell(cell);
                    }
                    else
                    {
                        mention_An = mention_An.Add(somme_Sem);
                        cell = new PdfPCell(new Phrase("" + somme_Sem.TotalHours + "", font_bold_8));
                        cell.HorizontalAlignment = Element.ALIGN_CENTER;
                        cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                        tab.AddCell(cell);
                    }
                }

                int h_Cons_An = (totalHrs * 2) / 3;

                if (mention_An.TotalHours < h_Cons_An)
                {
                    cell = new PdfPCell(new Phrase(mention_An.TotalHours + "", font_bold_8_white));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.RED;
                    tab.AddCell(cell);
                }
                else
                {
                    cell = new PdfPCell(new Phrase(mention_An.TotalHours + "", font_bold_8));
                    cell.HorizontalAlignment = Element.ALIGN_CENTER;
                    cell.BackgroundColor = BaseColor.LIGHT_GRAY;
                    tab.AddCell(cell);
                }*/

                num_Etud++;
            }

            /*------------------------------------------------------------------------------*/

            doc.Add(tab);


            PdfPTable tVisa = new PdfPTable(5);//Creer une table de 5 colonnes
            float[] colwithv = { 7f, 7f, 7f, 7f, 12f };//parametrer les domensions(largeur) de chacune des collonnes
            tVisa.SetWidths(colwithv);//appliquer ces dimenstions a l atable


            cell = new PdfPCell(new Phrase("", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidthLeft = 0;
            cell.BorderWidthRight = 0;
            cell.BorderWidthTop = 0;
            cell.BorderWidth = 0;
            cell.Colspan = 5;
            cell.Rowspan = 3;
            tVisa.AddCell(cell);

            cell = new PdfPCell(new Phrase("", font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidthLeft = 0;
            cell.BorderWidthRight = 0;
            cell.BorderWidthTop = 0;
            cell.BorderWidth = 0;
            cell.Colspan = 4;
            tVisa.AddCell(cell);

            string date1 = "Fait à " + siege + " ,le " + DateTime.Today.Date.ToShortDateString();

            cell = new PdfPCell(new Phrase(date1, font_bold_8));
            cell.HorizontalAlignment = Element.ALIGN_CENTER;
            cell.BorderWidthLeft = 0;
            cell.BorderWidthRight = 0;
            cell.BorderWidthTop = 0;
            cell.BorderWidth = 0;
            tVisa.AddCell(cell);

            Paragraph pVisa = new Paragraph();
            //parf.IndentationLeft = 240;
            pVisa.Alignment = Element.ALIGN_CENTER;
            //pVisa.SpacingAfter = 6;
            pVisa.SpacingBefore = 8;
            pVisa.Add(tVisa);
            doc.Add(pVisa);

            doc.Close();

            System.Diagnostics.Process.Start(outputFile);
            conn.Close();
        }
    

    }
}